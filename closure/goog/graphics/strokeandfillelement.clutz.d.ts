//!! generated by clutz.
// Generated from graphics/strokeandfillelement.js
declare namespace ಠ_ಠ.clutz.goog.graphics {
  /**
   * Interface for a graphics element with a stroke and fill.
   * This is the base interface for ellipse, rectangle and other
   * shape interfaces.
   * You should not construct objects from this constructor. The graphics
   * will return an implementation of this interface for you.
   */
  class StrokeAndFillElement extends ಠ_ಠ.clutz.goog.graphics.Element {
    private noStructuralTyping_goog_graphics_StrokeAndFillElement : any;
    /**
     * Interface for a graphics element with a stroke and fill.
     * This is the base interface for ellipse, rectangle and other
     * shape interfaces.
     * You should not construct objects from this constructor. The graphics
     * will return an implementation of this interface for you.
     * @param element The DOM element to wrap.
     * @param graphics The graphics creating this element.
     * @param stroke The stroke to use for this element.
     * @param fill The fill to use for this element.
     */
    constructor (element : GlobalElement | null , graphics : ಠ_ಠ.clutz.goog.graphics.AbstractGraphics | null , stroke : ಠ_ಠ.clutz.goog.graphics.Stroke | null , fill : ಠ_ಠ.clutz.goog.graphics.Fill | null ) ;
    /**
     * The latest fill applied to this element.
     */
    protected fill : ಠ_ಠ.clutz.goog.graphics.Fill | null ;
    getFill ( ) : ಠ_ಠ.clutz.goog.graphics.Fill | null ;
    getStroke ( ) : ಠ_ಠ.clutz.goog.graphics.Stroke | null ;
    reapplyStroke ( ) : void ;
    /**
     * Sets the fill for this element.
     * @param fill The fill object.
     */
    setFill (fill : ಠ_ಠ.clutz.goog.graphics.Fill | null ) : void ;
    /**
     * Sets the stroke for this element.
     * @param stroke The stroke object.
     */
    setStroke (stroke : ಠ_ಠ.clutz.goog.graphics.Stroke | null ) : void ;
  }
}
declare module 'goog:goog.graphics.StrokeAndFillElement' {
  import StrokeAndFillElement = ಠ_ಠ.clutz.goog.graphics.StrokeAndFillElement;
  export default StrokeAndFillElement;
}
