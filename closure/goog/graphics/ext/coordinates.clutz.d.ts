//!! generated by clutz.
// Generated from graphics/ext/coordinates.js
declare namespace ಠ_ಠ.clutz.goog.graphics.ext.coordinates {
  /**
   * Returns the value of the given expression in the given context.
   *
   * Should be treated as package scope.
   * @param coord The coordinate to convert.
   * @param size The size of the parent element.
   * @param scale The ratio of pixels to units.
   */
  function computeValue (coord : string | number , size : number , scale : number ) : number ;
  /**
   * Converts the given coordinate to a number value in units.
   *
   * Should be treated as package scope.
   * @param coord The coordinate to retrieve the value for.
   * @param forMaximum Whether we are computing the largest value this coordinate would be in a parent of no size.  The container size in this case should be set to the size of the current element.
   * @param containerSize The unit value of the size of the container of this element.  Should be set to the minimum width of this element if forMaximum is true.
   * @param scale The ratio of pixels to units.
   * @param opt_cache Optional (but highly recommend) object to store cached computations in.  The calling class should manage clearing out the cache when the scale or containerSize changes.
   */
  function getValue (coord : string | number , forMaximum : boolean | undefined , containerSize : number , scale : number , opt_cache ? : GlobalObject | null ) : number ;
  /**
   * Determines if the given coordinate is special - i.e. not just a number.
   * @param coord The coordinate to test.
   */
  function isSpecial (coord : string | number | null ) : boolean ;
}
declare module 'goog:goog.graphics.ext.coordinates' {
  import coordinates = ಠ_ಠ.clutz.goog.graphics.ext.coordinates;
  export = coordinates;
}
