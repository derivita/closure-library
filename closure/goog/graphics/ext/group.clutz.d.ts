//!! generated by clutz.
// Generated from graphics/ext/group.js
declare namespace ಠ_ಠ.clutz.goog.graphics.ext {
  /**
   * Wrapper for a graphics group.
   */
  class Group extends ಠ_ಠ.clutz.goog.graphics.ext.Element {
    private noStructuralTyping_goog_graphics_ext_Group : any;
    /**
     * Wrapper for a graphics group.
     * @param group Parent for this element. Can be null if this is a Graphics instance.
     * @param opt_wrapper The thin wrapper to wrap. If omitted, a new group will be created. Must be included when group is null.
     */
    constructor (group : ಠ_ಠ.clutz.goog.graphics.ext.Group | null , opt_wrapper ? : ಠ_ಠ.clutz.goog.graphics.GroupElement | null ) ;
    /**
     * Add an element to the group.  This should be treated as package local, as
     * it is called by the draw* methods.
     * @param element The element to add.
     * @param opt_chain Whether this addition is part of a longer set of element additions.
     */
    addChild (element : ಠ_ಠ.clutz.goog.graphics.ext.Element , opt_chain ? : boolean ) : void ;
    clear ( ) : void ;
    /**
     * Calls the given function on each of this component's children in order.  If
     * `opt_obj` is provided, it will be used as the 'this' object in the
     * function when called.  The function should take two arguments:  the child
     * component and its 0-based index.  The return value is ignored.
     * @param f The function to call for every child component; should take 2 arguments (the child and its index).
     * @param opt_obj Used as the 'this' object in f when called.
     */
    forEachChild (f : Function | null , opt_obj ? : GlobalObject | null ) : void ;
    getCoordinateHeight ( ) : number ;
    getCoordinateWidth ( ) : number ;
    getWrapper ( ) : ಠ_ಠ.clutz.goog.graphics.GroupElement | null ;
    /**
     * Called from the parent class, this method resets any pre-computed positions
     * and sizes.
     */
    protected redraw ( ) : void ;
    /**
     * Remove an element from the group.
     * @param element The element to remove.
     */
    removeChild (element : ಠ_ಠ.clutz.goog.graphics.ext.Element | null ) : void ;
    /**
     * Reset the element.
     */
    reset ( ) : void ;
    /**
     * Transform the children that need to be transformed.
     */
    protected transformChildren ( ) : void ;
    updateChildren ( ) : void ;
  }
}
declare module 'goog:goog.graphics.ext.Group' {
  import Group = ಠ_ಠ.clutz.goog.graphics.ext.Group;
  export default Group;
}
