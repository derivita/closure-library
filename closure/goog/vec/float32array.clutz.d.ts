//!! generated by clutz.
// Generated from vec/float32array.js
declare namespace ಠ_ಠ.clutz.goog.vec {
  /**
   * Constructs a new Float32Array. The new array is initialized to all zeros.
   */
  class Float32Array implements ArrayLike < number > {
    private noStructuralTyping_goog_vec_Float32Array : any;
    /**
     * Constructs a new Float32Array. The new array is initialized to all zeros.
     * @param p0 The length of the array, or an array to initialize the contents of the new Float32Array.
     */
    constructor (p0 : ಠ_ಠ.clutz.goog.vec.Float32Array | null | any [] | ArrayBuffer | number ) ;
    length : number ;
    [ key: number ]: number ;
    /**
     * The number of bytes in an element (as defined by the Typed Array
     * specification).
     */
    BYTES_PER_ELEMENT : number ;
    /**
     * Sets elements of the array.
     * @param values The array of values.
     * @param opt_offset The offset in this array to start.
     */
    set (values : number [] | null | GlobalFloat32Array , opt_offset ? : number ) : void ;
    /**
     * Creates a string representation of this array.
     */
    toString ( ) : string ;
    /**
     * The number of bytes in an element (as defined by the Typed Array
     * specification).
     */
    static BYTES_PER_ELEMENT : number ;
  }
}
declare module 'goog:goog.vec.Float32Array' {
  import Float32Array = ಠ_ಠ.clutz.goog.vec.Float32Array;
  export default Float32Array;
}
