//!! generated by clutz.
// Generated from webgl/webgl.js
declare namespace ಠ_ಠ.clutz.goog.webgl {
  let ACTIVE_ATTRIBUTES : number ;
  let ACTIVE_TEXTURE : number ;
  let ACTIVE_UNIFORMS : number ;
  let ALIASED_LINE_WIDTH_RANGE : number ;
  let ALIASED_POINT_SIZE_RANGE : number ;
  let ALPHA : number ;
  let ALPHA_BITS : number ;
  let ALWAYS : number ;
  let ARRAY_BUFFER : number ;
  let ARRAY_BUFFER_BINDING : number ;
  let ATTACHED_SHADERS : number ;
  let BACK : number ;
  let BLEND : number ;
  let BLEND_COLOR : number ;
  let BLEND_DST_ALPHA : number ;
  let BLEND_DST_RGB : number ;
  let BLEND_EQUATION : number ;
  let BLEND_EQUATION_ALPHA : number ;
  /**
   * Same as BLEND_EQUATION
   */
  let BLEND_EQUATION_RGB : number ;
  let BLEND_SRC_ALPHA : number ;
  let BLEND_SRC_RGB : number ;
  let BLUE_BITS : number ;
  let BOOL : number ;
  let BOOL_VEC2 : number ;
  let BOOL_VEC3 : number ;
  let BOOL_VEC4 : number ;
  let BROWSER_DEFAULT_WEBGL : number ;
  let BUFFER_SIZE : number ;
  let BUFFER_USAGE : number ;
  let BYTE : number ;
  let CCW : number ;
  let CLAMP_TO_EDGE : number ;
  let COLOR_ATTACHMENT0 : number ;
  let COLOR_BUFFER_BIT : number ;
  let COLOR_CLEAR_VALUE : number ;
  let COLOR_WRITEMASK : number ;
  let COMPILE_STATUS : number ;
  /**
   * From the WEBGL_compressed_texture_s3tc extension.
   * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/
   */
  let COMPRESSED_RGBA_S3TC_DXT1_EXT : number ;
  /**
   * From the WEBGL_compressed_texture_s3tc extension.
   * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/
   */
  let COMPRESSED_RGBA_S3TC_DXT3_EXT : number ;
  /**
   * From the WEBGL_compressed_texture_s3tc extension.
   * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/
   */
  let COMPRESSED_RGBA_S3TC_DXT5_EXT : number ;
  /**
   * From the WEBGL_compressed_texture_s3tc extension.
   * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/
   */
  let COMPRESSED_RGB_S3TC_DXT1_EXT : number ;
  let COMPRESSED_TEXTURE_FORMATS : number ;
  let CONSTANT_ALPHA : number ;
  let CONSTANT_COLOR : number ;
  let CONTEXT_LOST_WEBGL : number ;
  let CULL_FACE : number ;
  let CULL_FACE_MODE : number ;
  let CURRENT_PROGRAM : number ;
  let CURRENT_VERTEX_ATTRIB : number ;
  let CW : number ;
  let DECR : number ;
  let DECR_WRAP : number ;
  let DELETE_STATUS : number ;
  let DEPTH_ATTACHMENT : number ;
  let DEPTH_BITS : number ;
  let DEPTH_BUFFER_BIT : number ;
  let DEPTH_CLEAR_VALUE : number ;
  let DEPTH_COMPONENT : number ;
  let DEPTH_COMPONENT16 : number ;
  let DEPTH_FUNC : number ;
  let DEPTH_RANGE : number ;
  let DEPTH_STENCIL : number ;
  let DEPTH_STENCIL_ATTACHMENT : number ;
  let DEPTH_TEST : number ;
  let DEPTH_WRITEMASK : number ;
  let DITHER : number ;
  let DONT_CARE : number ;
  let DST_ALPHA : number ;
  let DST_COLOR : number ;
  let DYNAMIC_DRAW : number ;
  let ELEMENT_ARRAY_BUFFER : number ;
  let ELEMENT_ARRAY_BUFFER_BINDING : number ;
  let EQUAL : number ;
  let FASTEST : number ;
  let FLOAT : number ;
  let FLOAT_MAT2 : number ;
  let FLOAT_MAT3 : number ;
  let FLOAT_MAT4 : number ;
  let FLOAT_VEC2 : number ;
  let FLOAT_VEC3 : number ;
  let FLOAT_VEC4 : number ;
  let FRAGMENT_SHADER : number ;
  /**
   * From the OES_standard_derivatives extension.
   * http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/
   */
  let FRAGMENT_SHADER_DERIVATIVE_HINT_OES : number ;
  let FRAMEBUFFER : number ;
  let FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : number ;
  let FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : number ;
  let FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : number ;
  let FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : number ;
  let FRAMEBUFFER_BINDING : number ;
  let FRAMEBUFFER_COMPLETE : number ;
  let FRAMEBUFFER_INCOMPLETE_ATTACHMENT : number ;
  let FRAMEBUFFER_INCOMPLETE_DIMENSIONS : number ;
  let FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : number ;
  let FRAMEBUFFER_UNSUPPORTED : number ;
  let FRONT : number ;
  let FRONT_AND_BACK : number ;
  let FRONT_FACE : number ;
  let FUNC_ADD : number ;
  let FUNC_REVERSE_SUBTRACT : number ;
  let FUNC_SUBTRACT : number ;
  let GENERATE_MIPMAP_HINT : number ;
  let GEQUAL : number ;
  let GREATER : number ;
  let GREEN_BITS : number ;
  /**
   * From the OES_texture_half_float extension.
   * http://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/
   */
  let HALF_FLOAT_OES : number ;
  let HIGH_FLOAT : number ;
  let HIGH_INT : number ;
  let INCR : number ;
  let INCR_WRAP : number ;
  let INT : number ;
  let INT_VEC2 : number ;
  let INT_VEC3 : number ;
  let INT_VEC4 : number ;
  let INVALID_ENUM : number ;
  let INVALID_FRAMEBUFFER_OPERATION : number ;
  let INVALID_OPERATION : number ;
  let INVALID_VALUE : number ;
  let INVERT : number ;
  let KEEP : number ;
  let LEQUAL : number ;
  let LESS : number ;
  let LINEAR : number ;
  let LINEAR_MIPMAP_LINEAR : number ;
  let LINEAR_MIPMAP_NEAREST : number ;
  let LINES : number ;
  let LINE_LOOP : number ;
  let LINE_STRIP : number ;
  let LINE_WIDTH : number ;
  let LINK_STATUS : number ;
  let LOW_FLOAT : number ;
  let LOW_INT : number ;
  let LUMINANCE : number ;
  let LUMINANCE_ALPHA : number ;
  let MAX_COMBINED_TEXTURE_IMAGE_UNITS : number ;
  let MAX_CUBE_MAP_TEXTURE_SIZE : number ;
  let MAX_FRAGMENT_UNIFORM_VECTORS : number ;
  let MAX_RENDERBUFFER_SIZE : number ;
  let MAX_TEXTURE_IMAGE_UNITS : number ;
  /**
   * From the EXT_texture_filter_anisotropic extension.
   * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/
   */
  let MAX_TEXTURE_MAX_ANISOTROPY_EXT : number ;
  let MAX_TEXTURE_SIZE : number ;
  let MAX_VARYING_VECTORS : number ;
  let MAX_VERTEX_ATTRIBS : number ;
  let MAX_VERTEX_TEXTURE_IMAGE_UNITS : number ;
  let MAX_VERTEX_UNIFORM_VECTORS : number ;
  let MAX_VIEWPORT_DIMS : number ;
  let MEDIUM_FLOAT : number ;
  let MEDIUM_INT : number ;
  let MIRRORED_REPEAT : number ;
  let NEAREST : number ;
  let NEAREST_MIPMAP_LINEAR : number ;
  let NEAREST_MIPMAP_NEAREST : number ;
  let NEVER : number ;
  let NICEST : number ;
  let NONE : number ;
  let NOTEQUAL : number ;
  let NO_ERROR : number ;
  let ONE : number ;
  let ONE_MINUS_CONSTANT_ALPHA : number ;
  let ONE_MINUS_CONSTANT_COLOR : number ;
  let ONE_MINUS_DST_ALPHA : number ;
  let ONE_MINUS_DST_COLOR : number ;
  let ONE_MINUS_SRC_ALPHA : number ;
  let ONE_MINUS_SRC_COLOR : number ;
  let OUT_OF_MEMORY : number ;
  let PACK_ALIGNMENT : number ;
  let POINTS : number ;
  let POLYGON_OFFSET_FACTOR : number ;
  let POLYGON_OFFSET_FILL : number ;
  let POLYGON_OFFSET_UNITS : number ;
  let RED_BITS : number ;
  let RENDERBUFFER : number ;
  let RENDERBUFFER_ALPHA_SIZE : number ;
  let RENDERBUFFER_BINDING : number ;
  let RENDERBUFFER_BLUE_SIZE : number ;
  let RENDERBUFFER_DEPTH_SIZE : number ;
  let RENDERBUFFER_GREEN_SIZE : number ;
  let RENDERBUFFER_HEIGHT : number ;
  let RENDERBUFFER_INTERNAL_FORMAT : number ;
  let RENDERBUFFER_RED_SIZE : number ;
  let RENDERBUFFER_STENCIL_SIZE : number ;
  let RENDERBUFFER_WIDTH : number ;
  let RENDERER : number ;
  let REPEAT : number ;
  let REPLACE : number ;
  let RGB : number ;
  let RGB565 : number ;
  let RGB5_A1 : number ;
  let RGBA : number ;
  let RGBA4 : number ;
  let SAMPLER_2D : number ;
  let SAMPLER_CUBE : number ;
  let SAMPLES : number ;
  let SAMPLE_ALPHA_TO_COVERAGE : number ;
  let SAMPLE_BUFFERS : number ;
  let SAMPLE_COVERAGE : number ;
  let SAMPLE_COVERAGE_INVERT : number ;
  let SAMPLE_COVERAGE_VALUE : number ;
  let SCISSOR_BOX : number ;
  let SCISSOR_TEST : number ;
  let SHADER_TYPE : number ;
  let SHADING_LANGUAGE_VERSION : number ;
  let SHORT : number ;
  let SRC_ALPHA : number ;
  let SRC_ALPHA_SATURATE : number ;
  let SRC_COLOR : number ;
  let STATIC_DRAW : number ;
  let STENCIL_ATTACHMENT : number ;
  let STENCIL_BACK_FAIL : number ;
  let STENCIL_BACK_FUNC : number ;
  let STENCIL_BACK_PASS_DEPTH_FAIL : number ;
  let STENCIL_BACK_PASS_DEPTH_PASS : number ;
  let STENCIL_BACK_REF : number ;
  let STENCIL_BACK_VALUE_MASK : number ;
  let STENCIL_BACK_WRITEMASK : number ;
  let STENCIL_BITS : number ;
  let STENCIL_BUFFER_BIT : number ;
  let STENCIL_CLEAR_VALUE : number ;
  let STENCIL_FAIL : number ;
  let STENCIL_FUNC : number ;
  let STENCIL_INDEX : number ;
  let STENCIL_INDEX8 : number ;
  let STENCIL_PASS_DEPTH_FAIL : number ;
  let STENCIL_PASS_DEPTH_PASS : number ;
  let STENCIL_REF : number ;
  let STENCIL_TEST : number ;
  let STENCIL_VALUE_MASK : number ;
  let STENCIL_WRITEMASK : number ;
  let STREAM_DRAW : number ;
  let SUBPIXEL_BITS : number ;
  let TEXTURE : number ;
  let TEXTURE0 : number ;
  let TEXTURE1 : number ;
  let TEXTURE10 : number ;
  let TEXTURE11 : number ;
  let TEXTURE12 : number ;
  let TEXTURE13 : number ;
  let TEXTURE14 : number ;
  let TEXTURE15 : number ;
  let TEXTURE16 : number ;
  let TEXTURE17 : number ;
  let TEXTURE18 : number ;
  let TEXTURE19 : number ;
  let TEXTURE2 : number ;
  let TEXTURE20 : number ;
  let TEXTURE21 : number ;
  let TEXTURE22 : number ;
  let TEXTURE23 : number ;
  let TEXTURE24 : number ;
  let TEXTURE25 : number ;
  let TEXTURE26 : number ;
  let TEXTURE27 : number ;
  let TEXTURE28 : number ;
  let TEXTURE29 : number ;
  let TEXTURE3 : number ;
  let TEXTURE30 : number ;
  let TEXTURE31 : number ;
  let TEXTURE4 : number ;
  let TEXTURE5 : number ;
  let TEXTURE6 : number ;
  let TEXTURE7 : number ;
  let TEXTURE8 : number ;
  let TEXTURE9 : number ;
  let TEXTURE_2D : number ;
  let TEXTURE_BINDING_2D : number ;
  let TEXTURE_BINDING_CUBE_MAP : number ;
  let TEXTURE_CUBE_MAP : number ;
  let TEXTURE_CUBE_MAP_NEGATIVE_X : number ;
  let TEXTURE_CUBE_MAP_NEGATIVE_Y : number ;
  let TEXTURE_CUBE_MAP_NEGATIVE_Z : number ;
  let TEXTURE_CUBE_MAP_POSITIVE_X : number ;
  let TEXTURE_CUBE_MAP_POSITIVE_Y : number ;
  let TEXTURE_CUBE_MAP_POSITIVE_Z : number ;
  let TEXTURE_MAG_FILTER : number ;
  /**
   * From the EXT_texture_filter_anisotropic extension.
   * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/
   */
  let TEXTURE_MAX_ANISOTROPY_EXT : number ;
  let TEXTURE_MIN_FILTER : number ;
  let TEXTURE_WRAP_S : number ;
  let TEXTURE_WRAP_T : number ;
  let TRIANGLES : number ;
  let TRIANGLE_FAN : number ;
  let TRIANGLE_STRIP : number ;
  /**
   * From the WEBGL_debug_renderer_info extension.
   * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/
   */
  let UNMASKED_RENDERER_WEBGL : number ;
  /**
   * From the WEBGL_debug_renderer_info extension.
   * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/
   */
  let UNMASKED_VENDOR_WEBGL : number ;
  let UNPACK_ALIGNMENT : number ;
  let UNPACK_COLORSPACE_CONVERSION_WEBGL : number ;
  let UNPACK_FLIP_Y_WEBGL : number ;
  let UNPACK_PREMULTIPLY_ALPHA_WEBGL : number ;
  let UNSIGNED_BYTE : number ;
  let UNSIGNED_INT : number ;
  let UNSIGNED_SHORT : number ;
  let UNSIGNED_SHORT_4_4_4_4 : number ;
  let UNSIGNED_SHORT_5_5_5_1 : number ;
  let UNSIGNED_SHORT_5_6_5 : number ;
  let VALIDATE_STATUS : number ;
  let VENDOR : number ;
  let VERSION : number ;
  /**
   * From the OES_vertex_array_object extension.
   * http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/
   */
  let VERTEX_ARRAY_BINDING_OES : number ;
  let VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : number ;
  let VERTEX_ATTRIB_ARRAY_ENABLED : number ;
  let VERTEX_ATTRIB_ARRAY_NORMALIZED : number ;
  let VERTEX_ATTRIB_ARRAY_POINTER : number ;
  let VERTEX_ATTRIB_ARRAY_SIZE : number ;
  let VERTEX_ATTRIB_ARRAY_STRIDE : number ;
  let VERTEX_ATTRIB_ARRAY_TYPE : number ;
  let VERTEX_SHADER : number ;
  let VIEWPORT : number ;
  let ZERO : number ;
}
declare module 'goog:goog.webgl' {
  import webgl = ಠ_ಠ.clutz.goog.webgl;
  export = webgl;
}
