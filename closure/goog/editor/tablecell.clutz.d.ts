//!! generated by clutz.
// Generated from editor/tablecell.js
declare namespace ಠ_ಠ.clutz.goog.editor {
  export import TableCell = ಠ_ಠ.clutz.module$contents$goog$editor$TableCell_TableCell ;
}
declare module 'goog:goog.editor.TableCell' {
  import TableCell = ಠ_ಠ.clutz.goog.editor.TableCell;
  export default TableCell;
}
// Generated from editor/tablecell.js
declare namespace ಠ_ಠ.clutz {
  /**
   * Class representing a table cell, which may span across multiple
   * rows and columns
   */
  class module$contents$goog$editor$TableCell_TableCell {
    private noStructuralTyping_module$contents$goog$editor$TableCell_TableCell : any;
    /**
     * Class representing a table cell, which may span across multiple
     * rows and columns
     * @param td This cell's underlying TD or TH element.
     * @param startRow Index of the row where this cell begins.
     * @param startCol Index of the column where this cell begins.
     */
    constructor (td : GlobalElement , startRow : number , startCol : number ) ;
    colSpan : any ;
    element : GlobalElement ;
    rowSpan : any ;
    startCol : number ;
    startRow : number ;
    /**
     * Set this cell's colSpan, updating both its colSpan property and the
     * underlying element's colSpan attribute.
     * @param colSpan The new colSpan.
     */
    setColSpan (colSpan : number ) : void ;
    /**
     * Set this cell's rowSpan, updating both its rowSpan property and the
     * underlying element's rowSpan attribute.
     * @param rowSpan The new rowSpan.
     */
    setRowSpan (rowSpan : number ) : void ;
  }
}
declare namespace ಠ_ಠ.clutz {
  export import module$exports$goog$editor$TableCell = ಠ_ಠ.clutz.module$contents$goog$editor$TableCell_TableCell ;
}
