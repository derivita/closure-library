//!! generated by clutz.
// Generated from editor/clicktoeditwrapper.js
declare namespace ಠ_ಠ.clutz.goog.editor {
  /**
   * Initialize the wrapper, and begin listening to mouse events immediately.
   */
  class ClickToEditWrapper extends ಠ_ಠ.clutz.goog.Disposable {
    private noStructuralTyping_goog_editor_ClickToEditWrapper : any;
    /**
     * Initialize the wrapper, and begin listening to mouse events immediately.
     * @param fieldObj The editable field being wrapped.
     */
    constructor (fieldObj : ಠ_ಠ.clutz.goog.editor.Field | null ) ;
    disposeInternal ( ) : void ;
    enterDocument ( ) : void ;
    exitDocument ( ) : void ;
    /**
     * Focus on the field object.
     * @param field The field to focus.
     */
    protected focusOnFieldObj (field : ಠ_ಠ.clutz.goog.editor.Field | null ) : void ;
    /**
     * Returns the uneditable field element if the field is not yet editable
     * (equivalent to EditableField.getOriginalElement()), and the editable DOM
     * element if the field is currently editable (equivalent to
     * EditableField.getElement()).
     */
    getElement ( ) : GlobalElement | null ;
    getFieldObject ( ) : ಠ_ಠ.clutz.goog.editor.Field | null ;
    getOriginalDomHelper ( ) : ಠ_ಠ.clutz.goog.dom.DomHelper | null ;
    /**
     * Make the field object editable.
     * @param field The field to make editable.
     */
    protected makeFieldEditable (field : ಠ_ಠ.clutz.goog.editor.Field | null ) : void ;
  }
}
declare module 'goog:goog.editor.ClickToEditWrapper' {
  import ClickToEditWrapper = ಠ_ಠ.clutz.goog.editor.ClickToEditWrapper;
  export default ClickToEditWrapper;
}
