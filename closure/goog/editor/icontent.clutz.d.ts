//!! generated by clutz.
// Generated from editor/icontent.js
declare namespace ಠ_ಠ.clutz.goog.editor.icontent {
  /**
   * Sets up goog.editor.icontent to always use standards-mode iframes.
   */
  function forceStandardsModeIframes ( ) : void ;
  /**
   * Write the initial iframe content in IE/HTTPS mode.
   * @param info Formatting info about the field.
   * @param doc The iframe document.
   * @param bodyHtml The HTML to insert as the iframe body.
   */
  function writeHttpsInitialIframe (info : ಠ_ಠ.clutz.goog.editor.icontent.FieldFormatInfo | null , doc : Document | null , bodyHtml : string ) : void ;
  /**
   * Write the initial iframe content in normal mode.
   * @param info Formatting info about the field.
   * @param bodyHtml The HTML to insert as the iframe body.
   * @param style Style info about the field, if needed.
   * @param iframe The iframe.
   */
  function writeNormalInitialBlendedIframe (info : ಠ_ಠ.clutz.goog.editor.icontent.FieldFormatInfo | null , bodyHtml : string , style : ಠ_ಠ.clutz.goog.editor.icontent.FieldStyleInfo | null , iframe : HTMLIFrameElement | null ) : void ;
  /**
   * Write the initial iframe content in normal mode.
   * @param info Formatting info about the field.
   * @param bodyHtml The HTML to insert as the iframe body.
   * @param style Style info about the field, if needed.
   * @param iframe The iframe.
   */
  function writeNormalInitialIframe (info : ಠ_ಠ.clutz.goog.editor.icontent.FieldFormatInfo | null , bodyHtml : string , style : ಠ_ಠ.clutz.goog.editor.icontent.FieldStyleInfo | null , iframe : HTMLIFrameElement | null ) : void ;
}
declare module 'goog:goog.editor.icontent' {
  import icontent = ಠ_ಠ.clutz.goog.editor.icontent;
  export = icontent;
}
// Generated from editor/icontent.js
declare namespace ಠ_ಠ.clutz.goog.editor.icontent {
  /**
   * A data structure for storing simple rendering info about a field.
   */
  class FieldFormatInfo {
    private noStructuralTyping_goog_editor_icontent_FieldFormatInfo : any;
    /**
     * A data structure for storing simple rendering info about a field.
     * @param fieldId The id of the field.
     * @param standards Whether the field should be rendered in standards mode.
     * @param blended Whether the field is in blended mode.
     * @param fixedHeight Whether the field is in fixedHeight mode.
     * @param opt_extraStyles Other style attributes for the field, represented as a map of strings.
     */
    constructor (fieldId : string , standards : boolean , blended : boolean , fixedHeight : boolean , opt_extraStyles ? : GlobalObject | null ) ;
    blended_ : boolean ;
    extraStyles_ : GlobalObject ;
    fieldId_ : string ;
    fixedHeight_ : boolean ;
    standards_ : boolean ;
  }
}
declare module 'goog:goog.editor.icontent.FieldFormatInfo' {
  import FieldFormatInfo = ಠ_ಠ.clutz.goog.editor.icontent.FieldFormatInfo;
  export default FieldFormatInfo;
}
// Generated from editor/icontent.js
declare namespace ಠ_ಠ.clutz.goog.editor.icontent {
  /**
   * A data structure for storing simple info about the styles of a field.
   * Only needed in Firefox/Blended mode.
   */
  class FieldStyleInfo {
    private noStructuralTyping_goog_editor_icontent_FieldStyleInfo : any;
    /**
     * A data structure for storing simple info about the styles of a field.
     * Only needed in Firefox/Blended mode.
     * @param wrapper The wrapper div around a field.
     * @param css The css for a field.
     */
    constructor (wrapper : GlobalElement | null , css : string ) ;
    css_ : string ;
    wrapper_ : GlobalElement | null ;
  }
}
declare module 'goog:goog.editor.icontent.FieldStyleInfo' {
  import FieldStyleInfo = ಠ_ಠ.clutz.goog.editor.icontent.FieldStyleInfo;
  export default FieldStyleInfo;
}
