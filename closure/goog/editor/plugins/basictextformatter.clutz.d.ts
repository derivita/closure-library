//!! generated by clutz.
// Generated from editor/plugins/basictextformatter.js
declare namespace ಠ_ಠ.clutz.goog.editor.plugins {
  /**
   * Functions to style text (e.g. underline, make bold, etc.)
   */
  class BasicTextFormatter extends ಠ_ಠ.clutz.goog.editor.Plugin {
    private noStructuralTyping_goog_editor_plugins_BasicTextFormatter : any;
    /**
     * Functions to style text (e.g. underline, make bold, etc.)
     */
    constructor ( ) ;
    cleanContentsDom (fieldCopy ? : any ) : void ;
    cleanContentsHtml (html ? : any ) : any ;
    /**
     * Execute a user-initiated command.
     * @param command Command to execute.
     * @param var_args For color commands, this should be the hex color (with the #). For FORMAT_BLOCK, this should be the goog.editor.plugins.BasicTextFormatter.BLOCK_COMMAND. It will be unused for other commands.
     */
    execCommandInternal (command : string ,  ...var_args : any [] ) : GlobalObject | null | undefined ;
    getTrogClassId ( ) : any ;
    handleKeyboardShortcut (e ? : any , key ? : any , isModifierPressed ? : any ) : any ;
    /**
     * Whether the string corresponds to a command that should be silent.
     */
    isSilentCommand (command ? : any ) : any ;
    /**
     * Whether the string corresponds to a command this plugin handles.
     * @param command Command string to check.
     */
    isSupportedCommand (command : string ) : boolean ;
    /**
     * Logging object.
     */
    protected logger : ಠ_ಠ.clutz.goog.log.Logger | null ;
    prepareContentsHtml (html ? : any ) : any ;
    /**
     * Gets the command value.
     * @param command The command value to get.
     */
    queryCommandValue (command : string ) : string | boolean | null ;
  }
}
// Generated from editor/plugins/basictextformatter.js
declare namespace ಠ_ಠ.clutz.goog.editor.plugins.BasicTextFormatter {
  interface IBidiPlugin {
    getSelectionAlignment ( ) : string | null ;
  }
}
declare module 'goog:goog.editor.plugins.BasicTextFormatter' {
  import BasicTextFormatter = ಠ_ಠ.clutz.goog.editor.plugins.BasicTextFormatter;
  export default BasicTextFormatter;
}
// Generated from editor/plugins/basictextformatter.js
declare namespace ಠ_ಠ.clutz.goog.editor.plugins.BasicTextFormatter {
  /**
   * Commands implemented by this plugin.
   */
  /**
   * Commands implemented by this plugin.
   */
  enum COMMAND {
    BACKGROUND_COLOR = '+backColor' ,
    BOLD = '+bold' ,
    CREATE_LINK = '+createLink' ,
    FONT_COLOR = '+foreColor' ,
    FONT_FACE = '+fontName' ,
    FONT_SIZE = '+fontSize' ,
    FORMAT_BLOCK = '+formatBlock' ,
    HORIZONTAL_RULE = '+insertHorizontalRule' ,
    INDENT = '+indent' ,
    ITALIC = '+italic' ,
    JUSTIFY_CENTER = '+justifyCenter' ,
    JUSTIFY_FULL = '+justifyFull' ,
    JUSTIFY_LEFT = '+justifyLeft' ,
    JUSTIFY_RIGHT = '+justifyRight' ,
    LINK = '+link' ,
    ORDERED_LIST = '+insertOrderedList' ,
    OUTDENT = '+outdent' ,
    STRIKE_THROUGH = '+strikeThrough' ,
    SUBSCRIPT = '+subscript' ,
    SUPERSCRIPT = '+superscript' ,
    UNDERLINE = '+underline' ,
    UNORDERED_LIST = '+insertUnorderedList' ,
  }
}
declare module 'goog:goog.editor.plugins.BasicTextFormatter.COMMAND' {
  import COMMAND = ಠ_ಠ.clutz.goog.editor.plugins.BasicTextFormatter.COMMAND;
  export default COMMAND;
}
