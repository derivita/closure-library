//!! generated by clutz.
// Generated from editor/plugins/tagonenterhandler.js
declare namespace ಠ_ಠ.clutz.goog.editor.plugins {
  /**
   * Plugin to handle enter keys. This subclass normalizes all browsers to use
   * the given block tag on enter.
   */
  class TagOnEnterHandler extends ಠ_ಠ.clutz.goog.editor.plugins.EnterHandler {
    private noStructuralTyping_goog_editor_plugins_TagOnEnterHandler : any;
    /**
     * Plugin to handle enter keys. This subclass normalizes all browsers to use
     * the given block tag on enter.
     * @param tag The type of tag to add on enter.
     */
    constructor (tag : ಠ_ಠ.clutz.goog.dom.TagName ) ;
    tag : ಠ_ಠ.clutz.goog.dom.TagName ;
    /**
     * This plugin is active on uneditable fields so it can provide a value for
     * queryCommandValue calls asking for goog.editor.Command.BLOCKQUOTE.
     */
    activeOnUneditableFields ( ) : boolean ;
    getNonCollapsingBlankHtml ( ) : any ;
    getTrogClassId ( ) : any ;
    handleBackspaceInternal (e ? : any , range ? : any ) : void ;
    handleDeleteGecko (e ? : any ) : void ;
    handleEnterAtCursorGeckoInternal (e ? : any , wasCollapsed ? : any , range ? : any ) : void ;
    handleEnterWebkitInternal (e ? : any ) : void ;
    handleKeyUpInternal (e ? : any ) : void ;
    isSupportedCommand (command ? : any ) : any ;
    processParagraphTagsInternal (e ? : any , split ? : any ) : void ;
    queryCommandValue (command ? : any ) : any ;
  }
}
declare module 'goog:goog.editor.plugins.TagOnEnterHandler' {
  import TagOnEnterHandler = ಠ_ಠ.clutz.goog.editor.plugins.TagOnEnterHandler;
  export default TagOnEnterHandler;
}
