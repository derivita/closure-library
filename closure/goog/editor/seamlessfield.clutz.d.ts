//!! generated by clutz.
// Generated from editor/seamlessfield.js
declare namespace ಠ_ಠ.clutz.goog.editor {
  /**
   * This class encapsulates an editable field that blends in with the
   * surrounding page.
   * To see events fired by this object, please see the base class.
   */
  class SeamlessField extends ಠ_ಠ.clutz.goog.editor.Field {
    private noStructuralTyping_goog_editor_SeamlessField : any;
    /**
     * This class encapsulates an editable field that blends in with the
     * surrounding page.
     * To see events fired by this object, please see the base class.
     * @param id An identifer for the field. This is used to find the field and the element associated with this field.
     * @param opt_doc The document that the element with the given id can be found it.
     */
    constructor (id : string , opt_doc ? : Document | null ) ;
    attachIframe (iframe ? : any ) : void ;
    clearListeners ( ) : void ;
    dispatchBlur ( ) : void ;
    doFieldSizingGecko ( ) : void ;
    getFieldFormatInfo (extraStyles ? : any ) : any ;
    getIframeAttributes ( ) : any ;
    /**
     * Gets the css rules that should be used to style an iframe's body as if it
     * were the original element that we made editable.
     * @param opt_forceRegeneration Set to true to not read the cached copy and instead completely regenerate the css rules.
     */
    getIframeableCss (opt_forceRegeneration ? : boolean ) : string ;
    handleChange ( ) : void ;
    handleFieldLoad ( ) : void ;
    installStyles ( ) : void ;
    isFixedHeight ( ) : boolean ;
    logger : any ;
    makeEditableInternal (opt_iframeSrc ? : any ) : void ;
    overrideFixedHeight (newVal : boolean ) : void ;
    restoreDom ( ) : void ;
    /**
     * Sets the css rules that should be used inside the editable iframe.
     * Note: to clear the css cache between makeNotEditable/makeEditable,
     * call this with "" as iframeableCss.
     * TODO(user): Unify all these css setting methods + Nick's open
     * CL.  This is getting ridiculous.
     * @param iframeableCss String containing the css rules to use.
     */
    setIframeableCss (iframeableCss : string ) : void ;
    /**
     * Sets the min height of this editable field's iframe. Only used in growing
     * mode when an iframe is used. This will cause an immediate field sizing to
     * update the field if necessary based on the new min height.
     * @param height The min height specified as a number of pixels, e.g., 75.
     */
    setMinHeight (height : number ) : void ;
    setupMutationEventHandlersGecko ( ) : void ;
    turnOnDesignModeGecko ( ) : void ;
    usesIframe ( ) : any ;
    writeIframeContent (iframe ? : any , innerHtml ? : any , extraStyles ? : any ) : void ;
    static scrollbarWidth_ : any ;
  }
}
declare module 'goog:goog.editor.SeamlessField' {
  import SeamlessField = ಠ_ಠ.clutz.goog.editor.SeamlessField;
  export default SeamlessField;
}
