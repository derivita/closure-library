//!! generated by clutz.
// Generated from proto2/test.pb.js
declare namespace ಠ_ಠ.clutz.proto2 {
  /**
   * Message TestAllTypes.
   */
  class TestAllTypes extends ಠ_ಠ.clutz.goog.proto2.Message {
    private noStructuralTyping_proto2_TestAllTypes : any;
    /**
     * Message TestAllTypes.
     */
    constructor ( ) ;
    /**
     * Adds a value to the packed_bool field.
     * @param value The value to add.
     */
    addPackedBool (value : boolean ) : void ;
    /**
     * Adds a value to the packed_double field.
     * @param value The value to add.
     */
    addPackedDouble (value : number ) : void ;
    /**
     * Adds a value to the packed_fixed32 field.
     * @param value The value to add.
     */
    addPackedFixed32 (value : number ) : void ;
    /**
     * Adds a value to the packed_fixed64 field.
     * @param value The value to add.
     */
    addPackedFixed64 (value : number ) : void ;
    /**
     * Adds a value to the packed_float field.
     * @param value The value to add.
     */
    addPackedFloat (value : number ) : void ;
    /**
     * Adds a value to the packed_int32 field.
     * @param value The value to add.
     */
    addPackedInt32 (value : number ) : void ;
    /**
     * Adds a value to the packed_int64 field.
     * @param value The value to add.
     */
    addPackedInt64 (value : number ) : void ;
    /**
     * Adds a value to the packed_sfixed32 field.
     * @param value The value to add.
     */
    addPackedSfixed32 (value : number ) : void ;
    /**
     * Adds a value to the packed_sfixed64 field.
     * @param value The value to add.
     */
    addPackedSfixed64 (value : number ) : void ;
    /**
     * Adds a value to the packed_sint32 field.
     * @param value The value to add.
     */
    addPackedSint32 (value : number ) : void ;
    /**
     * Adds a value to the packed_sint64 field.
     * @param value The value to add.
     */
    addPackedSint64 (value : number ) : void ;
    /**
     * Adds a value to the packed_uint32 field.
     * @param value The value to add.
     */
    addPackedUint32 (value : number ) : void ;
    /**
     * Adds a value to the packed_uint64 field.
     * @param value The value to add.
     */
    addPackedUint64 (value : number ) : void ;
    /**
     * Adds a value to the repeated_bool field.
     * @param value The value to add.
     */
    addRepeatedBool (value : boolean ) : void ;
    /**
     * Adds a value to the repeated_bytes field.
     * @param value The value to add.
     */
    addRepeatedBytes (value : string ) : void ;
    /**
     * Adds a value to the repeated_double field.
     * @param value The value to add.
     */
    addRepeatedDouble (value : number ) : void ;
    /**
     * Adds a value to the repeated_fixed32 field.
     * @param value The value to add.
     */
    addRepeatedFixed32 (value : number ) : void ;
    /**
     * Adds a value to the repeated_fixed64 field.
     * @param value The value to add.
     */
    addRepeatedFixed64 (value : string ) : void ;
    /**
     * Adds a value to the repeated_float field.
     * @param value The value to add.
     */
    addRepeatedFloat (value : number ) : void ;
    /**
     * Adds a value to the repeated_int32 field.
     * @param value The value to add.
     */
    addRepeatedInt32 (value : number ) : void ;
    /**
     * Adds a value to the repeated_int64 field.
     * @param value The value to add.
     */
    addRepeatedInt64 (value : string ) : void ;
    /**
     * Adds a value to the repeated_int64_number field.
     * @param value The value to add.
     */
    addRepeatedInt64Number (value : number ) : void ;
    /**
     * Adds a value to the repeated_int64_string field.
     * @param value The value to add.
     */
    addRepeatedInt64String (value : string ) : void ;
    /**
     * Adds a value to the repeated_nested_enum field.
     * @param value The value to add.
     */
    addRepeatedNestedEnum (value : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum ) : void ;
    /**
     * Adds a value to the repeated_nested_message field.
     * @param value The value to add.
     */
    addRepeatedNestedMessage (value : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage ) : void ;
    /**
     * Adds a value to the repeated_sfixed32 field.
     * @param value The value to add.
     */
    addRepeatedSfixed32 (value : number ) : void ;
    /**
     * Adds a value to the repeated_sfixed64 field.
     * @param value The value to add.
     */
    addRepeatedSfixed64 (value : string ) : void ;
    /**
     * Adds a value to the repeated_sint32 field.
     * @param value The value to add.
     */
    addRepeatedSint32 (value : number ) : void ;
    /**
     * Adds a value to the repeated_sint64 field.
     * @param value The value to add.
     */
    addRepeatedSint64 (value : string ) : void ;
    /**
     * Adds a value to the repeated_string field.
     * @param value The value to add.
     */
    addRepeatedString (value : string ) : void ;
    /**
     * Adds a value to the repeated_uint32 field.
     * @param value The value to add.
     */
    addRepeatedUint32 (value : number ) : void ;
    /**
     * Adds a value to the repeated_uint64 field.
     * @param value The value to add.
     */
    addRepeatedUint64 (value : string ) : void ;
    /**
     * Adds a value to the repeatedgroup field.
     * @param value The value to add.
     */
    addRepeatedgroup (value : ಠ_ಠ.clutz.proto2.TestAllTypes.RepeatedGroup ) : void ;
    clearOptionalBool ( ) : void ;
    clearOptionalBytes ( ) : void ;
    clearOptionalDouble ( ) : void ;
    clearOptionalFixed32 ( ) : void ;
    clearOptionalFixed64 ( ) : void ;
    clearOptionalFloat ( ) : void ;
    clearOptionalInt32 ( ) : void ;
    clearOptionalInt64 ( ) : void ;
    clearOptionalInt64Number ( ) : void ;
    clearOptionalInt64String ( ) : void ;
    clearOptionalNestedEnum ( ) : void ;
    clearOptionalNestedMessage ( ) : void ;
    clearOptionalSfixed32 ( ) : void ;
    clearOptionalSfixed64 ( ) : void ;
    clearOptionalSint32 ( ) : void ;
    clearOptionalSint64 ( ) : void ;
    clearOptionalString ( ) : void ;
    clearOptionalUint32 ( ) : void ;
    clearOptionalUint64 ( ) : void ;
    clearOptionalgroup ( ) : void ;
    clearPackedBool ( ) : void ;
    clearPackedDouble ( ) : void ;
    clearPackedFixed32 ( ) : void ;
    clearPackedFixed64 ( ) : void ;
    clearPackedFloat ( ) : void ;
    clearPackedInt32 ( ) : void ;
    clearPackedInt64 ( ) : void ;
    clearPackedSfixed32 ( ) : void ;
    clearPackedSfixed64 ( ) : void ;
    clearPackedSint32 ( ) : void ;
    clearPackedSint64 ( ) : void ;
    clearPackedUint32 ( ) : void ;
    clearPackedUint64 ( ) : void ;
    clearRepeatedBool ( ) : void ;
    clearRepeatedBytes ( ) : void ;
    clearRepeatedDouble ( ) : void ;
    clearRepeatedFixed32 ( ) : void ;
    clearRepeatedFixed64 ( ) : void ;
    clearRepeatedFloat ( ) : void ;
    clearRepeatedInt32 ( ) : void ;
    clearRepeatedInt64 ( ) : void ;
    clearRepeatedInt64Number ( ) : void ;
    clearRepeatedInt64String ( ) : void ;
    clearRepeatedNestedEnum ( ) : void ;
    clearRepeatedNestedMessage ( ) : void ;
    clearRepeatedSfixed32 ( ) : void ;
    clearRepeatedSfixed64 ( ) : void ;
    clearRepeatedSint32 ( ) : void ;
    clearRepeatedSint64 ( ) : void ;
    clearRepeatedString ( ) : void ;
    clearRepeatedUint32 ( ) : void ;
    clearRepeatedUint64 ( ) : void ;
    clearRepeatedgroup ( ) : void ;
    /**
     * Overrides {@link goog.proto2.Message#clone} to specify its exact return type.
     */
    clone ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes ;
    getDescriptor ( ) : any ;
    /**
     * Gets the value of the optional_bool field.
     */
    getOptionalBool ( ) : boolean | null ;
    /**
     * Gets the value of the optional_bool field or the default value if not set.
     */
    getOptionalBoolOrDefault ( ) : boolean ;
    /**
     * Gets the value of the optional_bytes field.
     */
    getOptionalBytes ( ) : string | null ;
    /**
     * Gets the value of the optional_bytes field or the default value if not set.
     */
    getOptionalBytesOrDefault ( ) : string ;
    /**
     * Gets the value of the optional_double field.
     */
    getOptionalDouble ( ) : number | null ;
    /**
     * Gets the value of the optional_double field or the default value if not set.
     */
    getOptionalDoubleOrDefault ( ) : number ;
    /**
     * Gets the value of the optional_fixed32 field.
     */
    getOptionalFixed32 ( ) : number | null ;
    /**
     * Gets the value of the optional_fixed32 field or the default value if not set.
     */
    getOptionalFixed32OrDefault ( ) : number ;
    /**
     * Gets the value of the optional_fixed64 field.
     */
    getOptionalFixed64 ( ) : string | null ;
    /**
     * Gets the value of the optional_fixed64 field or the default value if not set.
     */
    getOptionalFixed64OrDefault ( ) : string ;
    /**
     * Gets the value of the optional_float field.
     */
    getOptionalFloat ( ) : number | null ;
    /**
     * Gets the value of the optional_float field or the default value if not set.
     */
    getOptionalFloatOrDefault ( ) : number ;
    /**
     * Gets the value of the optional_int32 field.
     */
    getOptionalInt32 ( ) : number | null ;
    /**
     * Gets the value of the optional_int32 field or the default value if not set.
     */
    getOptionalInt32OrDefault ( ) : number ;
    /**
     * Gets the value of the optional_int64 field.
     */
    getOptionalInt64 ( ) : string | null ;
    /**
     * Gets the value of the optional_int64_number field.
     */
    getOptionalInt64Number ( ) : number | null ;
    /**
     * Gets the value of the optional_int64_number field or the default value if not set.
     */
    getOptionalInt64NumberOrDefault ( ) : number ;
    /**
     * Gets the value of the optional_int64 field or the default value if not set.
     */
    getOptionalInt64OrDefault ( ) : string ;
    /**
     * Gets the value of the optional_int64_string field.
     */
    getOptionalInt64String ( ) : string | null ;
    /**
     * Gets the value of the optional_int64_string field or the default value if not set.
     */
    getOptionalInt64StringOrDefault ( ) : string ;
    /**
     * Gets the value of the optional_nested_enum field.
     */
    getOptionalNestedEnum ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum | null ;
    /**
     * Gets the value of the optional_nested_enum field or the default value if not set.
     */
    getOptionalNestedEnumOrDefault ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum ;
    /**
     * Gets the value of the optional_nested_message field.
     */
    getOptionalNestedMessage ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage | null ;
    /**
     * Gets the value of the optional_nested_message field or the default value if not set.
     */
    getOptionalNestedMessageOrDefault ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage ;
    /**
     * Gets the value of the optional_sfixed32 field.
     */
    getOptionalSfixed32 ( ) : number | null ;
    /**
     * Gets the value of the optional_sfixed32 field or the default value if not set.
     */
    getOptionalSfixed32OrDefault ( ) : number ;
    /**
     * Gets the value of the optional_sfixed64 field.
     */
    getOptionalSfixed64 ( ) : string | null ;
    /**
     * Gets the value of the optional_sfixed64 field or the default value if not set.
     */
    getOptionalSfixed64OrDefault ( ) : string ;
    /**
     * Gets the value of the optional_sint32 field.
     */
    getOptionalSint32 ( ) : number | null ;
    /**
     * Gets the value of the optional_sint32 field or the default value if not set.
     */
    getOptionalSint32OrDefault ( ) : number ;
    /**
     * Gets the value of the optional_sint64 field.
     */
    getOptionalSint64 ( ) : string | null ;
    /**
     * Gets the value of the optional_sint64 field or the default value if not set.
     */
    getOptionalSint64OrDefault ( ) : string ;
    /**
     * Gets the value of the optional_string field.
     */
    getOptionalString ( ) : string | null ;
    /**
     * Gets the value of the optional_string field or the default value if not set.
     */
    getOptionalStringOrDefault ( ) : string ;
    /**
     * Gets the value of the optional_uint32 field.
     */
    getOptionalUint32 ( ) : number | null ;
    /**
     * Gets the value of the optional_uint32 field or the default value if not set.
     */
    getOptionalUint32OrDefault ( ) : number ;
    /**
     * Gets the value of the optional_uint64 field.
     */
    getOptionalUint64 ( ) : string | null ;
    /**
     * Gets the value of the optional_uint64 field or the default value if not set.
     */
    getOptionalUint64OrDefault ( ) : string ;
    /**
     * Gets the value of the optionalgroup field.
     */
    getOptionalgroup ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.OptionalGroup | null ;
    /**
     * Gets the value of the optionalgroup field or the default value if not set.
     */
    getOptionalgroupOrDefault ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.OptionalGroup ;
    /**
     * Gets the value of the packed_bool field at the index given.
     * @param index The index to lookup.
     */
    getPackedBool (index : number ) : boolean | null ;
    /**
     * Gets the value of the packed_bool field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedBoolOrDefault (index : number ) : boolean ;
    /**
     * Gets the value of the packed_double field at the index given.
     * @param index The index to lookup.
     */
    getPackedDouble (index : number ) : number | null ;
    /**
     * Gets the value of the packed_double field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedDoubleOrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_fixed32 field at the index given.
     * @param index The index to lookup.
     */
    getPackedFixed32 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_fixed32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedFixed32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_fixed64 field at the index given.
     * @param index The index to lookup.
     */
    getPackedFixed64 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_fixed64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedFixed64OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_float field at the index given.
     * @param index The index to lookup.
     */
    getPackedFloat (index : number ) : number | null ;
    /**
     * Gets the value of the packed_float field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedFloatOrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_int32 field at the index given.
     * @param index The index to lookup.
     */
    getPackedInt32 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_int32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedInt32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_int64 field at the index given.
     * @param index The index to lookup.
     */
    getPackedInt64 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_int64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedInt64OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_sfixed32 field at the index given.
     * @param index The index to lookup.
     */
    getPackedSfixed32 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_sfixed32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedSfixed32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_sfixed64 field at the index given.
     * @param index The index to lookup.
     */
    getPackedSfixed64 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_sfixed64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedSfixed64OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_sint32 field at the index given.
     * @param index The index to lookup.
     */
    getPackedSint32 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_sint32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedSint32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_sint64 field at the index given.
     * @param index The index to lookup.
     */
    getPackedSint64 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_sint64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedSint64OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_uint32 field at the index given.
     * @param index The index to lookup.
     */
    getPackedUint32 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_uint32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedUint32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the packed_uint64 field at the index given.
     * @param index The index to lookup.
     */
    getPackedUint64 (index : number ) : number | null ;
    /**
     * Gets the value of the packed_uint64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getPackedUint64OrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_bool field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedBool (index : number ) : boolean | null ;
    /**
     * Gets the value of the repeated_bool field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedBoolOrDefault (index : number ) : boolean ;
    /**
     * Gets the value of the repeated_bytes field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedBytes (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_bytes field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedBytesOrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeated_double field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedDouble (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_double field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedDoubleOrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_fixed32 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedFixed32 (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_fixed32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedFixed32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_fixed64 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedFixed64 (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_fixed64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedFixed64OrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeated_float field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedFloat (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_float field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedFloatOrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_int32 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedInt32 (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_int32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedInt32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_int64 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedInt64 (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_int64_number field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedInt64Number (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_int64_number field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedInt64NumberOrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_int64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedInt64OrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeated_int64_string field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedInt64String (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_int64_string field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedInt64StringOrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeated_nested_enum field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedNestedEnum (index : number ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum | null ;
    /**
     * Gets the value of the repeated_nested_enum field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedNestedEnumOrDefault (index : number ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum ;
    /**
     * Gets the value of the repeated_nested_message field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedNestedMessage (index : number ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage | null ;
    /**
     * Gets the value of the repeated_nested_message field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedNestedMessageOrDefault (index : number ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage ;
    /**
     * Gets the value of the repeated_sfixed32 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedSfixed32 (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_sfixed32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedSfixed32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_sfixed64 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedSfixed64 (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_sfixed64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedSfixed64OrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeated_sint32 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedSint32 (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_sint32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedSint32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_sint64 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedSint64 (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_sint64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedSint64OrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeated_string field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedString (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_string field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedStringOrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeated_uint32 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedUint32 (index : number ) : number | null ;
    /**
     * Gets the value of the repeated_uint32 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedUint32OrDefault (index : number ) : number ;
    /**
     * Gets the value of the repeated_uint64 field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedUint64 (index : number ) : string | null ;
    /**
     * Gets the value of the repeated_uint64 field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedUint64OrDefault (index : number ) : string ;
    /**
     * Gets the value of the repeatedgroup field at the index given.
     * @param index The index to lookup.
     */
    getRepeatedgroup (index : number ) : ಠ_ಠ.clutz.proto2.TestAllTypes.RepeatedGroup | null ;
    /**
     * Gets the value of the repeatedgroup field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getRepeatedgroupOrDefault (index : number ) : ಠ_ಠ.clutz.proto2.TestAllTypes.RepeatedGroup ;
    hasOptionalBool ( ) : boolean ;
    hasOptionalBytes ( ) : boolean ;
    hasOptionalDouble ( ) : boolean ;
    hasOptionalFixed32 ( ) : boolean ;
    hasOptionalFixed64 ( ) : boolean ;
    hasOptionalFloat ( ) : boolean ;
    hasOptionalInt32 ( ) : boolean ;
    hasOptionalInt64 ( ) : boolean ;
    hasOptionalInt64Number ( ) : boolean ;
    hasOptionalInt64String ( ) : boolean ;
    hasOptionalNestedEnum ( ) : boolean ;
    hasOptionalNestedMessage ( ) : boolean ;
    hasOptionalSfixed32 ( ) : boolean ;
    hasOptionalSfixed64 ( ) : boolean ;
    hasOptionalSint32 ( ) : boolean ;
    hasOptionalSint64 ( ) : boolean ;
    hasOptionalString ( ) : boolean ;
    hasOptionalUint32 ( ) : boolean ;
    hasOptionalUint64 ( ) : boolean ;
    hasOptionalgroup ( ) : boolean ;
    hasPackedBool ( ) : boolean ;
    hasPackedDouble ( ) : boolean ;
    hasPackedFixed32 ( ) : boolean ;
    hasPackedFixed64 ( ) : boolean ;
    hasPackedFloat ( ) : boolean ;
    hasPackedInt32 ( ) : boolean ;
    hasPackedInt64 ( ) : boolean ;
    hasPackedSfixed32 ( ) : boolean ;
    hasPackedSfixed64 ( ) : boolean ;
    hasPackedSint32 ( ) : boolean ;
    hasPackedSint64 ( ) : boolean ;
    hasPackedUint32 ( ) : boolean ;
    hasPackedUint64 ( ) : boolean ;
    hasRepeatedBool ( ) : boolean ;
    hasRepeatedBytes ( ) : boolean ;
    hasRepeatedDouble ( ) : boolean ;
    hasRepeatedFixed32 ( ) : boolean ;
    hasRepeatedFixed64 ( ) : boolean ;
    hasRepeatedFloat ( ) : boolean ;
    hasRepeatedInt32 ( ) : boolean ;
    hasRepeatedInt64 ( ) : boolean ;
    hasRepeatedInt64Number ( ) : boolean ;
    hasRepeatedInt64String ( ) : boolean ;
    hasRepeatedNestedEnum ( ) : boolean ;
    hasRepeatedNestedMessage ( ) : boolean ;
    hasRepeatedSfixed32 ( ) : boolean ;
    hasRepeatedSfixed64 ( ) : boolean ;
    hasRepeatedSint32 ( ) : boolean ;
    hasRepeatedSint64 ( ) : boolean ;
    hasRepeatedString ( ) : boolean ;
    hasRepeatedUint32 ( ) : boolean ;
    hasRepeatedUint64 ( ) : boolean ;
    hasRepeatedgroup ( ) : boolean ;
    optionalBoolCount ( ) : number ;
    optionalBytesCount ( ) : number ;
    optionalDoubleCount ( ) : number ;
    optionalFixed32Count ( ) : number ;
    optionalFixed64Count ( ) : number ;
    optionalFloatCount ( ) : number ;
    optionalInt32Count ( ) : number ;
    optionalInt64Count ( ) : number ;
    optionalInt64NumberCount ( ) : number ;
    optionalInt64StringCount ( ) : number ;
    optionalNestedEnumCount ( ) : number ;
    optionalNestedMessageCount ( ) : number ;
    optionalSfixed32Count ( ) : number ;
    optionalSfixed64Count ( ) : number ;
    optionalSint32Count ( ) : number ;
    optionalSint64Count ( ) : number ;
    optionalStringCount ( ) : number ;
    optionalUint32Count ( ) : number ;
    optionalUint64Count ( ) : number ;
    optionalgroupCount ( ) : number ;
    /**
     * Returns the array of values in the packed_bool field.
     */
    packedBoolArray ( ) : boolean [] ;
    packedBoolCount ( ) : number ;
    /**
     * Returns the array of values in the packed_double field.
     */
    packedDoubleArray ( ) : number [] ;
    packedDoubleCount ( ) : number ;
    /**
     * Returns the array of values in the packed_fixed32 field.
     */
    packedFixed32Array ( ) : number [] ;
    packedFixed32Count ( ) : number ;
    /**
     * Returns the array of values in the packed_fixed64 field.
     */
    packedFixed64Array ( ) : number [] ;
    packedFixed64Count ( ) : number ;
    /**
     * Returns the array of values in the packed_float field.
     */
    packedFloatArray ( ) : number [] ;
    packedFloatCount ( ) : number ;
    /**
     * Returns the array of values in the packed_int32 field.
     */
    packedInt32Array ( ) : number [] ;
    packedInt32Count ( ) : number ;
    /**
     * Returns the array of values in the packed_int64 field.
     */
    packedInt64Array ( ) : number [] ;
    packedInt64Count ( ) : number ;
    /**
     * Returns the array of values in the packed_sfixed32 field.
     */
    packedSfixed32Array ( ) : number [] ;
    packedSfixed32Count ( ) : number ;
    /**
     * Returns the array of values in the packed_sfixed64 field.
     */
    packedSfixed64Array ( ) : number [] ;
    packedSfixed64Count ( ) : number ;
    /**
     * Returns the array of values in the packed_sint32 field.
     */
    packedSint32Array ( ) : number [] ;
    packedSint32Count ( ) : number ;
    /**
     * Returns the array of values in the packed_sint64 field.
     */
    packedSint64Array ( ) : number [] ;
    packedSint64Count ( ) : number ;
    /**
     * Returns the array of values in the packed_uint32 field.
     */
    packedUint32Array ( ) : number [] ;
    packedUint32Count ( ) : number ;
    /**
     * Returns the array of values in the packed_uint64 field.
     */
    packedUint64Array ( ) : number [] ;
    packedUint64Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_bool field.
     */
    repeatedBoolArray ( ) : boolean [] ;
    repeatedBoolCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_bytes field.
     */
    repeatedBytesArray ( ) : string [] ;
    repeatedBytesCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_double field.
     */
    repeatedDoubleArray ( ) : number [] ;
    repeatedDoubleCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_fixed32 field.
     */
    repeatedFixed32Array ( ) : number [] ;
    repeatedFixed32Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_fixed64 field.
     */
    repeatedFixed64Array ( ) : string [] ;
    repeatedFixed64Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_float field.
     */
    repeatedFloatArray ( ) : number [] ;
    repeatedFloatCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_int32 field.
     */
    repeatedInt32Array ( ) : number [] ;
    repeatedInt32Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_int64 field.
     */
    repeatedInt64Array ( ) : string [] ;
    repeatedInt64Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_int64_number field.
     */
    repeatedInt64NumberArray ( ) : number [] ;
    repeatedInt64NumberCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_int64_string field.
     */
    repeatedInt64StringArray ( ) : string [] ;
    repeatedInt64StringCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_nested_enum field.
     */
    repeatedNestedEnumArray ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum [] ;
    repeatedNestedEnumCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_nested_message field.
     */
    repeatedNestedMessageArray ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage [] ;
    repeatedNestedMessageCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_sfixed32 field.
     */
    repeatedSfixed32Array ( ) : number [] ;
    repeatedSfixed32Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_sfixed64 field.
     */
    repeatedSfixed64Array ( ) : string [] ;
    repeatedSfixed64Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_sint32 field.
     */
    repeatedSint32Array ( ) : number [] ;
    repeatedSint32Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_sint64 field.
     */
    repeatedSint64Array ( ) : string [] ;
    repeatedSint64Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_string field.
     */
    repeatedStringArray ( ) : string [] ;
    repeatedStringCount ( ) : number ;
    /**
     * Returns the array of values in the repeated_uint32 field.
     */
    repeatedUint32Array ( ) : number [] ;
    repeatedUint32Count ( ) : number ;
    /**
     * Returns the array of values in the repeated_uint64 field.
     */
    repeatedUint64Array ( ) : string [] ;
    repeatedUint64Count ( ) : number ;
    /**
     * Returns the array of values in the repeatedgroup field.
     */
    repeatedgroupArray ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.RepeatedGroup [] ;
    repeatedgroupCount ( ) : number ;
    /**
     * Sets the value of the optional_bool field.
     * @param value The value.
     */
    setOptionalBool (value : boolean ) : void ;
    /**
     * Sets the value of the optional_bytes field.
     * @param value The value.
     */
    setOptionalBytes (value : string ) : void ;
    /**
     * Sets the value of the optional_double field.
     * @param value The value.
     */
    setOptionalDouble (value : number ) : void ;
    /**
     * Sets the value of the optional_fixed32 field.
     * @param value The value.
     */
    setOptionalFixed32 (value : number ) : void ;
    /**
     * Sets the value of the optional_fixed64 field.
     * @param value The value.
     */
    setOptionalFixed64 (value : string ) : void ;
    /**
     * Sets the value of the optional_float field.
     * @param value The value.
     */
    setOptionalFloat (value : number ) : void ;
    /**
     * Sets the value of the optional_int32 field.
     * @param value The value.
     */
    setOptionalInt32 (value : number ) : void ;
    /**
     * Sets the value of the optional_int64 field.
     * @param value The value.
     */
    setOptionalInt64 (value : string ) : void ;
    /**
     * Sets the value of the optional_int64_number field.
     * @param value The value.
     */
    setOptionalInt64Number (value : number ) : void ;
    /**
     * Sets the value of the optional_int64_string field.
     * @param value The value.
     */
    setOptionalInt64String (value : string ) : void ;
    /**
     * Sets the value of the optional_nested_enum field.
     * @param value The value.
     */
    setOptionalNestedEnum (value : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum ) : void ;
    /**
     * Sets the value of the optional_nested_message field.
     * @param value The value.
     */
    setOptionalNestedMessage (value : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage ) : void ;
    /**
     * Sets the value of the optional_sfixed32 field.
     * @param value The value.
     */
    setOptionalSfixed32 (value : number ) : void ;
    /**
     * Sets the value of the optional_sfixed64 field.
     * @param value The value.
     */
    setOptionalSfixed64 (value : string ) : void ;
    /**
     * Sets the value of the optional_sint32 field.
     * @param value The value.
     */
    setOptionalSint32 (value : number ) : void ;
    /**
     * Sets the value of the optional_sint64 field.
     * @param value The value.
     */
    setOptionalSint64 (value : string ) : void ;
    /**
     * Sets the value of the optional_string field.
     * @param value The value.
     */
    setOptionalString (value : string ) : void ;
    /**
     * Sets the value of the optional_uint32 field.
     * @param value The value.
     */
    setOptionalUint32 (value : number ) : void ;
    /**
     * Sets the value of the optional_uint64 field.
     * @param value The value.
     */
    setOptionalUint64 (value : string ) : void ;
    /**
     * Sets the value of the optionalgroup field.
     * @param value The value.
     */
    setOptionalgroup (value : ಠ_ಠ.clutz.proto2.TestAllTypes.OptionalGroup ) : void ;
    static getDescriptor ( ) : any ;
  }
}
declare module 'goog:proto2.TestAllTypes' {
  import TestAllTypes = ಠ_ಠ.clutz.proto2.TestAllTypes;
  export default TestAllTypes;
}
// Generated from proto2/test.pb.js
declare namespace ಠ_ಠ.clutz.proto2.TestAllTypes {
  /**
   * Enumeration NestedEnum.
   */
  /**
   * Enumeration NestedEnum.
   */
  enum NestedEnum {
    BAR = 2.0 ,
    BAZ = 3.0 ,
    FOO = 0.0 ,
    OOF = 1.0 ,
  }
}
declare module 'goog:proto2.TestAllTypes.NestedEnum' {
  import NestedEnum = ಠ_ಠ.clutz.proto2.TestAllTypes.NestedEnum;
  export default NestedEnum;
}
// Generated from proto2/test.pb.js
declare namespace ಠ_ಠ.clutz.proto2.TestAllTypes {
  /**
   * Message NestedMessage.
   */
  class NestedMessage extends ಠ_ಠ.clutz.goog.proto2.Message {
    private noStructuralTyping_proto2_TestAllTypes_NestedMessage : any;
    /**
     * Message NestedMessage.
     */
    constructor ( ) ;
    bCount ( ) : number ;
    cCount ( ) : number ;
    clearB ( ) : void ;
    clearC ( ) : void ;
    /**
     * Overrides {@link goog.proto2.Message#clone} to specify its exact return type.
     */
    clone ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage ;
    /**
     * Gets the value of the b field.
     */
    getB ( ) : number | null ;
    /**
     * Gets the value of the b field or the default value if not set.
     */
    getBOrDefault ( ) : number ;
    /**
     * Gets the value of the c field.
     */
    getC ( ) : number | null ;
    /**
     * Gets the value of the c field or the default value if not set.
     */
    getCOrDefault ( ) : number ;
    getDescriptor ( ) : any ;
    hasB ( ) : boolean ;
    hasC ( ) : boolean ;
    /**
     * Sets the value of the b field.
     * @param value The value.
     */
    setB (value : number ) : void ;
    /**
     * Sets the value of the c field.
     * @param value The value.
     */
    setC (value : number ) : void ;
    static getDescriptor ( ) : any ;
  }
}
declare module 'goog:proto2.TestAllTypes.NestedMessage' {
  import NestedMessage = ಠ_ಠ.clutz.proto2.TestAllTypes.NestedMessage;
  export default NestedMessage;
}
// Generated from proto2/test.pb.js
declare namespace ಠ_ಠ.clutz.proto2.TestAllTypes {
  /**
   * Message OptionalGroup.
   */
  class OptionalGroup extends ಠ_ಠ.clutz.goog.proto2.Message {
    private noStructuralTyping_proto2_TestAllTypes_OptionalGroup : any;
    /**
     * Message OptionalGroup.
     */
    constructor ( ) ;
    aCount ( ) : number ;
    clearA ( ) : void ;
    /**
     * Overrides {@link goog.proto2.Message#clone} to specify its exact return type.
     */
    clone ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.OptionalGroup ;
    /**
     * Gets the value of the a field.
     */
    getA ( ) : number | null ;
    /**
     * Gets the value of the a field or the default value if not set.
     */
    getAOrDefault ( ) : number ;
    getDescriptor ( ) : any ;
    hasA ( ) : boolean ;
    /**
     * Sets the value of the a field.
     * @param value The value.
     */
    setA (value : number ) : void ;
    static getDescriptor ( ) : any ;
  }
}
declare module 'goog:proto2.TestAllTypes.OptionalGroup' {
  import OptionalGroup = ಠ_ಠ.clutz.proto2.TestAllTypes.OptionalGroup;
  export default OptionalGroup;
}
// Generated from proto2/test.pb.js
declare namespace ಠ_ಠ.clutz.proto2.TestAllTypes {
  /**
   * Message RepeatedGroup.
   */
  class RepeatedGroup extends ಠ_ಠ.clutz.goog.proto2.Message {
    private noStructuralTyping_proto2_TestAllTypes_RepeatedGroup : any;
    /**
     * Message RepeatedGroup.
     */
    constructor ( ) ;
    /**
     * Returns the array of values in the a field.
     */
    aArray ( ) : number [] ;
    aCount ( ) : number ;
    /**
     * Adds a value to the a field.
     * @param value The value to add.
     */
    addA (value : number ) : void ;
    clearA ( ) : void ;
    /**
     * Overrides {@link goog.proto2.Message#clone} to specify its exact return type.
     */
    clone ( ) : ಠ_ಠ.clutz.proto2.TestAllTypes.RepeatedGroup ;
    /**
     * Gets the value of the a field at the index given.
     * @param index The index to lookup.
     */
    getA (index : number ) : number | null ;
    /**
     * Gets the value of the a field at the index given or the default value if not set.
     * @param index The index to lookup.
     */
    getAOrDefault (index : number ) : number ;
    getDescriptor ( ) : any ;
    hasA ( ) : boolean ;
    static getDescriptor ( ) : any ;
  }
}
declare module 'goog:proto2.TestAllTypes.RepeatedGroup' {
  import RepeatedGroup = ಠ_ಠ.clutz.proto2.TestAllTypes.RepeatedGroup;
  export default RepeatedGroup;
}
// Generated from proto2/test.pb.js
declare namespace ಠ_ಠ.clutz.proto2 {
  /**
   * Message TestDefaultChild.
   */
  class TestDefaultChild extends ಠ_ಠ.clutz.goog.proto2.Message {
    private noStructuralTyping_proto2_TestDefaultChild : any;
    /**
     * Message TestDefaultChild.
     */
    constructor ( ) ;
    clearFoo ( ) : void ;
    /**
     * Overrides {@link goog.proto2.Message#clone} to specify its exact return type.
     */
    clone ( ) : ಠ_ಠ.clutz.proto2.TestDefaultChild ;
    fooCount ( ) : number ;
    getDescriptor ( ) : any ;
    /**
     * Gets the value of the foo field.
     */
    getFoo ( ) : boolean | null ;
    /**
     * Gets the value of the foo field or the default value if not set.
     */
    getFooOrDefault ( ) : boolean ;
    hasFoo ( ) : boolean ;
    /**
     * Sets the value of the foo field.
     * @param value The value.
     */
    setFoo (value : boolean ) : void ;
    static getDescriptor ( ) : any ;
  }
}
declare module 'goog:proto2.TestDefaultChild' {
  import TestDefaultChild = ಠ_ಠ.clutz.proto2.TestDefaultChild;
  export default TestDefaultChild;
}
// Generated from proto2/test.pb.js
declare namespace ಠ_ಠ.clutz.proto2 {
  /**
   * Message TestDefaultParent.
   */
  class TestDefaultParent extends ಠ_ಠ.clutz.goog.proto2.Message {
    private noStructuralTyping_proto2_TestDefaultParent : any;
    /**
     * Message TestDefaultParent.
     */
    constructor ( ) ;
    childCount ( ) : number ;
    clearChild ( ) : void ;
    /**
     * Overrides {@link goog.proto2.Message#clone} to specify its exact return type.
     */
    clone ( ) : ಠ_ಠ.clutz.proto2.TestDefaultParent ;
    /**
     * Gets the value of the child field.
     */
    getChild ( ) : ಠ_ಠ.clutz.proto2.TestDefaultChild | null ;
    /**
     * Gets the value of the child field or the default value if not set.
     */
    getChildOrDefault ( ) : ಠ_ಠ.clutz.proto2.TestDefaultChild ;
    getDescriptor ( ) : any ;
    hasChild ( ) : boolean ;
    /**
     * Sets the value of the child field.
     * @param value The value.
     */
    setChild (value : ಠ_ಠ.clutz.proto2.TestDefaultChild ) : void ;
    static getDescriptor ( ) : any ;
  }
}
declare module 'goog:proto2.TestDefaultParent' {
  import TestDefaultParent = ಠ_ಠ.clutz.proto2.TestDefaultParent;
  export default TestDefaultParent;
}
