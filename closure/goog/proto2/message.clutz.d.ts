//!! generated by clutz.
// Generated from proto2/message.js
declare namespace ಠ_ಠ.clutz.goog.proto2 {
  /**
   * Abstract base class for all Protocol Buffer 2 messages. It will be
   * subclassed in the code generated by the Protocol Compiler. Any other
   * subclasses are prohibited.
   */
  class Message {
    private noStructuralTyping_goog_proto2_Message : any;
    /**
     * Adds the given value to the field specified by the
     * given field descriptor. Note that the field must be repeated.
     * @param field The field in which to add the the value.
     * @param value The new value to add to the field.
     */
    add (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null , value : any ) : void ;
    /**
     * Adds the value to the *repeating* field indicated by the given tag.
     *
     * GENERATED CODE USE ONLY. Basis of the add{Field} methods.
     * @param tag The field's tag index.
     * @param value The value to add.
     */
    protected add$Value (tag : number , value : any ) : void ;
    /**
     * Gets the values at the field indicated by the given tag.
     *
     * GENERATED CODE USE ONLY. Basis of the {field}Array methods.
     * @param tag The field's tag index.
     */
    protected array$Values (tag : number ) : any [] ;
    /**
     * Returns the array of values found for the given repeated field.
     * @param field The field for which to return the values.
     */
    arrayOf (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null ) : any [] ;
    /**
     * Clears the field specified.
     * @param field The field to clear.
     */
    clear (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null ) : void ;
    /**
     * Clears the field specified by tag.
     *
     * GENERATED CODE USE ONLY. Basis of the clear{Field} methods.
     * @param tag The tag of the field to clear.
     */
    protected clear$Field (tag : number ) : void ;
    clone ( ) : ಠ_ಠ.clutz.goog.proto2.Message ;
    /**
     * Recursively copies the known fields from the given message to this message.
     * Removes the fields which are not present in the source message.
     * @param message The source message.
     */
    copyFrom (message : ಠ_ಠ.clutz.goog.proto2.Message ) : void ;
    /**
     * Returns the number of values stored in the field by the given tag.
     *
     * GENERATED CODE USE ONLY. Basis of the {field}Count methods.
     * @param tag The tag.
     */
    protected count$Values (tag : number ) : number ;
    /**
     * Returns the number of values stored in the given field.
     * @param field The field for which to count the number of values.
     */
    countOf (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null ) : number ;
    /**
     * Compares this message with another one ignoring the unknown fields.
     * @param other The other message.
     */
    equals (other ? : any ) : boolean ;
    /**
     * Iterates over all the unknown fields in the message.
     * @param callback A callback method which gets invoked for each unknown field.
     * @param opt_scope The scope under which to execute the callback. If not given, the current message will be used.
     */
    forEachUnknown < T = any > (callback : (this : T , a : number , b : any ) => any , opt_scope ? : T ) : void ;
    /**
     * Returns the value stored at the field specified by the
     * given field descriptor.
     * @param field The field for which to get the value.
     * @param opt_index If the field is repeated, the index to use when looking up the value.
     */
    get (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null , opt_index ? : number ) : any ;
    /**
     * Gets the value at the field indicated by the given tag.
     *
     * GENERATED CODE USE ONLY. Basis of the get{Field} methods.
     * @param tag The field's tag index.
     * @param opt_index If the field is a repeated field, the index at which to get the value.
     */
    protected get$Value (tag : number , opt_index ? : number ) : any ;
    /**
     * Gets the value at the field indicated by the given tag or the default value
     * if none.
     *
     * GENERATED CODE USE ONLY. Basis of the get{Field} methods.
     * @param tag The field's tag index.
     * @param opt_index If the field is a repeated field, the index at which to get the value.
     */
    protected get$ValueOrDefault (tag : number , opt_index ? : number ) : any ;
    /**
     * Returns the descriptor which describes the current message.
     *
     * This only works if we assume people never subclass protobufs.
     */
    getDescriptor ( ) : ಠ_ಠ.clutz.goog.proto2.Descriptor ;
    /**
     * Returns the value stored at the field specified by the
     * given field descriptor or the default value if none exists.
     * @param field The field for which to get the value.
     * @param opt_index If the field is repeated, the index to use when looking up the value.
     */
    getOrDefault (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null , opt_index ? : number ) : any ;
    /**
     * Returns whether there is a value stored at the field specified by the
     * given field descriptor.
     * @param field The field for which to check if there is a value.
     */
    has (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null ) : boolean ;
    /**
     * Returns the whether or not the field indicated by the given tag
     * has a value.
     *
     * GENERATED CODE USE ONLY. Basis of the has{Field} methods.
     * @param tag The tag.
     */
    has$Value (tag : number ) : boolean ;
    /**
     * Fills in the protocol buffer with default values. Any fields that are
     * already set will not be overridden.
     * @param simpleFieldsToo If true, all fields will be initialized; if false, only the nested messages and groups.
     */
    initDefaults (simpleFieldsToo : boolean ) : void ;
    /**
     * Initializes the message with a lazy deserializer and its associated data.
     * This method should be called by internal methods ONLY.
     * @param deserializer The lazy deserializer to use to decode the data on the fly.
     * @param data The data to decode/deserialize.
     */
    initializeForLazyDeserializer (deserializer : ಠ_ಠ.clutz.goog.proto2.LazyDeserializer | null , data : any ) : void ;
    /**
     * Merges the given message into this message.
     *
     * Singular fields will be overwritten, except for embedded messages which will
     * be merged. Repeated fields will be concatenated.
     * @param message The source message.
     */
    mergeFrom (message : ಠ_ಠ.clutz.goog.proto2.Message ) : void ;
    /**
     * Stores the given value to the field specified by the
     * given field descriptor. Note that the field must not be repeated.
     * @param field The field for which to set the value.
     * @param value The new value for the field.
     */
    set (field : ಠ_ಠ.clutz.goog.proto2.FieldDescriptor | null , value : any ) : void ;
    /**
     * Sets the value of the *non-repeating* field indicated by the given tag.
     *
     * GENERATED CODE USE ONLY. Basis of the set{Field} methods.
     * @param tag The field's tag index.
     * @param value The field's value.
     */
    protected set$Value (tag : number , value : any ) : void ;
    /**
     * Sets the value of an unknown field, by tag.
     * @param tag The tag of an unknown field (must be >= 1).
     * @param value The value for that unknown field.
     */
    setUnknown (tag : number , value : any ) : void ;
    /**
     * Creates the metadata descriptor representing the definition of this message.
     * @param messageType Constructor for the message type to which this metadata applies.
     * @param metadataObj The object containing the metadata.
     */
    static createDescriptor (messageType : { new ( ) : ಠ_ಠ.clutz.goog.proto2.Message } , metadataObj : GlobalObject ) : ಠ_ಠ.clutz.goog.proto2.Descriptor ;
  }
}
// Generated from proto2/message.js
declare namespace ಠ_ಠ.clutz.goog.proto2.Message {
  /**
   * An enumeration defining the possible field types.
   * Should be a mirror of that defined in descriptor.h.
   *
   * TODO(user): Remove this alias.  The code generator generates code that
   * references this enum, so it needs to exist until the code generator is
   * changed.  The enum was moved to from Message to FieldDescriptor to avoid a
   * dependency cycle.
   *
   * Use goog.proto2.FieldDescriptor.FieldType instead.
   */
  enum FieldType {
    BOOL = 8.0 ,
    BYTES = 12.0 ,
    DOUBLE = 1.0 ,
    ENUM = 14.0 ,
    FIXED32 = 7.0 ,
    FIXED64 = 6.0 ,
    FLOAT = 2.0 ,
    GROUP = 10.0 ,
    INT32 = 5.0 ,
    INT64 = 3.0 ,
    MESSAGE = 11.0 ,
    SFIXED32 = 15.0 ,
    SFIXED64 = 16.0 ,
    SINT32 = 17.0 ,
    SINT64 = 18.0 ,
    STRING = 9.0 ,
    UINT32 = 13.0 ,
    UINT64 = 4.0 ,
  }
}
declare module 'goog:goog.proto2.Message' {
  import Message = ಠ_ಠ.clutz.goog.proto2.Message;
  export default Message;
}
