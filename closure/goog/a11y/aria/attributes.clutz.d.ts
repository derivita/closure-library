//!! generated by clutz.
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for AutoCompleteValues.
   */
  /**
   * ARIA state values for AutoCompleteValues.
   */
  enum AutoCompleteValues {
    BOTH = 'both' ,
    INLINE = 'inline' ,
    LIST = 'list' ,
    NONE = 'none' ,
  }
}
declare module 'goog:goog.a11y.aria.AutoCompleteValues' {
  import AutoCompleteValues = ಠ_ಠ.clutz.goog.a11y.aria.AutoCompleteValues;
  export default AutoCompleteValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for CheckedValues.
   */
  /**
   * ARIA state values for CheckedValues.
   */
  enum CheckedValues {
    FALSE = 'false' ,
    MIXED = 'mixed' ,
    TRUE = 'true' ,
    UNDEFINED = 'undefined' ,
  }
}
declare module 'goog:goog.a11y.aria.CheckedValues' {
  import CheckedValues = ಠ_ಠ.clutz.goog.a11y.aria.CheckedValues;
  export default CheckedValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for DropEffectValues.
   */
  /**
   * ARIA state values for DropEffectValues.
   */
  enum DropEffectValues {
    COPY = 'copy' ,
    EXECUTE = 'execute' ,
    LINK = 'link' ,
    MOVE = 'move' ,
    NONE = 'none' ,
    POPUP = 'popup' ,
  }
}
declare module 'goog:goog.a11y.aria.DropEffectValues' {
  import DropEffectValues = ಠ_ಠ.clutz.goog.a11y.aria.DropEffectValues;
  export default DropEffectValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for ExpandedValues.
   */
  /**
   * ARIA state values for ExpandedValues.
   */
  enum ExpandedValues {
    FALSE = 'false' ,
    TRUE = 'true' ,
    UNDEFINED = 'undefined' ,
  }
}
declare module 'goog:goog.a11y.aria.ExpandedValues' {
  import ExpandedValues = ಠ_ಠ.clutz.goog.a11y.aria.ExpandedValues;
  export default ExpandedValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for GrabbedValues.
   */
  /**
   * ARIA state values for GrabbedValues.
   */
  enum GrabbedValues {
    FALSE = 'false' ,
    TRUE = 'true' ,
    UNDEFINED = 'undefined' ,
  }
}
declare module 'goog:goog.a11y.aria.GrabbedValues' {
  import GrabbedValues = ಠ_ಠ.clutz.goog.a11y.aria.GrabbedValues;
  export default GrabbedValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for InvalidValues.
   */
  /**
   * ARIA state values for InvalidValues.
   */
  enum InvalidValues {
    FALSE = 'false' ,
    GRAMMAR = 'grammar' ,
    SPELLING = 'spelling' ,
    TRUE = 'true' ,
  }
}
declare module 'goog:goog.a11y.aria.InvalidValues' {
  import InvalidValues = ಠ_ಠ.clutz.goog.a11y.aria.InvalidValues;
  export default InvalidValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for LivePriority.
   */
  /**
   * ARIA state values for LivePriority.
   */
  enum LivePriority {
    ASSERTIVE = 'assertive' ,
    OFF = 'off' ,
    POLITE = 'polite' ,
  }
}
declare module 'goog:goog.a11y.aria.LivePriority' {
  import LivePriority = ಠ_ಠ.clutz.goog.a11y.aria.LivePriority;
  export default LivePriority;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for OrientationValues.
   */
  /**
   * ARIA state values for OrientationValues.
   */
  enum OrientationValues {
    HORIZONTAL = 'horizontal' ,
    VERTICAL = 'vertical' ,
  }
}
declare module 'goog:goog.a11y.aria.OrientationValues' {
  import OrientationValues = ಠ_ಠ.clutz.goog.a11y.aria.OrientationValues;
  export default OrientationValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for PressedValues.
   */
  /**
   * ARIA state values for PressedValues.
   */
  enum PressedValues {
    FALSE = 'false' ,
    MIXED = 'mixed' ,
    TRUE = 'true' ,
    UNDEFINED = 'undefined' ,
  }
}
declare module 'goog:goog.a11y.aria.PressedValues' {
  import PressedValues = ಠ_ಠ.clutz.goog.a11y.aria.PressedValues;
  export default PressedValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for RelevantValues.
   */
  /**
   * ARIA state values for RelevantValues.
   */
  enum RelevantValues {
    ADDITIONS = 'additions' ,
    ALL = 'all' ,
    REMOVALS = 'removals' ,
    TEXT = 'text' ,
  }
}
declare module 'goog:goog.a11y.aria.RelevantValues' {
  import RelevantValues = ಠ_ಠ.clutz.goog.a11y.aria.RelevantValues;
  export default RelevantValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for SelectedValues.
   */
  /**
   * ARIA state values for SelectedValues.
   */
  enum SelectedValues {
    FALSE = 'false' ,
    TRUE = 'true' ,
    UNDEFINED = 'undefined' ,
  }
}
declare module 'goog:goog.a11y.aria.SelectedValues' {
  import SelectedValues = ಠ_ಠ.clutz.goog.a11y.aria.SelectedValues;
  export default SelectedValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA state values for SortValues.
   */
  /**
   * ARIA state values for SortValues.
   */
  enum SortValues {
    ASCENDING = 'ascending' ,
    DESCENDING = 'descending' ,
    NONE = 'none' ,
    OTHER = 'other' ,
  }
}
declare module 'goog:goog.a11y.aria.SortValues' {
  import SortValues = ಠ_ಠ.clutz.goog.a11y.aria.SortValues;
  export default SortValues;
}
// Generated from a11y/aria/attributes.js
declare namespace ಠ_ಠ.clutz.goog.a11y.aria {
  /**
   * ARIA states and properties.
   */
  /**
   * ARIA states and properties.
   */
  enum State {
    ACTIVEDESCENDANT = 'activedescendant' ,
    ATOMIC = 'atomic' ,
    AUTOCOMPLETE = 'autocomplete' ,
    BUSY = 'busy' ,
    CHECKED = 'checked' ,
    COLINDEX = 'colindex' ,
    CONTROLS = 'controls' ,
    CURRENT = 'current' ,
    DESCRIBEDBY = 'describedby' ,
    DISABLED = 'disabled' ,
    DROPEFFECT = 'dropeffect' ,
    EXPANDED = 'expanded' ,
    FLOWTO = 'flowto' ,
    GRABBED = 'grabbed' ,
    HASPOPUP = 'haspopup' ,
    HIDDEN = 'hidden' ,
    INVALID = 'invalid' ,
    LABEL = 'label' ,
    LABELLEDBY = 'labelledby' ,
    LEVEL = 'level' ,
    LIVE = 'live' ,
    MULTILINE = 'multiline' ,
    MULTISELECTABLE = 'multiselectable' ,
    ORIENTATION = 'orientation' ,
    OWNS = 'owns' ,
    POSINSET = 'posinset' ,
    PRESSED = 'pressed' ,
    READONLY = 'readonly' ,
    RELEVANT = 'relevant' ,
    REQUIRED = 'required' ,
    ROWINDEX = 'rowindex' ,
    SELECTED = 'selected' ,
    SETSIZE = 'setsize' ,
    SORT = 'sort' ,
    VALUEMAX = 'valuemax' ,
    VALUEMIN = 'valuemin' ,
    VALUENOW = 'valuenow' ,
    VALUETEXT = 'valuetext' ,
  }
}
declare module 'goog:goog.a11y.aria.State' {
  import State = ಠ_ಠ.clutz.goog.a11y.aria.State;
  export default State;
}
