//!! generated by clutz.
// Generated from locale/timezonelist.js
declare namespace ಠ_ಠ.clutz.goog.locale.timezonelist {
  /**
   * Returns the displayable list of long timezone names paired with its id for
   * the current locale.
   *
   * This method depends on `goog.locale.TimeZoneAllLongNames__<locale>` available
   * from http://go/js_locale_data. Users of this method must add a dependency on
   * this.
   */
  function getTimeZoneAllLongNames ( ) : ( GlobalObject | null ) [] | null ;
  /**
   * Returns the displayable list of long timezone names paired with its id for
   * the current locale, selected based on the region or language provided.
   *
   * This method depends on `goog.locale.TimeZone*__<locale>` available
   * from http://go/js_locale_data. Users of this method must add a dependency on
   * this.
   * @param opt_regionOrLang If region tag is provided, timezone ids specific this region are considered. If language is provided, all regions for which this language is defacto official is considered. If this parameter is not speficied, current locale is used to extract this information.
   */
  function getTimeZoneSelectedLongNames (opt_regionOrLang ? : string ) : ( GlobalObject | null ) [] ;
  /**
   * Returns the displayable list of short timezone names paired with its id for
   * the current locale, selected based on the region or language provided.
   *
   * This method depends on `goog.locale.TimeZone*__<locale>` available
   * from http://go/js_locale_data. Users of this method must add a dependency on
   * this.
   * @param opt_regionOrLang If region tag is provided, timezone ids specific this region are considered. If language is provided, all regions for which this language is defacto official is considered. If this parameter is not speficied, current locale is used to extract this information.
   */
  function getTimeZoneSelectedShortNames (opt_regionOrLang ? : string ) : ( GlobalObject | null ) [] ;
}
declare module 'goog:goog.locale.timezonelist' {
  import timezonelist = ಠ_ಠ.clutz.goog.locale.timezonelist;
  export = timezonelist;
}
