//!! generated by clutz.
// Generated from math/interpolator/spline1.js
declare namespace ಠ_ಠ.clutz.goog.math.interpolator {
  /**
   * A one dimensional cubic spline interpolator with natural boundary conditions.
   */
  class Spline1 implements ಠ_ಠ.clutz.goog.math.interpolator.Interpolator1 {
    private noStructuralTyping_goog_math_interpolator_Spline1 : any;
    /**
     * Computes the derivative at each point of the spline such that
     * the curve is C2. It uses not-a-knot boundary conditions.
     * @param dx The spacing between consecutive data points.
     * @param slope The slopes between consecutive data points.
     */
    protected computeDerivatives (dx : number [] | null , slope : number [] | null ) : number [] ;
    /**
     * Note that the inverse of a cubic spline is not a cubic spline in general.
     * As a result the inverse implementation is only approximate. In
     * particular, it only guarantees the exact inverse at the original input data
     * points passed to setData.
     */
    getInverse ( ) : any ;
    interpolate (x ? : any ) : any ;
    setData (x ? : any , y ? : any ) : void ;
  }
}
declare module 'goog:goog.math.interpolator.Spline1' {
  import Spline1 = ಠ_ಠ.clutz.goog.math.interpolator.Spline1;
  export default Spline1;
}
