//!! generated by clutz.
// Generated from math/vec2.js
declare namespace ಠ_ಠ.clutz.goog.math {
  /**
   * Class for a two-dimensional vector object and assorted functions useful for
   * manipulating points.
   */
  class Vec2 extends ಠ_ಠ.clutz.goog.math.Coordinate {
    private noStructuralTyping_goog_math_Vec2 : any;
    /**
     * Class for a two-dimensional vector object and assorted functions useful for
     * manipulating points.
     * @param x The x coordinate for the vector.
     * @param y The y coordinate for the vector.
     */
    constructor (x : number , y : number ) ;
    /**
     * X-value
     */
    x : number ;
    /**
     * Y-value
     */
    y : number ;
    /**
     * Adds another vector to this vector in-place.
     * @param b The vector to add.
     */
    add (b : ಠ_ಠ.clutz.goog.math.Coordinate ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    clone ( ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    equals (b ? : any ) : any ;
    /**
     * Reverses the sign of the vector. Equivalent to scaling the vector by -1.
     */
    invert ( ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Returns the magnitude of the vector measured from the origin.
     */
    magnitude ( ) : number ;
    /**
     * Normalizes the current vector to have a magnitude of 1.
     */
    normalize ( ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Rotates this vector in-place by a given angle, specified in radians.
     * @param angle The angle, in radians.
     */
    rotate (angle : number ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    scale (a : number , b ? : number ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Returns the squared magnitude of the vector measured from the origin.
     * NOTE(brenneman): Leaving out the square root is not a significant
     * optimization in JavaScript.
     */
    squaredMagnitude ( ) : number ;
    /**
     * Subtracts another vector from this vector in-place.
     * @param b The vector to subtract.
     */
    subtract (b : ಠ_ಠ.clutz.goog.math.Coordinate ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Returns the determinant of two vectors.
     * @param a The first vector.
     * @param b The second vector.
     */
    static determinant (a : ಠ_ಠ.clutz.goog.math.Vec2 , b : ಠ_ಠ.clutz.goog.math.Vec2 ) : number ;
    /**
     * Returns the difference between two vectors as a new Vec2.
     * @param a The first vector.
     * @param b The second vector.
     */
    static difference (a : ಠ_ಠ.clutz.goog.math.Coordinate , b : ಠ_ಠ.clutz.goog.math.Coordinate ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Returns the distance between two vectors.
     * @param a The first vector.
     * @param b The second vector.
     */
    static distance (a : ಠ_ಠ.clutz.goog.math.Coordinate , b : ಠ_ಠ.clutz.goog.math.Coordinate ) : number ;
    /**
     * Returns the dot-product of two vectors.
     * @param a The first vector.
     * @param b The second vector.
     */
    static dot (a : ಠ_ಠ.clutz.goog.math.Coordinate , b : ಠ_ಠ.clutz.goog.math.Coordinate ) : number ;
    /**
     * Compares vectors for equality.
     * @param a The first vector.
     * @param b The second vector.
     */
    static equals (a : ಠ_ಠ.clutz.goog.math.Coordinate , b : ಠ_ಠ.clutz.goog.math.Coordinate ) : boolean ;
    /**
     * Returns a new Vec2 object from a given coordinate.
     * @param a The coordinate.
     */
    static fromCoordinate (a : ಠ_ಠ.clutz.goog.math.Coordinate ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Returns a new Vec2 that is the linear interpolant between vectors a and b at
     * scale-value x.
     * @param a Vector a.
     * @param b Vector b.
     * @param x The proportion between a and b.
     */
    static lerp (a : ಠ_ಠ.clutz.goog.math.Coordinate , b : ಠ_ಠ.clutz.goog.math.Coordinate , x : number ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    static random ( ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    static randomUnit ( ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Returns a new Vec2 that is a copy of the vector a, but rescaled by a factors
     * sx and sy in the x and y directions. If only sx is specified, then y is
     * scaled by the same factor as x.
     * @param a Vector a.
     * @param sx X scale factor.
     * @param sy Y scale factor (optional).
     */
    static rescaled (a : ಠ_ಠ.clutz.goog.math.Coordinate , sx : number , sy ? : number ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Rotates a vector by a given angle, specified in radians, relative to a given
     * axis rotation point. The returned vector is a newly created instance - no
     * in-place changes are done.
     * @param v A vector.
     * @param axisPoint The rotation axis point.
     * @param angle The angle, in radians.
     */
    static rotateAroundPoint (v : ಠ_ಠ.clutz.goog.math.Vec2 , axisPoint : ಠ_ಠ.clutz.goog.math.Vec2 , angle : number ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
    /**
     * Returns the squared distance between two vectors.
     * @param a The first vector.
     * @param b The second vector.
     */
    static squaredDistance (a : ಠ_ಠ.clutz.goog.math.Coordinate , b : ಠ_ಠ.clutz.goog.math.Coordinate ) : number ;
    /**
     * Returns the sum of two vectors as a new Vec2.
     * @param a The first vector.
     * @param b The second vector.
     */
    static sum (a : ಠ_ಠ.clutz.goog.math.Coordinate , b : ಠ_ಠ.clutz.goog.math.Coordinate ) : ಠ_ಠ.clutz.goog.math.Vec2 ;
  }
}
declare module 'goog:goog.math.Vec2' {
  import Vec2 = ಠ_ಠ.clutz.goog.math.Vec2;
  export default Vec2;
}
