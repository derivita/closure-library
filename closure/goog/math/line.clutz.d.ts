//!! generated by clutz.
// Generated from math/line.js
declare namespace ಠ_ಠ.clutz.goog.math {
  /**
   * Object representing a line.
   */
  class Line {
    private noStructuralTyping_goog_math_Line : any;
    /**
     * Object representing a line.
     * @param x0 X coordinate of the start point.
     * @param y0 Y coordinate of the start point.
     * @param x1 X coordinate of the end point.
     * @param y1 Y coordinate of the end point.
     */
    constructor (x0 : number , y0 : number , x1 : number , y1 : number ) ;
    /**
     * X coordinate of the first point.
     */
    x0 : number ;
    /**
     * X coordinate of the first control point.
     */
    x1 : number ;
    /**
     * Y coordinate of the first point.
     */
    y0 : number ;
    /**
     * Y coordinate of the first control point.
     */
    y1 : number ;
    clone ( ) : ಠ_ಠ.clutz.goog.math.Line ;
    /**
     * Tests whether the given line is exactly the same as this one.
     * @param other The other line.
     */
    equals (other : ಠ_ಠ.clutz.goog.math.Line | null ) : boolean ;
    /**
     * Computes the point on the line closest to a given point.  Note that a line
     * in this case is defined as the infinite line going through the start and end
     * points.  To find the closest point on the line segment itself see
     * {@see #getClosestSegmentPoint}.
     * @param x The x coordinate of the point, or a coordinate object.
     * @param opt_y The y coordinate of the point - required if x is a number, ignored if x is a goog.math.Coordinate.
     */
    getClosestPoint (x : number | ಠ_ಠ.clutz.goog.math.Coordinate | null , opt_y ? : number ) : ಠ_ಠ.clutz.goog.math.Coordinate ;
    /**
     * Computes the point on the line segment closest to a given point.
     * @param x The x coordinate of the point, or a coordinate object.
     * @param opt_y The y coordinate of the point - required if x is a number, ignored if x is a goog.math.Coordinate.
     */
    getClosestSegmentPoint (x : number | ಠ_ಠ.clutz.goog.math.Coordinate | null , opt_y ? : number ) : ಠ_ಠ.clutz.goog.math.Coordinate ;
    /**
     * Returns the point on the line segment proportional to t, where for t = 0 we
     * return the starting point and for t = 1 we return the end point.  For t < 0
     * or t > 1 we extrapolate along the line defined by the line segment.
     * @param t The interpolation parameter along the line segment.
     */
    getInterpolatedPoint (t : number ) : ಠ_ಠ.clutz.goog.math.Coordinate ;
    getSegmentLength ( ) : number ;
    getSegmentLengthSquared ( ) : number ;
  }
}
declare module 'goog:goog.math.Line' {
  import Line = ಠ_ಠ.clutz.goog.math.Line;
  export default Line;
}
