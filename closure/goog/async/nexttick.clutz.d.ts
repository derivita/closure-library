//!! generated by clutz.
// Generated from async/nexttick.js
declare namespace ಠ_ಠ.clutz.goog.async {
  /**
   * Fires the provided callbacks as soon as possible after the current JS
   * execution context. setTimeout(…, 0) takes at least 4ms when called from
   * within another setTimeout(…, 0) for legacy reasons.
   *
   * This will not schedule the callback as a microtask (i.e. a task that can
   * preempt user input or networking callbacks). It is meant to emulate what
   * setTimeout(_, 0) would do if it were not throttled. If you desire microtask
   * behavior, use {@see goog.Promise} instead.
   * @param callback Callback function to fire as soon as possible.
   * @param opt_context Object in whose scope to call the listener.
   * @param opt_useSetImmediate Avoid the IE workaround that ensures correctness at the cost of speed. See comments for details.
   */
  function nextTick < SCOPE = any > (callback : (this : SCOPE ) => any , opt_context ? : SCOPE , opt_useSetImmediate ? : boolean ) : void ;
}
declare module 'goog:goog.async.nextTick' {
  import nextTick = ಠ_ಠ.clutz.goog.async.nextTick;
  export default nextTick;
}
