//!! generated by clutz.
// Generated from async/animationdelay.js
declare namespace ಠ_ಠ.clutz.goog.async {
  /**
   * A delayed callback that pegs to the next animation frame
   * instead of a user configurable timeout. By design, this should have
   * the same interface as goog.async.Delay.
   *
   * Uses requestAnimationFrame and friends when available, but falls
   * back to a timeout of goog.async.AnimationDelay.TIMEOUT.
   *
   * For more on requestAnimationFrame and how you can use it to create smoother
   * animations, see:
   */
  class AnimationDelay < THIS = any > extends ಠ_ಠ.clutz.goog.Disposable {
    private noStructuralTyping_goog_async_AnimationDelay : any;
    /**
     * A delayed callback that pegs to the next animation frame
     * instead of a user configurable timeout. By design, this should have
     * the same interface as goog.async.Delay.
     *
     * Uses requestAnimationFrame and friends when available, but falls
     * back to a timeout of goog.async.AnimationDelay.TIMEOUT.
     *
     * For more on requestAnimationFrame and how you can use it to create smoother
     * animations, see:
     * @param listener Function to call when the delay completes. Will be passed the timestamp when it's called, in unix ms.
     * @param opt_window The window object to execute the delay in. Defaults to the global object.
     * @param opt_handler The object scope to invoke the function in.
     */
    constructor (listener : PrivateType , opt_window ? : Window | null , opt_handler ? : THIS ) ;
    disposeInternal ( ) : void ;
    fire ( ) : void ;
    fireIfActive ( ) : void ;
    isActive ( ) : boolean ;
    start ( ) : void ;
    startIfNotActive ( ) : void ;
    stop ( ) : void ;
    /**
     * Default wait timeout for animations (in milliseconds).  Only used for timed
     * animation, which uses a timer (setTimeout) to schedule animation.
     */
    static TIMEOUT : number ;
  }
}
declare module 'goog:goog.async.AnimationDelay' {
  import AnimationDelay = ಠ_ಠ.clutz.goog.async.AnimationDelay;
  export default AnimationDelay;
}
