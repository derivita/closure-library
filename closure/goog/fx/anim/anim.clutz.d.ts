//!! generated by clutz.
// Generated from fx/anim/anim.js
declare namespace ಠ_ಠ.clutz.goog.fx.anim {
  /**
   * Default wait timeout for animations (in milliseconds).  Only used for timed
   * animation, which uses a timer (setTimeout) to schedule animation.
   */
  let TIMEOUT : number ;
  /**
   * Registers an animation to be cycled on the global timer.
   * @param animation The animation to register.
   */
  function registerAnimation (animation : ಠ_ಠ.clutz.goog.fx.anim.Animated | null ) : void ;
  /**
   * Registers an animation window. This allows usage of the timing control API
   * for animations. Note that this window must be visible, as non-visible
   * windows can potentially stop animating. This window does not necessarily
   * need to be the window inside which animation occurs, but must remain visible.
   * See: https://developer.mozilla.org/en/DOM/window.mozRequestAnimationFrame.
   * @param animationWindow The window in which to animate elements.
   */
  function setAnimationWindow (animationWindow : Window | null ) : void ;
  /**
   * Tears down this module. Useful for testing.
   */
  function tearDown ( ) : void ;
  /**
   * Removes an animation from the list of animations which are cycled on the
   * global timer.
   * @param animation The animation to unregister.
   */
  function unregisterAnimation (animation : ಠ_ಠ.clutz.goog.fx.anim.Animated | null ) : void ;
}
declare module 'goog:goog.fx.anim' {
  import anim = ಠ_ಠ.clutz.goog.fx.anim;
  export = anim;
}
// Generated from fx/anim/anim.js
declare namespace ಠ_ಠ.clutz.goog.fx.anim {
  /**
   * An interface for programatically animated objects. I.e. rendered in
   * javascript frame by frame.
   */
  interface Animated {
    /**
     * Function called when a frame is requested for the animation.
     * @param now Current time in milliseconds.
     */
    onAnimationFrame (a : number ) : any ;
  }
}
declare module 'goog:goog.fx.anim.Animated' {
  import Animated = ಠ_ಠ.clutz.goog.fx.anim.Animated;
  export default Animated;
}
