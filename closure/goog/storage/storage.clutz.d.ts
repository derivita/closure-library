//!! generated by clutz.
// Generated from storage/storage.js
declare namespace ಠ_ಠ.clutz.goog.storage {
  /**
   * The base implementation for all storage APIs.
   */
  class Storage {
    private noStructuralTyping_goog_storage_Storage : any;
    /**
     * The base implementation for all storage APIs.
     * @param mechanism The underlying storage mechanism.
     */
    constructor (mechanism : ಠ_ಠ.clutz.goog.storage.mechanism.Mechanism ) ;
    /**
     * The mechanism used to persist key-value pairs.
     */
    protected mechanism : ಠ_ಠ.clutz.goog.storage.mechanism.Mechanism | null ;
    /**
     * Gets an item from the data storage.
     * @param key The key to get.
     */
    get (key : string ) : any ;
    /**
     * Removes an item from the data storage.
     * @param key The key to remove.
     */
    remove (key : string ) : void ;
    /**
     * Sets an item in the data storage.
     * @param key The key to set.
     * @param value The value to serialize to a string and save.
     */
    set (key : string , value : any ) : void ;
  }
}
declare module 'goog:goog.storage.Storage' {
  import Storage = ಠ_ಠ.clutz.goog.storage.Storage;
  export default Storage;
}
