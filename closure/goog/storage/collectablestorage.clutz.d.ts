//!! generated by clutz.
// Generated from storage/collectablestorage.js
declare namespace ಠ_ಠ.clutz.goog.storage {
  /**
   * Provides a storage with expiring keys and a collection method.
   */
  class CollectableStorage extends ಠ_ಠ.clutz.goog.storage.ExpiringStorage {
    private noStructuralTyping_goog_storage_CollectableStorage : any;
    /**
     * Provides a storage with expiring keys and a collection method.
     * @param mechanism The underlying storage mechanism.
     */
    constructor (mechanism : ಠ_ಠ.clutz.goog.storage.mechanism.IterableMechanism ) ;
    /**
     * Cleans up the storage by removing expired keys.
     * @param opt_strict Also remove invalid keys.
     */
    collect (opt_strict ? : boolean ) : void ;
    /**
     * Cleans up the storage by removing expired keys.
     * @param keys List of all keys.
     * @param opt_strict Also remove invalid keys.
     */
    protected collectInternal (keys : ಠ_ಠ.clutz.goog.iter.Iterable | null , opt_strict ? : boolean ) : string [] ;
  }
}
declare module 'goog:goog.storage.CollectableStorage' {
  import CollectableStorage = ಠ_ಠ.clutz.goog.storage.CollectableStorage;
  export default CollectableStorage;
}
