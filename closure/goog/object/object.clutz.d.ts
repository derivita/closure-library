//!! generated by clutz.
// Generated from object/object.js
declare namespace ಠ_ಠ.clutz.goog.object {
  function add < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , key : string , val : V ) : void ;
  function clear (obj : GlobalObject | null ) : void ;
  function clone < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null ) : { [ /* warning: coerced from K */ key: string ]: V } ;
  function contains < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , val : V ) : boolean ;
  function containsKey (obj : GlobalObject | null , key : any ) : boolean ;
  function containsValue < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , val : V ) : boolean ;
  function create ( ...var_args : any [] ) : GlobalObject ;
  function createImmutableView < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } ) : { [ /* warning: coerced from K */ key: string ]: V } ;
  function createSet ( ...var_args : any [] ) : GlobalObject ;
  function equals < K = any , V = any > (a : { [ /* warning: coerced from K */ key: string ]: V } , b : { [ /* warning: coerced from K */ key: string ]: V } ) : boolean ;
  function every < T = any , K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , f : ( (this : T , a : V , b : any , c : { [ /* warning: coerced from K */ key: string ]: V } | null ) => boolean ) | null , opt_obj ? : T ) : boolean ;
  function extend (target : GlobalObject | null ,  ...var_args : ( GlobalObject | null | undefined ) [] ) : void ;
  function filter < T = any , K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , f : (this : T , a : V , b : any , c : { [ /* warning: coerced from K */ key: string ]: V } | null ) => boolean , opt_obj ? : T ) : { [ /* warning: coerced from K */ key: string ]: V } ;
  function findKey < T = any , K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , f : (this : T , a : V , b : string , c : { [ /* warning: coerced from K */ key: string ]: V } | null ) => boolean , thisObj ? : T ) : string | undefined ;
  function findValue < T = any , K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , f : (this : T , a : V , b : string , c : { [ /* warning: coerced from K */ key: string ]: V } | null ) => boolean , thisObj ? : T ) : V ;
  function forEach < T = any , K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , f : (this : T , a : V , b : any , c : { [ /* warning: coerced from K */ key: string ]: V } | null ) => any , opt_obj ? : T ) : void ;
  function get < K = any , V = any , R = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , key : string , val ? : R ) : V | R | undefined ;
  function getAllPropertyNames (obj : GlobalObject | null , includeObjectPrototype ? : boolean , includeFunctionPrototype ? : boolean ) : string [] ;
  function getAnyKey (obj : GlobalObject | null ) : string | undefined ;
  function getAnyValue < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null ) : V | undefined ;
  function getCount (obj : GlobalObject | null ) : number ;
  function getKeys (obj : GlobalObject | null ) : string [] ;
  function getSuperClass (constructor : { new ( ) : any } ) : GlobalObject | null ;
  function getValueByKeys (obj : GlobalObject | null ,  ...var_args : ( string | number | ArrayLike < number | string > ) [] ) : any ;
  function getValues < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null ) : V [] ;
  function isEmpty (obj : GlobalObject | null ) : boolean ;
  function isImmutableView (obj : GlobalObject ) : boolean ;
  function map < T = any , K = any , V = any , R = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , f : (this : T , a : V , b : any , c : { [ /* warning: coerced from K */ key: string ]: V } | null ) => R , opt_obj ? : T ) : { [ /* warning: coerced from K */ key: string ]: R } ;
  function remove (obj : GlobalObject | null , key : any ) : boolean ;
  function set < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , key : string , value : V ) : void ;
  function setIfUndefined < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , key : string , value : V ) : V ;
  function setWithReturnValueIfNotSet < K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , key : string , f : ( ) => V ) : V ;
  function some < T = any , K = any , V = any > (obj : { [ /* warning: coerced from K */ key: string ]: V } | null , f : (this : T , a : V , b : any , c : { [ /* warning: coerced from K */ key: string ]: V } | null ) => boolean , opt_obj ? : T ) : boolean ;
  function transpose (obj : GlobalObject | null ) : GlobalObject ;
  function unsafeClone < T = any > (obj : T ) : T ;
}
declare module 'goog:goog.object' {
  import object = ಠ_ಠ.clutz.goog.object;
  export = object;
}
