//!! generated by clutz.
// Generated from module/abstractmoduleloader.js
declare namespace ಠ_ಠ.clutz.goog.module {
  export import AbstractModuleLoader = ಠ_ಠ.clutz.module$contents$goog$module$AbstractModuleLoader_AbstractModuleLoader ;
}
declare module 'goog:goog.module.AbstractModuleLoader' {
  import AbstractModuleLoader = ಠ_ಠ.clutz.goog.module.AbstractModuleLoader;
  export default AbstractModuleLoader;
}
// Generated from module/abstractmoduleloader.js
declare namespace ಠ_ಠ.clutz {
  /**
   * An interface that loads JavaScript modules.
   */
  interface module$contents$goog$module$AbstractModuleLoader_AbstractModuleLoader {
    /**
     * Whether or not the implementation supports extra edges.
     */
    supportsExtraEdges ? : boolean ;
    /**
     * Loads a list of JavaScript modules.
     * @param ids The module ids in dependency order.
     * @param moduleInfoMap A mapping from module id to ModuleInfo object.
     */
    loadModules (ids : string [] , moduleInfoMap : { [ key: string ]: ಠ_ಠ.clutz.module$exports$goog$module$ModuleInfo } , loadOptions ? : ಠ_ಠ.clutz.module$contents$goog$module$AbstractModuleLoader_AbstractModuleLoader.LoadOptions ) : void ;
    /**
     * Pre-fetches a JavaScript module.
     * @param id The module id.
     * @param moduleInfo The module info.
     */
    prefetchModule (id : string , moduleInfo : ಠ_ಠ.clutz.module$exports$goog$module$ModuleInfo ) : void ;
  }
}
// Generated from module/abstractmoduleloader.js
declare namespace ಠ_ಠ.clutz.module$contents$goog$module$AbstractModuleLoader_AbstractModuleLoader {
  type ExtraEdgesMap = { [ /* warning: coerced from ? */ key: string ]: { [ /* warning: coerced from ? */ key: string ]: boolean } } ;
  interface LoadOptions {
    /**
     * A map of extra runtime module dependencies.
     */
    extraEdges ? : ಠ_ಠ.clutz.module$contents$goog$module$AbstractModuleLoader_AbstractModuleLoader.ExtraEdgesMap ;
    /**
     * Whether to bypass cache while loading the module.
     */
    forceReload ? : boolean ;
    /**
     * The callback if module loading is an error.
     */
    onError ? : (a : number | null ) => void ;
    /**
     * The callback if module loading is a success.
     */
    onSuccess ? : ( ) => void ;
    /**
     * The callback if module loading times out.
     */
    onTimeout ? : ( ) => void ;
  }
}
declare namespace ಠ_ಠ.clutz {
  export import module$exports$goog$module$AbstractModuleLoader = ಠ_ಠ.clutz.module$contents$goog$module$AbstractModuleLoader_AbstractModuleLoader ;
}
