//!! generated by clutz.
// Generated from debug/console.js
declare namespace ಠ_ಠ.clutz.goog.debug {
  /**
   * Create and install a log handler that logs to window.console if available
   */
  class Console {
    private noStructuralTyping_goog_debug_Console : any;
    isCapturing_ : boolean ;
    logBuffer_ : string ;
    publishHandler_ (a : ಠ_ಠ.clutz.goog.log.LogRecord | null ) : void ;
    /**
     * Adds a logger name to be filtered.
     * @param loggerName the logger name to add.
     */
    addFilter (loggerName : string ) : void ;
    /**
     * Adds a log record.
     * @param logRecord The log entry.
     */
    addLogRecord (logRecord : ಠ_ಠ.clutz.goog.log.LogRecord | null ) : void ;
    /**
     * Returns the text formatter used by this console
     */
    getFormatter ( ) : ಠ_ಠ.clutz.goog.debug.TextFormatter ;
    /**
     * Removes a logger name to be filtered.
     * @param loggerName the logger name to remove.
     */
    removeFilter (loggerName : string ) : void ;
    /**
     * Sets whether we are currently capturing logger output.
     * @param capturing Whether to capture logger output.
     */
    setCapturing (capturing : boolean ) : void ;
    static autoInstall ( ) : void ;
    /**
     * Global console logger instance
     */
    static instance : ಠ_ಠ.clutz.goog.debug.Console | null ;
    /**
     * Sets the console to which to log.
     * @param console The console to which to log.
     */
    static setConsole (console : GlobalObject ) : void ;
    static show ( ) : void ;
  }
}
declare module 'goog:goog.debug.Console' {
  import Console = ಠ_ಠ.clutz.goog.debug.Console;
  export default Console;
}
