//!! generated by clutz.
// Generated from events/imehandler.js
declare namespace ಠ_ಠ.clutz.goog.events {
  /**
   * Dispatches high-level events for IMEs.
   */
  class ImeHandler extends ಠ_ಠ.clutz.goog.events.EventTarget {
    private noStructuralTyping_goog_events_ImeHandler : any;
    /**
     * Dispatches high-level events for IMEs.
     * @param el The element to listen on.
     */
    constructor (el : GlobalElement | null ) ;
    disposeInternal ( ) : void ;
    isImeMode ( ) : boolean ;
    /**
     * Whether to use the composition events.
     */
    static USES_COMPOSITION_EVENTS : boolean ;
  }
}
declare module 'goog:goog.events.ImeHandler' {
  import ImeHandler = ಠ_ಠ.clutz.goog.events.ImeHandler;
  export default ImeHandler;
}
// Generated from events/imehandler.js
declare namespace ಠ_ಠ.clutz.goog.events.ImeHandler {
  /**
   * An event fired by ImeHandler.
   */
  class Event extends ಠ_ಠ.clutz.goog.events.Event {
    private noStructuralTyping_goog_events_ImeHandler_Event : any;
    /**
     * An event fired by ImeHandler.
     * @param type The type.
     * @param reason The trigger for this event.
     */
    constructor (type : ಠ_ಠ.clutz.goog.events.ImeHandler.EventType , reason : ಠ_ಠ.clutz.goog.events.BrowserEvent | null ) ;
    /**
     * The event that triggered this.
     */
    reason : ಠ_ಠ.clutz.goog.events.BrowserEvent | null ;
  }
}
declare module 'goog:goog.events.ImeHandler.Event' {
  import Event = ಠ_ಠ.clutz.goog.events.ImeHandler.Event;
  export default Event;
}
// Generated from events/imehandler.js
declare namespace ಠ_ಠ.clutz.goog.events.ImeHandler {
  /**
   * Event types fired by ImeHandler. These events do not make any guarantees
   * about whether they were fired before or after the event in question.
   */
  /**
   * Event types fired by ImeHandler. These events do not make any guarantees
   * about whether they were fired before or after the event in question.
   */
  enum EventType {
    END = 'endIme' ,
    START = 'startIme' ,
    UPDATE = 'updateIme' ,
  }
}
declare module 'goog:goog.events.ImeHandler.EventType' {
  import EventType = ಠ_ಠ.clutz.goog.events.ImeHandler.EventType;
  export default EventType;
}
