//!! generated by clutz.
// Generated from events/inputhandler.js
declare namespace ಠ_ಠ.clutz.goog.events {
  /**
   * This event handler will dispatch events when the user types into a text
   * input, password input or a textarea
   */
  class InputHandler extends ಠ_ಠ.clutz.goog.events.EventTarget {
    private noStructuralTyping_goog_events_InputHandler : any;
    /**
     * This event handler will dispatch events when the user types into a text
     * input, password input or a textarea
     * @param element The element that you want to listen for input events on.
     */
    constructor (element : GlobalElement | null ) ;
    disposeInternal ( ) : void ;
    /**
     * This handles the underlying events and dispatches a new event as needed.
     * @param e The underlying browser event.
     */
    handleEvent (e : ಠ_ಠ.clutz.goog.events.BrowserEvent | null ) : void ;
  }
}
declare module 'goog:goog.events.InputHandler' {
  import InputHandler = ಠ_ಠ.clutz.goog.events.InputHandler;
  export default InputHandler;
}
// Generated from events/inputhandler.js
declare namespace ಠ_ಠ.clutz.goog.events.InputHandler {
  /**
   * Enum type for the events fired by the input handler
   */
  /**
   * Enum type for the events fired by the input handler
   */
  enum EventType {
    INPUT = 'input' ,
  }
}
declare module 'goog:goog.events.InputHandler.EventType' {
  import EventType = ಠ_ಠ.clutz.goog.events.InputHandler.EventType;
  export default EventType;
}
