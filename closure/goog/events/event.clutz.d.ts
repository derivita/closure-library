//!! generated by clutz.
// Generated from events/event.js
declare namespace ಠ_ಠ.clutz.goog.events {
  /**
   * A base class for event objects, so that they can support preventDefault and
   * stopPropagation.
   */
  class Event {
    private noStructuralTyping_goog_events_Event : any;
    /**
     * A base class for event objects, so that they can support preventDefault and
     * stopPropagation.
     * @param type Event Type.
     * @param opt_target Reference to the object that is the target of this event. It has to implement the `EventTarget` interface declared at {@link http://developer.mozilla.org/en/DOM/EventTarget}.
     */
    constructor (type : string | ಠ_ಠ.clutz.goog.events.EventId , opt_target ? : GlobalObject | null ) ;
    /**
     * Object that had the listener attached.
     */
    currentTarget ? : GlobalObject | null ;
    /**
     * Whether the default action has been prevented.
     * This is a property to match the W3C specification at
     * {@link http://www.w3.org/TR/DOM-Level-3-Events/
     * #events-event-type-defaultPrevented}.
     * Must be treated as read-only outside the class.
     */
    defaultPrevented : boolean ;
    /**
     * TODO(tbreisacher): The type should probably be
     * EventTarget|goog.events.EventTarget.
     *
     * Target of the event.
     */
    target ? : GlobalObject | null ;
    /**
     * Event type.
     */
    type : string ;
    hasPropagationStopped ( ) : boolean ;
    /**
     * Prevents the default action, for example a link redirecting to a url.
     */
    preventDefault ( ) : void ;
    /**
     * Stops event propagation.
     */
    stopPropagation ( ) : void ;
    /**
     * Prevents the default action. It is equivalent to
     * `e.preventDefault()`, but can be used as the callback argument of
     * {@link goog.events.listen} without declaring another function.
     * @param e An event.
     */
    static preventDefault (e : ಠ_ಠ.clutz.goog.events.Event ) : void ;
    /**
     * Stops the propagation of the event. It is equivalent to
     * `e.stopPropagation()`, but can be used as the callback argument of
     * {@link goog.events.listen} without declaring another function.
     * @param e An event.
     */
    static stopPropagation (e : ಠ_ಠ.clutz.goog.events.Event ) : void ;
  }
}
declare module 'goog:goog.events.Event' {
  import Event = ಠ_ಠ.clutz.goog.events.Event;
  export default Event;
}
