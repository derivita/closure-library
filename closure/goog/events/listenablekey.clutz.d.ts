//!! generated by clutz.
// Generated from events/listenablekey.js
declare namespace ಠ_ಠ.clutz.goog.events {
  /**
   * An interface that describes a single registered listener.
   */
  namespace ListenableKey {
    function /**
     * Reserves a key to be used for ListenableKey#key field.
     */
    reserveKey ( ) : number ;
  }
  interface ListenableKey {
    /**
     * Whether the listener works on capture phase.
     */
    capture : boolean ;
    /**
     * The 'this' object for the listener function's scope.
     */
    handler ? : GlobalObject | null ;
    /**
     * A globally unique number to identify the key.
     */
    key : number ;
    /**
     * The listener function.
     */
    listener : ( (a ? : any ) => any ) | { handleEvent : (a ? : any ) => any } | null ;
    /**
     * The source event target.
     */
    src : GlobalObject | null | ಠ_ಠ.clutz.goog.events.Listenable ;
    /**
     * The event type the listener is listening to.
     */
    type : string ;
  }
}
declare module 'goog:goog.events.ListenableKey' {
  import ListenableKey = ಠ_ಠ.clutz.goog.events.ListenableKey;
  export default ListenableKey;
}
