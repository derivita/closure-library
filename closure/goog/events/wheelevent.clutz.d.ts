//!! generated by clutz.
// Generated from events/wheelevent.js
declare namespace ಠ_ಠ.clutz.goog.events {
  /**
   * A common class for wheel events. This is used with the WheelHandler.
   */
  class WheelEvent extends ಠ_ಠ.clutz.goog.events.BrowserEvent {
    private noStructuralTyping_goog_events_WheelEvent : any;
    /**
     * A common class for wheel events. This is used with the WheelHandler.
     * @param browserEvent Browser event object.
     * @param deltaMode The delta mode units of the wheel event.
     * @param deltaX The number of delta units the user in the X axis.
     * @param deltaY The number of delta units the user in the Y axis.
     * @param deltaZ The number of delta units the user in the Z axis.
     */
    constructor (browserEvent : GlobalEvent | null , deltaMode : ಠ_ಠ.clutz.goog.events.WheelEvent.DeltaMode , deltaX : number , deltaY : number , deltaZ : number ) ;
    /**
     * An enum corresponding to the units of this event.
     */
    deltaMode : ಠ_ಠ.clutz.goog.events.WheelEvent.DeltaMode ;
    /**
     * The number of delta units in the X axis.
     */
    deltaX : number ;
    /**
     * The number of delta units in the Y axis.
     */
    deltaY : number ;
    /**
     * The number of delta units in the Z axis.
     */
    deltaZ : number ;
    /**
     * The number of delta pixels in the X axis. Code that doesn't want to handle
     * different deltaMode units can just look here.
     */
    pixelDeltaX : number ;
    /**
     * The number of pixels in the Y axis. Code that doesn't want to
     * handle different deltaMode units can just look here.
     */
    pixelDeltaY : number ;
    /**
     * The number of pixels scrolled in the Z axis. Code that doesn't want to
     * handle different deltaMode units can just look here.
     */
    pixelDeltaZ : number ;
    type : ಠ_ಠ.clutz.goog.events.WheelEvent.EventType ;
  }
}
// Generated from events/wheelevent.js
declare namespace ಠ_ಠ.clutz.goog.events.WheelEvent {
  /**
   * Units for the deltas in a WheelEvent.
   */
  enum DeltaMode {
    LINE = 1.0 ,
    PAGE = 2.0 ,
    PIXEL = 0.0 ,
  }
  /**
   * Enum type for the events fired by the wheel handler.
   */
  enum EventType {
    WHEEL = 'wheel' ,
  }
}
declare module 'goog:goog.events.WheelEvent' {
  import WheelEvent = ಠ_ಠ.clutz.goog.events.WheelEvent;
  export default WheelEvent;
}
