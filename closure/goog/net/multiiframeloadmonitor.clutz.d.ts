//!! generated by clutz.
// Generated from net/multiiframeloadmonitor.js
declare namespace ಠ_ಠ.clutz.goog.net {
  /**
   * Provides a wrapper around IframeLoadMonitor, to allow the caller to wait for
   * multiple iframes to load.
   */
  class MultiIframeLoadMonitor {
    private noStructuralTyping_goog_net_MultiIframeLoadMonitor : any;
    /**
     * Provides a wrapper around IframeLoadMonitor, to allow the caller to wait for
     * multiple iframes to load.
     * @param iframes Array of iframe elements to wait until they are loaded.
     * @param callback The callback to invoke once the frames have loaded.
     * @param opt_hasContent true if the monitor should wait until the iframes have content (body.firstChild != null).
     */
    constructor (iframes : ( HTMLIFrameElement | null ) [] | null , callback : ( ) => void , opt_hasContent ? : boolean ) ;
    /**
     * Handles a pending iframe load monitor load event.
     * @param e The goog.net.IframeLoadMonitor.LOAD_EVENT event.
     */
    handleEvent (e : ಠ_ಠ.clutz.goog.events.Event | null ) : void ;
    stopMonitoring ( ) : void ;
  }
}
declare module 'goog:goog.net.MultiIframeLoadMonitor' {
  import MultiIframeLoadMonitor = ಠ_ಠ.clutz.goog.net.MultiIframeLoadMonitor;
  export default MultiIframeLoadMonitor;
}
