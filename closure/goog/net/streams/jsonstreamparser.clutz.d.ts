//!! generated by clutz.
// Generated from net/streams/jsonstreamparser.js
declare namespace ಠ_ಠ.clutz.goog.net.streams {
  /**
   * The default JSON stream parser.
   */
  class JsonStreamParser implements ಠ_ಠ.clutz.goog.net.streams.StreamParser {
    private noStructuralTyping_goog_net_streams_JsonStreamParser : any;
    /**
     * The default JSON stream parser.
     * @param opt_options Configuration for the new JsonStreamParser instance.
     */
    constructor (opt_options ? : ಠ_ಠ.clutz.goog.net.streams.JsonStreamParser.Options ) ;
    acceptsBinaryInput ( ) : boolean ;
    done ( ) : boolean ;
    getErrorMessage ( ) : any ;
    /**
     * Get the part of input that is after the end of the stream. Call this only
     * when `this.done()` is true.
     */
    getExtraInput ( ) : string ;
    isInputValid ( ) : any ;
    parse (input ? : any ) : any ;
  }
}
// Generated from net/streams/jsonstreamparser.js
declare namespace ಠ_ಠ.clutz.goog.net.streams.JsonStreamParser {
  type Options = { allowCompactJsonArrayFormat ? : boolean , deliverMessageAsRawString ? : boolean } ;
}
declare module 'goog:goog.net.streams.JsonStreamParser' {
  import JsonStreamParser = ಠ_ಠ.clutz.goog.net.streams.JsonStreamParser;
  export default JsonStreamParser;
}
