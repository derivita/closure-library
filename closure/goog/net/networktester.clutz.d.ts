//!! generated by clutz.
// Generated from net/networktester.js
declare namespace ಠ_ಠ.clutz.goog.net {
  /**
   * Creates an instance of goog.net.NetworkTester which can be used to test
   * for internet connectivity by seeing if an image can be loaded from
   * google.com. It can also be tested with other URLs.
   */
  class NetworkTester {
    private noStructuralTyping_goog_net_NetworkTester : any;
    /**
     * Creates an instance of goog.net.NetworkTester which can be used to test
     * for internet connectivity by seeing if an image can be loaded from
     * google.com. It can also be tested with other URLs.
     * @param callback Callback that is called when the test completes. The callback takes a single boolean parameter. True indicates the URL was reachable, false indicates it wasn't.
     * @param opt_handler Handler object for the callback.
     * @param opt_uri URI to use for testing.
     */
    constructor (callback : Function | null , opt_handler ? : GlobalObject | null , opt_uri ? : ಠ_ಠ.clutz.goog.Uri | null ) ;
    /**
     * Returns the current attempt count.
     */
    getAttemptCount ( ) : number ;
    /**
     * Returns the numer of retries to attempt.
     */
    getNumRetries ( ) : number ;
    /**
     * Returns the pause between retries in milliseconds.
     */
    getPauseBetweenRetries ( ) : number ;
    /**
     * Returns the timeout in milliseconds.
     */
    getTimeout ( ) : number ;
    /**
     * Returns the uri to use for the test.
     */
    getUri ( ) : ಠ_ಠ.clutz.goog.Uri | null ;
    /**
     * Returns whether the tester is currently running.
     */
    isRunning ( ) : boolean ;
    /**
     * Handles a successful or failed result.
     * @param succeeded Whether the image load succeeded.
     */
    onResult (succeeded : boolean ) : void ;
    /**
     * Sets the timeout in milliseconds.
     * @param retries Number of retries to attempt.
     */
    setNumRetries (retries : number ) : void ;
    /**
     * Sets the pause between retries in milliseconds.
     * @param pauseMs Pause between retries in milliseconds.
     */
    setPauseBetweenRetries (pauseMs : number ) : void ;
    /**
     * Sets the timeout in milliseconds.
     * @param timeoutMs Timeout in milliseconds.
     */
    setTimeout (timeoutMs : number ) : void ;
    /**
     * Sets the uri to use for the test.
     * @param uri The uri for the test.
     */
    setUri (uri : ಠ_ಠ.clutz.goog.Uri | null ) : void ;
    start ( ) : void ;
    stop ( ) : void ;
    /**
     * Default timeout
     */
    static DEFAULT_TIMEOUT_MS : number ;
  }
}
declare module 'goog:goog.net.NetworkTester' {
  import NetworkTester = ಠ_ಠ.clutz.goog.net.NetworkTester;
  export default NetworkTester;
}
