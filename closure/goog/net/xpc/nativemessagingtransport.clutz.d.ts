//!! generated by clutz.
// Generated from net/xpc/nativemessagingtransport.js
declare namespace ಠ_ಠ.clutz.goog.net.xpc {
  /**
   * The native messaging transport
   *
   * Uses document.postMessage() to send messages to other documents.
   * Receiving is done by listening on 'message'-events on the document.
   */
  class NativeMessagingTransport extends ಠ_ಠ.clutz.goog.net.xpc.Transport {
    private noStructuralTyping_goog_net_xpc_NativeMessagingTransport : any;
    /**
     * The native messaging transport
     *
     * Uses document.postMessage() to send messages to other documents.
     * Receiving is done by listening on 'message'-events on the document.
     * @param channel The channel this transport belongs to.
     * @param peerHostname The hostname (protocol, domain, and port) of the peer.
     * @param opt_domHelper The dom helper to use for finding the correct window/document.
     * @param opt_oneSidedHandshake If this is true, only the outer transport sends a SETUP message and expects a SETUP_ACK.  The inner transport goes connected when it receives the SETUP.
     * @param opt_protocolVersion Which version of its setup protocol the transport should use.  The default is '2'.
     */
    constructor (channel : ಠ_ಠ.clutz.goog.net.xpc.CrossPageChannel | null , peerHostname : string , opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null , opt_oneSidedHandshake ? : boolean , opt_protocolVersion ? : number ) ;
    /**
     * Connects this transport.
     */
    connect ( ) : void ;
    disposeInternal ( ) : void ;
    /**
     * Sends a message.
     * @param service The name off the service the message is to be delivered to.
     * @param payload The message content.
     */
    send (service : string , payload : string ) : void ;
    /**
     * Handles transport service messages.
     * @param payload The message content.
     */
    transportServiceHandler (payload : string ) : void ;
    /**
     * The transport type.
     */
    transportType : number ;
  }
}
declare module 'goog:goog.net.xpc.NativeMessagingTransport' {
  import NativeMessagingTransport = ಠ_ಠ.clutz.goog.net.xpc.NativeMessagingTransport;
  export default NativeMessagingTransport;
}
