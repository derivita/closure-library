//!! generated by clutz.
// Generated from messaging/bufferedchannel.js
declare namespace ಠ_ಠ.clutz.goog.messaging {
  /**
   * Creates a new BufferedChannel, which operates like its underlying channel
   * except that it buffers calls to send until it receives a message from its
   * peer claiming that the peer is ready to receive.  The peer is also expected
   * to be a BufferedChannel, though this is not enforced.
   */
  class BufferedChannel extends ಠ_ಠ.clutz.goog.Disposable implements ಠ_ಠ.clutz.goog.messaging.MessageChannel {
    private noStructuralTyping_goog_messaging_BufferedChannel : any;
    /**
     * Creates a new BufferedChannel, which operates like its underlying channel
     * except that it buffers calls to send until it receives a message from its
     * peer claiming that the peer is ready to receive.  The peer is also expected
     * to be a BufferedChannel, though this is not enforced.
     * @param messageChannel The MessageChannel we're wrapping.
     * @param opt_interval Polling interval for sending ready notifications to peer, in ms.  Default is 50.
     */
    constructor (messageChannel : ಠ_ಠ.clutz.goog.messaging.MessageChannel , opt_interval ? : number ) ;
    connect (opt_connectCb ? : any ) : void ;
    disposeInternal ( ) : void ;
    isConnected ( ) : any ;
    isPeerReady ( ) : boolean ;
    registerDefaultService (callback ? : any ) : void ;
    registerService (serviceName ? : any , callback ? : any , opt_objectPayload ? : any ) : void ;
    /**
     * Send a message over the channel.  If the peer is not ready, the message will
     * be buffered and sent once we've received a ready message from our peer.
     * @param serviceName The name of the service this message should be delivered to.
     * @param payload The value of the message. If this is an Object, it is serialized to JSON before sending.  It's the responsibility of implementors of this class to perform the serialization.
     */
    send (serviceName : string , payload : string | GlobalObject ) : void ;
  }
}
declare module 'goog:goog.messaging.BufferedChannel' {
  import BufferedChannel = ಠ_ಠ.clutz.goog.messaging.BufferedChannel;
  export default BufferedChannel;
}
