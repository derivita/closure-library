//!! generated by clutz.
// Generated from messaging/portnetwork.js
declare namespace ಠ_ಠ.clutz.goog.messaging {
  namespace PortNetwork {
    let /**
     * The name of the service exported by the callers for adding a connection to
     * another context.
     */
    GRANT_CONNECTION_SERVICE : string ;
    let /**
     * The name of the service exported by the operator for creating a connection
     * between two callers.
     */
    REQUEST_CONNECTION_SERVICE : string ;
  }
  interface PortNetwork {
    /**
     * Returns a message channel that communicates with the named context. If no
     * such port exists, an error will either be thrown immediately or after a round
     * trip with the operator, depending on whether this pool is the operator or a
     * caller.
     *
     * If context A calls dial('B') and context B calls dial('A'), the two
     * ports returned will be connected to one another.
     * @param name The name of the context to get.
     */
    dial (name : string ) : ಠ_ಠ.clutz.goog.messaging.MessageChannel | null ;
  }
}
declare module 'goog:goog.messaging.PortNetwork' {
  import PortNetwork = ಠ_ಠ.clutz.goog.messaging.PortNetwork;
  export default PortNetwork;
}
