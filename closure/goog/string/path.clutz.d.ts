//!! generated by clutz.
// Generated from string/path.js
declare namespace ಠ_ಠ.clutz.goog.string.path {
  /**
   * Returns the final component of a pathname.
   * See http://docs.python.org/library/os.path.html#os.path.basename
   * @param path A pathname.
   */
  function baseName (path : string ) : string ;
  /**
   * Alias to goog.string.path.baseName.
   * @param path A pathname.
   */
  function basename (a : string ) : string ;
  /**
   * Returns the directory component of a pathname.
   * See http://docs.python.org/library/os.path.html#os.path.dirname
   * @param path A pathname.
   */
  function dirname (path : string ) : string ;
  /**
   * Extracts the extension part of a pathname.
   * @param path The path name to process.
   */
  function extension (path : string ) : string ;
  /**
   * Joins one or more path components (e.g. 'foo/' and 'bar' make 'foo/bar').
   * An absolute component will discard all previous component.
   * See http://docs.python.org/library/os.path.html#os.path.join
   * @param var_args One of more path components.
   */
  function join ( ...var_args : ( string | undefined ) [] ) : string ;
  /**
   * Normalizes a pathname by collapsing duplicate separators, parent directory
   * references ('..'), and current directory references ('.').
   * See http://docs.python.org/library/os.path.html#os.path.normpath
   * @param path One or more path components.
   */
  function normalizePath (path : string ) : string ;
  /**
   * Splits a pathname into "dirname" and "baseName" components, where "baseName"
   * is everything after the final slash. Either part may return an empty string.
   * See http://docs.python.org/library/os.path.html#os.path.split
   * @param path A pathname.
   */
  function split (path : string ) : string [] ;
}
declare module 'goog:goog.string.path' {
  import path = ಠ_ಠ.clutz.goog.string.path;
  export = path;
}
