//!! generated by clutz.
// Generated from string/linkify.js
declare namespace ಠ_ಠ.clutz.goog.string.linkify {
  /**
   * Gets the first email address in text.
   * @param text Plain text.
   */
  function findFirstEmail (text : string ) : string ;
  /**
   * Gets the first URI in text.
   * @param text Plain text.
   */
  function findFirstUrl (text : string ) : string ;
  /**
   * Takes a string of plain text and linkifies URLs and email addresses. For a
   * URL (unless opt_attributes is specified), the target of the link will be
   * _blank and it will have a rel=nofollow attribute applied to it so that links
   * created by linkify will not be of interest to search engines.
   * @param text Plain text.
   * @param opt_attributes Attributes to add to all links created. Default are rel=nofollow and target=_blank. To clear those default attributes set rel='' and target=''.
   * @param opt_preserveNewlines Whether to preserve newlines with &lt;br&gt;.
   * @param opt_preserveSpacesAndTabs Whether to preserve spaces with non-breaking spaces and tabs with <span style="white-space:pre">
   */
  function linkifyPlainTextAsHtml (text : string , opt_attributes ? : { [ key: string ]: ಠ_ಠ.clutz.goog.html.SafeHtml.AttributeValue | null } , opt_preserveNewlines ? : boolean , opt_preserveSpacesAndTabs ? : boolean ) : ಠ_ಠ.clutz.goog.html.SafeHtml ;
}
declare module 'goog:goog.string.linkify' {
  import linkify = ಠ_ಠ.clutz.goog.string.linkify;
  export = linkify;
}
