//!! generated by clutz.
// Generated from string/linkify.js
declare namespace ಠ_ಠ.clutz.goog.string.linkify {
  /**
   * Options bag for linkifyPlainTextAsHtml's second parameter.
   */
  interface LinkifyOptions {
    /**
     * HTML attributes to add to all links created.  Default are `rel=nofollow`
     * and `target=_blank`. To clear these defaults attributes, set them
     * explicitly to '', i.e. `{rel: '', target: ''}`.
     */
    attributes ? : { [ key: string ]: ಠ_ಠ.clutz.goog.html.SafeHtml.AttributeValue | null } ;
    /**
     * Whether to preserve newlines with &lt;br&gt;.
     */
    preserveNewlines ? : boolean ;
    /**
     * Whether to preserve spaces with non-breaking spaces and tabs with
     * &lt;span style="white-space:pre"&gt;
     */
    preserveSpacesAndTabs ? : boolean ;
  }
  /**
   * Gets the first email address in text.
   * @param text Plain text.
   */
  function findFirstEmail (text : string ) : string ;
  /**
   * Gets the first URI in text.
   * @param text Plain text.
   */
  function findFirstUrl (text : string ) : string ;
  /**
   * Takes a string of plain text and linkifies URLs and email addresses. For a
   * URL (unless opt_attributes is specified), the target of the link will be
   * _blank and it will have a rel=nofollow attribute applied to it so that links
   * created by linkify will not be of interest to search engines.
   * @param text Plain text.
   * @param opt_options Options bag.
   */
  function linkifyPlainTextAsHtml (text : string , opt_options ? : ಠ_ಠ.clutz.goog.string.linkify.LinkifyOptions ) : ಠ_ಠ.clutz.goog.html.SafeHtml ;
}
declare module 'goog:goog.string.linkify' {
  import linkify = ಠ_ಠ.clutz.goog.string.linkify;
  export = linkify;
}
