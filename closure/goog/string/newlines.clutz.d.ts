//!! generated by clutz.
// Generated from string/newlines.js
declare namespace ಠ_ಠ.clutz.goog.string.newlines {
  /**
   * Splits a string into an array of line metadata.
   * @param str String to split.
   */
  function getLines (str : string ) : ಠ_ಠ.clutz.goog.string.newlines.Line [] ;
  /**
   * Splits a string into lines, properly handling universal newlines.
   * @param str String to split.
   * @param opt_keepNewlines Whether to keep the newlines in the resulting strings. Defaults to false.
   */
  function splitLines (str : string , opt_keepNewlines ? : boolean ) : string [] ;
}
declare module 'goog:goog.string.newlines' {
  import newlines = ಠ_ಠ.clutz.goog.string.newlines;
  export = newlines;
}
// Generated from string/newlines.js
declare namespace ಠ_ಠ.clutz.goog.string.newlines {
  /**
   * Line metadata class that records the start/end indicies of lines
   * in a string.  Can be used to implement common newline use cases such as
   * splitLines() or determining line/column of an index in a string.
   * Also implements methods to get line contents.
   *
   * Indexes are expressed as string indicies into string.substring(), inclusive
   * at the start, exclusive at the end.
   *
   * Create an array of these with goog.string.newlines.getLines().
   */
  class Line {
    private noStructuralTyping_goog_string_newlines_Line : any;
    /**
     * Line metadata class that records the start/end indicies of lines
     * in a string.  Can be used to implement common newline use cases such as
     * splitLines() or determining line/column of an index in a string.
     * Also implements methods to get line contents.
     *
     * Indexes are expressed as string indicies into string.substring(), inclusive
     * at the start, exclusive at the end.
     *
     * Create an array of these with goog.string.newlines.getLines().
     * @param string The original string.
     * @param startLineIndex The index of the start of the line.
     * @param endContentIndex The index of the end of the line, excluding newlines.
     * @param endLineIndex The index of the end of the line, index newlines.
     */
    constructor (string : string , startLineIndex : number , endContentIndex : number , endLineIndex : number ) ;
    /**
     * Index of the end of the line, excluding any newline characters.
     * Index is the first character after the line, suitable for
     * String.substring().
     */
    endContentIndex : number ;
    /**
     * Index of the end of the line, excluding any newline characters.
     * Index is the first character after the line, suitable for
     * String.substring().
     */
    endLineIndex : number ;
    /**
     * Index of the start of the line.
     */
    startLineIndex : number ;
    /**
     * The original string.
     */
    string : string ;
    getContent ( ) : string ;
    getFullLine ( ) : string ;
    getNewline ( ) : string ;
  }
}
declare module 'goog:goog.string.newlines.Line' {
  import Line = ಠ_ಠ.clutz.goog.string.newlines.Line;
  export default Line;
}
