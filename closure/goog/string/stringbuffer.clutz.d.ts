//!! generated by clutz.
// Generated from string/stringbuffer.js
declare namespace ಠ_ಠ.clutz.goog.string {
  /**
   * Utility class to facilitate string concatenation.
   */
  class StringBuffer {
    private noStructuralTyping_goog_string_StringBuffer : any;
    /**
     * Utility class to facilitate string concatenation.
     * @param opt_a1 Optional first initial item to append.
     * @param var_args Other initial items to append, e.g., new goog.string.StringBuffer('foo', 'bar').
     */
    constructor (opt_a1 ? : any ,  ...var_args : any [] ) ;
    /**
     * Appends one or more items to the buffer.
     *
     * Calling this with null, undefined, or empty arguments is an error.
     * @param a1 Required first string.
     * @param opt_a2 Optional second string.
     * @param var_args Other items to append, e.g., sb.append('foo', 'bar', 'baz').
     */
    append (a1 : any , opt_a2 ? : any ,  ...var_args : any [] ) : ಠ_ಠ.clutz.goog.string.StringBuffer ;
    clear ( ) : void ;
    getLength ( ) : number ;
    /**
     * Sets the contents of the string buffer object, replacing what's currently
     * there.
     * @param s String to set.
     */
    set (s : any ) : void ;
    toString ( ) : string ;
  }
}
declare module 'goog:goog.string.StringBuffer' {
  import StringBuffer = ಠ_ಠ.clutz.goog.string.StringBuffer;
  export default StringBuffer;
}
