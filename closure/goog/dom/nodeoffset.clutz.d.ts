//!! generated by clutz.
// Generated from dom/nodeoffset.js
declare namespace ಠ_ಠ.clutz.goog.dom {
  /**
   * Object to store the offset from one node to another in a way that works on
   * any similar DOM structure regardless of whether it is the same actual nodes.
   */
  class NodeOffset extends ಠ_ಠ.clutz.goog.Disposable {
    private noStructuralTyping_goog_dom_NodeOffset : any;
    /**
     * Object to store the offset from one node to another in a way that works on
     * any similar DOM structure regardless of whether it is the same actual nodes.
     * @param node The node to get the offset for.
     * @param baseNode The node to calculate the offset from.
     */
    constructor (node : Node | null , baseNode : Node | null ) ;
    disposeInternal ( ) : void ;
    /**
     * Walk the dom and find the node relative to baseNode.  Returns null on
     * failure.
     * @param baseNode The node to start walking from.  Should be equivalent to the node passed in to the constructor, in that it should have the same contents.
     */
    findTargetNode (baseNode : Node | null ) : Node | null ;
    toString ( ) : string ;
  }
}
declare module 'goog:goog.dom.NodeOffset' {
  import NodeOffset = ಠ_ಠ.clutz.goog.dom.NodeOffset;
  export default NodeOffset;
}
