//!! generated by clutz.
// Generated from dom/tagname.js
declare namespace ಠ_ಠ.clutz.goog.dom {
  /**
   * A tag name for an HTML element.
   *
   * This type is a lie. All instances are actually strings. Do not implement it.
   *
   * It exists because we need an object type to host the template type parameter,
   * and that's not possible with literal or enum types. It is a record type so
   * that runtime type checks don't try to validate the lie.
   */
  namespace TagName {
    let A : ಠ_ಠ.clutz.goog.dom.TagName < HTMLAnchorElement > ;
    let ABBR : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let ACRONYM : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let ADDRESS : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let APPLET : ಠ_ಠ.clutz.goog.dom.TagName < HTMLAppletElement > ;
    let AREA : ಠ_ಠ.clutz.goog.dom.TagName < HTMLAreaElement > ;
    let ARTICLE : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let ASIDE : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let AUDIO : ಠ_ಠ.clutz.goog.dom.TagName < HTMLAudioElement > ;
    let B : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let BASE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLBaseElement > ;
    let BASEFONT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLBaseFontElement > ;
    let BDI : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let BDO : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let BIG : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let BLOCKQUOTE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLQuoteElement > ;
    let BODY : ಠ_ಠ.clutz.goog.dom.TagName < HTMLBodyElement > ;
    let BR : ಠ_ಠ.clutz.goog.dom.TagName < HTMLBRElement > ;
    let BUTTON : ಠ_ಠ.clutz.goog.dom.TagName < HTMLButtonElement > ;
    let CANVAS : ಠ_ಠ.clutz.goog.dom.TagName < HTMLCanvasElement > ;
    let CAPTION : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableCaptionElement > ;
    let CENTER : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let CITE : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let CODE : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let COL : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableColElement > ;
    let COLGROUP : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableColElement > ;
    let COMMAND : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let DATA : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let DATALIST : ಠ_ಠ.clutz.goog.dom.TagName < HTMLDataListElement > ;
    let DD : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let DEL : ಠ_ಠ.clutz.goog.dom.TagName < HTMLModElement > ;
    let DETAILS : ಠ_ಠ.clutz.goog.dom.TagName < HTMLDetailsElement > ;
    let DFN : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let DIALOG : ಠ_ಠ.clutz.goog.dom.TagName < HTMLDialogElement > ;
    let DIR : ಠ_ಠ.clutz.goog.dom.TagName < HTMLDirectoryElement > ;
    let DIV : ಠ_ಠ.clutz.goog.dom.TagName < HTMLDivElement > ;
    let DL : ಠ_ಠ.clutz.goog.dom.TagName < HTMLDListElement > ;
    let DT : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let EM : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let EMBED : ಠ_ಠ.clutz.goog.dom.TagName < HTMLEmbedElement > ;
    let FIELDSET : ಠ_ಠ.clutz.goog.dom.TagName < HTMLFieldSetElement > ;
    let FIGCAPTION : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let FIGURE : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let FONT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLFontElement > ;
    let FOOTER : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let FORM : ಠ_ಠ.clutz.goog.dom.TagName < HTMLFormElement > ;
    let FRAME : ಠ_ಠ.clutz.goog.dom.TagName < HTMLFrameElement > ;
    let FRAMESET : ಠ_ಠ.clutz.goog.dom.TagName < HTMLFrameSetElement > ;
    let H1 : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHeadingElement > ;
    let H2 : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHeadingElement > ;
    let H3 : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHeadingElement > ;
    let H4 : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHeadingElement > ;
    let H5 : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHeadingElement > ;
    let H6 : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHeadingElement > ;
    let HEAD : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHeadElement > ;
    let HEADER : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let HGROUP : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let HR : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHRElement > ;
    let HTML : ಠ_ಠ.clutz.goog.dom.TagName < HTMLHtmlElement > ;
    let I : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let IFRAME : ಠ_ಠ.clutz.goog.dom.TagName < HTMLIFrameElement > ;
    let IMG : ಠ_ಠ.clutz.goog.dom.TagName < HTMLImageElement > ;
    let INPUT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLInputElement > ;
    let INS : ಠ_ಠ.clutz.goog.dom.TagName < HTMLModElement > ;
    let ISINDEX : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.HTMLIsIndexElement > ;
    let KBD : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let KEYGEN : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let LABEL : ಠ_ಠ.clutz.goog.dom.TagName < HTMLLabelElement > ;
    let LEGEND : ಠ_ಠ.clutz.goog.dom.TagName < HTMLLegendElement > ;
    let LI : ಠ_ಠ.clutz.goog.dom.TagName < HTMLLIElement > ;
    let LINK : ಠ_ಠ.clutz.goog.dom.TagName < HTMLLinkElement > ;
    let MAIN : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let MAP : ಠ_ಠ.clutz.goog.dom.TagName < HTMLMapElement > ;
    let MARK : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let MATH : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let MENU : ಠ_ಠ.clutz.goog.dom.TagName < HTMLMenuElement > ;
    let MENUITEM : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.HTMLMenuItemElement > ;
    let META : ಠ_ಠ.clutz.goog.dom.TagName < HTMLMetaElement > ;
    let METER : ಠ_ಠ.clutz.goog.dom.TagName < HTMLMeterElement > ;
    let NAV : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let NOFRAMES : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let NOSCRIPT : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let OBJECT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLObjectElement > ;
    let OL : ಠ_ಠ.clutz.goog.dom.TagName < HTMLOListElement > ;
    let OPTGROUP : ಠ_ಠ.clutz.goog.dom.TagName < HTMLOptGroupElement > ;
    let OPTION : ಠ_ಠ.clutz.goog.dom.TagName < HTMLOptionElement > ;
    let OUTPUT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLOutputElement > ;
    let P : ಠ_ಠ.clutz.goog.dom.TagName < HTMLParagraphElement > ;
    let PARAM : ಠ_ಠ.clutz.goog.dom.TagName < HTMLParamElement > ;
    let PICTURE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLPictureElement > ;
    let PRE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLPreElement > ;
    let PROGRESS : ಠ_ಠ.clutz.goog.dom.TagName < HTMLProgressElement > ;
    let Q : ಠ_ಠ.clutz.goog.dom.TagName < HTMLQuoteElement > ;
    let RP : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let RT : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let RTC : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let RUBY : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let S : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let SAMP : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let SCRIPT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLScriptElement > ;
    let SECTION : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let SELECT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLSelectElement > ;
    let SMALL : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let SOURCE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLSourceElement > ;
    let SPAN : ಠ_ಠ.clutz.goog.dom.TagName < HTMLSpanElement > ;
    let STRIKE : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let STRONG : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let STYLE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLStyleElement > ;
    let SUB : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let SUMMARY : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let SUP : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let SVG : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let TABLE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableElement > ;
    let TBODY : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableSectionElement > ;
    let TD : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableCellElement > ;
    let TEMPLATE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTemplateElement > ;
    let TEXTAREA : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTextAreaElement > ;
    let TFOOT : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableSectionElement > ;
    let TH : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableCellElement > ;
    let THEAD : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableSectionElement > ;
    let TIME : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let TITLE : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTitleElement > ;
    let TR : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTableRowElement > ;
    let TRACK : ಠ_ಠ.clutz.goog.dom.TagName < HTMLTrackElement > ;
    let TT : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let U : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let UL : ಠ_ಠ.clutz.goog.dom.TagName < HTMLUListElement > ;
    let VAR : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    let VIDEO : ಠ_ಠ.clutz.goog.dom.TagName < HTMLVideoElement > ;
    let WBR : ಠ_ಠ.clutz.goog.dom.TagName < ಠ_ಠ.clutz.goog.dom.HtmlElement > ;
    function /**
     * Cast a string into the tagname for the associated constructor.
     */
    cast < T = any > (name : string , type : { new ( ...a : any [] ) : T } ) : ಠ_ಠ.clutz.goog.dom.TagName < T > ;
  }
  interface TagName < T = any > {
    /**
     * Appease the compiler that instances are stringafiable for the
     * purpose of being a dictionary key.
     *
     * Never implemented; always backed by `String::toString`.
     */
    toString ( ) : string ;
  }
}
declare module 'goog:goog.dom.TagName' {
  import TagName = ಠ_ಠ.clutz.goog.dom.TagName;
  export default TagName;
}
