//!! generated by clutz.
// Generated from dom/bufferedviewportsizemonitor.js
declare namespace ಠ_ಠ.clutz.goog.dom {
  /**
   * Creates a new BufferedViewportSizeMonitor.
   */
  class BufferedViewportSizeMonitor extends ಠ_ಠ.clutz.goog.events.EventTarget {
    private noStructuralTyping_goog_dom_BufferedViewportSizeMonitor : any;
    /**
     * Creates a new BufferedViewportSizeMonitor.
     * @param viewportSizeMonitor The underlying viewport size monitor.
     * @param opt_bufferMs The buffer time, in ms. If not specified, this value defaults to {@link #RESIZE_EVENT_DELAY_MS_}.
     */
    constructor (viewportSizeMonitor : ಠ_ಠ.clutz.goog.dom.ViewportSizeMonitor , opt_bufferMs ? : number ) ;
    disposeInternal ( ) : void ;
    /**
     * Returns the current size of the viewport.
     */
    getSize ( ) : ಠ_ಠ.clutz.goog.math.Size | null ;
  }
}
// Generated from dom/bufferedviewportsizemonitor.js
declare namespace ಠ_ಠ.clutz.goog.dom.BufferedViewportSizeMonitor {
  type EventType = string &{clutzEnumBrand: never} ;
  let EventType : {
    RESIZE_HEIGHT : EventType ,
    RESIZE_WIDTH : EventType ,
  };
}
declare module 'goog:goog.dom.BufferedViewportSizeMonitor' {
  import BufferedViewportSizeMonitor = ಠ_ಠ.clutz.goog.dom.BufferedViewportSizeMonitor;
  export default BufferedViewportSizeMonitor;
}
