//!! generated by clutz.
// Generated from dom/textrangeiterator.js
declare namespace ಠ_ಠ.clutz.goog.dom {
  /**
   * Subclass of goog.dom.TagIterator that iterates over a DOM range.  It
   * adds functions to determine the portion of each text node that is selected.
   */
  class TextRangeIterator extends ಠ_ಠ.clutz.goog.dom.RangeIterator {
    private noStructuralTyping_goog_dom_TextRangeIterator : any;
    /**
     * Subclass of goog.dom.TagIterator that iterates over a DOM range.  It
     * adds functions to determine the portion of each text node that is selected.
     * @param startNode The starting node position.
     * @param startOffset The offset in to startNode.  If startNode is an element, indicates an offset in to childNodes.  If startNode is a text node, indicates an offset in to nodeValue.
     * @param endNode The ending node position.
     * @param endOffset The offset in to endNode.  If endNode is an element, indicates an offset in to childNodes.  If endNode is a text node, indicates an offset in to nodeValue.
     * @param opt_reverse Whether to traverse nodes in reverse.
     */
    constructor (startNode : Node | null , startOffset : number , endNode : Node | null , endOffset : number , opt_reverse ? : boolean ) ;
    clone ( ) : ಠ_ಠ.clutz.goog.dom.TextRangeIterator ;
    copyFrom (other ? : any ) : void ;
    getEndNode ( ) : any ;
    getEndTextOffset ( ) : any ;
    getStartNode ( ) : any ;
    getStartTextOffset ( ) : any ;
    isLast ( ) : any ;
    /**
     * Move to the next position in the selection.
     * Throws `goog.iter.StopIteration` when it passes the end of the range.
     */
    next ( ) : IteratorResult < Node > ;
    /**
     * TODO(user): Please do not remove - this will be cleaned up centrally.
     */
    nextValueOrThrow ( ) : Node ;
    /**
     * Change the end node of the iterator.
     * @param node The new end node.
     */
    setEndNode (node : Node | null ) : void ;
    /**
     * Change the start node of the iterator.
     * @param node The new start node.
     */
    setStartNode (node : Node | null ) : void ;
    skipTag ( ) : void ;
  }
}
declare module 'goog:goog.dom.TextRangeIterator' {
  import TextRangeIterator = ಠ_ಠ.clutz.goog.dom.TextRangeIterator;
  export default TextRangeIterator;
}
