//!! generated by clutz.
// Generated from labs/useragent/platform.js
declare namespace ಠ_ಠ.clutz.goog.labs.userAgent.platform {
  function getVersion ( ) : string ;
  function isAndroid ( ) : boolean ;
  function isChromeOS ( ) : boolean ;
  function isChromecast ( ) : boolean ;
  function isIos ( ) : boolean ;
  function isIpad ( ) : boolean ;
  function isIphone ( ) : boolean ;
  function isIpod ( ) : boolean ;
  function isKaiOS ( ) : boolean ;
  function isLinux ( ) : boolean ;
  function isMacintosh ( ) : boolean ;
  function isVersionOrHigher (version : string | number ) : boolean ;
  function isWindows ( ) : boolean ;
  let version : module$contents$goog$labs$userAgent$platform_PlatformVersion ;
}
declare module 'goog:goog.labs.userAgent.platform' {
  import platform = ಠ_ಠ.clutz.goog.labs.userAgent.platform;
  export = platform;
}
// Generated from labs/useragent/platform.js
declare namespace ಠ_ಠ.clutz {
  /**
   * Represents a high-entropy version string.
   */
  class module$contents$goog$labs$userAgent$platform_PlatformVersion implements ಠ_ಠ.clutz.module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.AsyncValue < ಠ_ಠ.clutz.module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version > {
    private noStructuralTyping_module$contents$goog$labs$userAgent$platform_PlatformVersion : any;
    getIfLoaded ( ) : ಠ_ಠ.clutz.module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version | undefined ;
    load ( ) : Promise < ಠ_ಠ.clutz.module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version > ;
  }
}
