//!! generated by clutz.
// Generated from labs/useragent/test_agents.js
declare namespace ಠ_ಠ.clutz.module$exports$goog$labs$userAgent$testAgents {
  let ANDROID_BROWSER_221 : string ;
  let ANDROID_BROWSER_233 : string ;
  let ANDROID_BROWSER_235 : string ;
  let ANDROID_BROWSER_403 : string ;
  let ANDROID_BROWSER_403_ALT : string ;
  let ANDROID_BROWSER_4_4 : string ;
  let ANDROID_WEB_VIEW_4_1_1 : string ;
  let ANDROID_WEB_VIEW_4_4 : string ;
  let CHROMECAST : string ;
  let CHROME_25 : string ;
  let CHROME_ANDROID : string ;
  let CHROME_ANDROID_PHONE_4_4 : string ;
  let CHROME_ANDROID_TABLET : string ;
  let CHROME_ANDROID_TABLET_4_4 : string ;
  let CHROME_HEADLESS : string ;
  let CHROME_IPAD : string ;
  let CHROME_IPAD_DESKTOP : string ;
  /**
   * The user-agent for Chrome browser on iPad running on iOS 15.0.
   */
  let CHROME_IPAD_IOS_15 : string ;
  let CHROME_IPHONE : string ;
  let CHROME_LINUX : string ;
  let CHROME_LINUX_91 : string ;
  /**
   * We traditionally use Appversion to detect X11
   */
  let CHROME_LINUX_APPVERVERSION : string ;
  let CHROME_MAC : string ;
  let CHROME_OS : string ;
  let CHROME_OS_910 : string ;
  let COAST : string ;
  /**
   * https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396#edge
   */
  let EDGE_12_0 : string ;
  let EDGE_12_9600 : string ;
  let EDGE_CHROMIUM : string ;
  let FIREFOX_19 : string ;
  let FIREFOX_ANDROID_TABLET : string ;
  let FIREFOX_IPHONE : string ;
  let FIREFOX_LINUX : string ;
  let FIREFOX_MAC : string ;
  let FIREFOX_WINDOWS : string ;
  let IE_10 : string ;
  let IE_10_COMPATIBILITY : string ;
  /**
   * http://blogs.windows.com/windows_phone/b/wpdev/archive/2012/10/17/getting-websites-ready-for-internet-explorer-10-on-windows-phone-8.aspx
   */
  let IE_10_MOBILE : string ;
  let IE_11 : string ;
  let IE_11_COMPATIBILITY_MSIE_7 : string ;
  let IE_11_COMPATIBILITY_MSIE_9 : string ;
  let IE_6 : string ;
  let IE_7 : string ;
  let IE_8 : string ;
  let IE_8_COMPATIBILITY : string ;
  let IE_9 : string ;
  let IE_9_COMPATIBILITY : string ;
  let IPAD_4 : string ;
  let IPAD_5 : string ;
  let IPAD_6 : string ;
  let KAIOS : string ;
  let KINDLE_FIRE : string ;
  let KINDLE_FIRE_SILK_93 : string ;
  let OPERA_10 : string ;
  let OPERA_15 : string ;
  let OPERA_LINUX : string ;
  let OPERA_MAC : string ;
  let OPERA_MINI : string ;
  /**
   * The user-agent for desktop Safari and iPadOS Safari are identical and require
   * runtime examination.
   */
  let SAFARI_13 : string ;
  let SAFARI_6 : string ;
  /**
   * The user-agent for Safari Desktop on iOS 15.0 (which is enabled by default on
   * non-mini iPads running at >=2/3 of the screen, unless the user requests for
   * mobile site.
   */
  let SAFARI_DESKTOP_IPAD_IOS_15 : string ;
  let SAFARI_IPHONE_32 : string ;
  let SAFARI_IPHONE_421 : string ;
  let SAFARI_IPHONE_431 : string ;
  let SAFARI_IPHONE_6 : string ;
  /**
   * The user-agent for Safari on iPhone with iOS 14.1.1.
   */
  let SAFARI_IPHONE_IOS_14 : string ;
  /**
   * The user-agent for Safari on iPhone with iOS 15.0.
   */
  let SAFARI_IPHONE_IOS_15 : string ;
  let SAFARI_IPOD : string ;
  let SAFARI_MAC : string ;
  /**
   * The user-agent for Safari on MacOS Big Sur 11.5.2. Safari caps the Mac OS
   * version number in the user-agent string.
   * See: https://bugs.webkit.org/show_bug.cgi?id=216593.
   */
  let SAFARI_MAC_OS_BIG_SUR : string ;
  /**
   * The user-agent for Safari mobile on iOS 15.0 (which is enabled by default on
   * iPad mini and can be enabled on other iPads by requesting a mobile site).
   */
  let SAFARI_MOBILE_IPAD_IOS_15 : string ;
  let SAFARI_WINDOWS : string ;
  let WEBVIEW_IPAD : string ;
  let WEBVIEW_IPHONE : string ;
}
declare module 'goog:goog.labs.userAgent.testAgents' {
  import testAgents = ಠ_ಠ.clutz.module$exports$goog$labs$userAgent$testAgents;
  export = testAgents;
}
