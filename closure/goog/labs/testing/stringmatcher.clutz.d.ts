//!! generated by clutz.
// Generated from labs/testing/stringmatcher.js
declare namespace ಠ_ಠ.clutz.goog.labs.testing.stringmatcher {
  /**
   * Matches any string value.
   */
  class AnyStringMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_AnyStringMatcher : any;
    describe (actualValue ? : any ) : any ;
    matches (actualValue ? : any ) : any ;
    static anyString ( ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.AnyStringMatcher ;
  }
  /**
   * The ContainsString matcher.
   */
  class ContainsStringMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_ContainsStringMatcher : any;
    /**
     * The ContainsString matcher.
     * @param value The expected string.
     */
    constructor (value : string ) ;
    describe (actualValue ? : any ) : any ;
    /**
     * Determines if input string contains the expected string.
     */
    matches (actualValue ? : any ) : any ;
    toString ( ) : string ;
    /**
     * Matches a string containing the given string.
     * @param value The expected value.
     */
    static containsString (value : string ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.ContainsStringMatcher ;
  }
  /**
   * The EndsWith matcher.
   */
  class EndsWithMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_EndsWithMatcher : any;
    /**
     * The EndsWith matcher.
     * @param value The expected string.
     */
    constructor (value : string ) ;
    describe (actualValue ? : any ) : any ;
    /**
     * Determines if input string ends with the expected string.
     */
    matches (actualValue ? : any ) : any ;
    toString ( ) : string ;
    /**
     * Matches a string that ends with the given string.
     * @param value The expected value.
     */
    static endsWith (value : string ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.EndsWithMatcher ;
  }
  /**
   * The EqualToIgnoringWhitespace matcher.  Collapses all whitespace down to a
   * single space before comparing the strings.  It is also case-insensitive.
   */
  class EqualToIgnoringWhitespaceMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_EqualToIgnoringWhitespaceMatcher : any;
    /**
     * The EqualToIgnoringWhitespace matcher.  Collapses all whitespace down to a
     * single space before comparing the strings.  It is also case-insensitive.
     * @param value The expected string.
     */
    constructor (value : string ) ;
    describe (actualValue : any ) : string ;
    /**
     * Determines if input string is the expected string when all whitespace in both
     * has been collapsed down into a single space.  Does a case-insensitive match.
     */
    matches (actualValue : any ) : boolean ;
    toString ( ) : string ;
    /**
     * Matches a string that equals (ignoring whitespace) the given string.
     * @param value The expected value.
     */
    static equalToIgnoringWhitespace (value : string ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.EqualToIgnoringWhitespaceMatcher ;
  }
  /**
   * The Equals matcher.
   */
  class EqualsMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_EqualsMatcher : any;
    /**
     * The Equals matcher.
     * @param value The expected string.
     */
    constructor (value : string ) ;
    describe (actualValue ? : any ) : any ;
    /**
     * Determines if input string is equal to the expected string.
     */
    matches (actualValue ? : any ) : any ;
    toString ( ) : string ;
    /**
     * Matches a string that equals the given string.
     * @param value The expected value.
     */
    static equals (value : string ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.EqualsMatcher ;
  }
  /**
   * The MatchesRegex matcher.
   */
  class RegexMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_RegexMatcher : any;
    /**
     * The MatchesRegex matcher.
     * @param regex The expected regex.
     */
    constructor (regex : RegExp ) ;
    describe (actualValue ? : any ) : any ;
    /**
     * Determines if input string is equal to the expected string.
     */
    matches (actualValue ? : any ) : any ;
    toString ( ) : string ;
    /**
     * Matches a string against a regular expression.
     * @param regex The expected regex.
     */
    static matchesRegex (regex : RegExp ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.RegexMatcher ;
  }
  /**
   * The StartsWith matcher.
   */
  class StartsWithMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_StartsWithMatcher : any;
    /**
     * The StartsWith matcher.
     * @param value The expected string.
     */
    constructor (value : string ) ;
    describe (actualValue ? : any ) : any ;
    /**
     * Determines if input string starts with the expected string.
     */
    matches (actualValue ? : any ) : any ;
    toString ( ) : string ;
    /**
     * Matches a string that starts with the given string.
     * @param value The expected value.
     */
    static startsWith (value : string ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.StartsWithMatcher ;
  }
  /**
   * The StringContainsInOrdermatcher.
   */
  class StringContainsInOrderMatcher implements ಠ_ಠ.clutz.goog.labs.testing.Matcher {
    private noStructuralTyping_goog_labs_testing_stringmatcher_StringContainsInOrderMatcher : any;
    /**
     * The StringContainsInOrdermatcher.
     * @param values The expected string values.
     */
    constructor (values : string [] | null ) ;
    describe (actualValue ? : any ) : any ;
    /**
     * Determines if input string contains, in order, the expected array of strings.
     */
    matches (actualValue ? : any ) : any ;
    toString ( ) : string ;
    /**
     * Matches a string that contains the given strings in order.
     * @param values The expected value.
     */
    static stringContainsInOrder (values : string [] | null ) : ಠ_ಠ.clutz.goog.labs.testing.stringmatcher.StringContainsInOrderMatcher ;
  }
}
declare module 'goog:goog.labs.testing.stringmatcher' {
  import stringmatcher = ಠ_ಠ.clutz.goog.labs.testing.stringmatcher;
  export = stringmatcher;
}
