//!! generated by clutz.
// Generated from labs/net/webchannel/wire.js
declare namespace ಠ_ಠ.clutz.goog.labs.net.webChannel {
  /**
   * The interface class.
   */
  namespace Wire {
    let /**
     * The latest protocol version that this class supports. We request this version
     * from the server when opening the connection. Should match
     * LATEST_CHANNEL_VERSION on the server code.
     */
    LATEST_CHANNEL_VERSION : number ;
    let /**
     * The JSON field key for the raw data wrapper object.
     */
    RAW_DATA_KEY : string ;
  }
  interface Wire {
  }
}
declare module 'goog:goog.labs.net.webChannel.Wire' {
  import Wire = ಠ_ಠ.clutz.goog.labs.net.webChannel.Wire;
  export default Wire;
}
// Generated from labs/net/webchannel/wire.js
declare namespace ಠ_ಠ.clutz.goog.labs.net.webChannel.Wire {
  /**
   * Simple container class for a (mapId, map) pair.
   */
  class QueuedMap {
    private noStructuralTyping_goog_labs_net_webChannel_Wire_QueuedMap : any;
    constructor (mapId : number , map : GlobalObject | ಠ_ಠ.clutz.goog.collections.maps.MapLike , opt_context ? : GlobalObject ) ;
    /**
     * The context for the map.
     */
    context : GlobalObject | null ;
    /**
     * The map itself.
     */
    map : GlobalObject | ಠ_ಠ.clutz.goog.collections.maps.MapLike ;
    /**
     * The id for this map.
     */
    mapId : number ;
    getRawDataSize ( ) : number | undefined ;
  }
}
declare module 'goog:goog.labs.net.webChannel.Wire.QueuedMap' {
  import QueuedMap = ಠ_ಠ.clutz.goog.labs.net.webChannel.Wire.QueuedMap;
  export default QueuedMap;
}
