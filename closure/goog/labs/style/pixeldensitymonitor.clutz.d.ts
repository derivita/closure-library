//!! generated by clutz.
// Generated from labs/style/pixeldensitymonitor.js
declare namespace ಠ_ಠ.clutz.goog.labs.style {
  /**
   * Monitors the window for changes to the ratio between device and screen
   * pixels, e.g. when the user moves the window from a high density screen to a
   * screen with normal density. Dispatches
   * goog.labs.style.PixelDensityMonitor.EventType.CHANGE events when the density
   * changes between the two predefined values NORMAL and HIGH.
   *
   * This class uses the window.devicePixelRatio value which is supported in
   * WebKit and FF18. If the value does not exist, it will always return a
   * NORMAL density. It requires support for MediaQueryList to detect changes to
   * the devicePixelRatio.
   */
  class PixelDensityMonitor extends ಠ_ಠ.clutz.goog.events.EventTarget {
    private noStructuralTyping_goog_labs_style_PixelDensityMonitor : any;
    /**
     * Monitors the window for changes to the ratio between device and screen
     * pixels, e.g. when the user moves the window from a high density screen to a
     * screen with normal density. Dispatches
     * goog.labs.style.PixelDensityMonitor.EventType.CHANGE events when the density
     * changes between the two predefined values NORMAL and HIGH.
     *
     * This class uses the window.devicePixelRatio value which is supported in
     * WebKit and FF18. If the value does not exist, it will always return a
     * NORMAL density. It requires support for MediaQueryList to detect changes to
     * the devicePixelRatio.
     * @param opt_domHelper The DomHelper which contains the document associated with the window to listen to. Defaults to the one in which this code is executing.
     */
    constructor (opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper ) ;
    disposeInternal ( ) : void ;
    getDensity ( ) : ಠ_ಠ.clutz.goog.labs.style.PixelDensityMonitor.Density ;
    start ( ) : void ;
  }
}
declare module 'goog:goog.labs.style.PixelDensityMonitor' {
  import PixelDensityMonitor = ಠ_ಠ.clutz.goog.labs.style.PixelDensityMonitor;
  export default PixelDensityMonitor;
}
// Generated from labs/style/pixeldensitymonitor.js
declare namespace ಠ_ಠ.clutz.goog.labs.style.PixelDensityMonitor {
  /**
   * The two different pixel density modes on which the various ratios between
   * physical and device pixels are mapped.
   */
  /**
   * The two different pixel density modes on which the various ratios between
   * physical and device pixels are mapped.
   */
  enum Density {
    HIGH = 2.0 ,
    NORMAL = 1.0 ,
  }
}
declare module 'goog:goog.labs.style.PixelDensityMonitor.Density' {
  import Density = ಠ_ಠ.clutz.goog.labs.style.PixelDensityMonitor.Density;
  export default Density;
}
// Generated from labs/style/pixeldensitymonitor.js
declare namespace ಠ_ಠ.clutz.goog.labs.style.PixelDensityMonitor {
  /**
   * The events fired by the PixelDensityMonitor.
   */
  type EventType = string &{clutzEnumBrand: never} ;
  let EventType : {
    CHANGE : EventType ,
  };
}
declare module 'goog:goog.labs.style.PixelDensityMonitor.EventType' {
  import EventType = ಠ_ಠ.clutz.goog.labs.style.PixelDensityMonitor.EventType;
  export default EventType;
}
