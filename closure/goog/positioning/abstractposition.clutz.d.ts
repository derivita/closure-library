//!! generated by clutz.
// Generated from positioning/abstractposition.js
declare namespace ಠ_ಠ.clutz.goog.positioning {
  /**
   * Abstract position object. Encapsulates position and overflow handling.
   */
  class AbstractPosition {
    private noStructuralTyping_goog_positioning_AbstractPosition : any;
    /**
     * Repositions the element. Abstract method, should be overloaded.
     * @param movableElement Element to position.
     * @param corner Corner of the movable element that should be positioned adjacent to the anchored element.
     * @param opt_margin A margin specified in pixels.
     * @param opt_preferredSize PreferredSize of the movableElement.
     */
    reposition (movableElement : GlobalElement | null , corner : ಠ_ಠ.clutz.goog.positioning.Corner | null , opt_margin ? : ಠ_ಠ.clutz.goog.math.Box | null , opt_preferredSize ? : ಠ_ಠ.clutz.goog.math.Size | null ) : void ;
  }
}
declare module 'goog:goog.positioning.AbstractPosition' {
  import AbstractPosition = ಠ_ಠ.clutz.goog.positioning.AbstractPosition;
  export default AbstractPosition;
}
