//!! generated by clutz.
// Generated from positioning/clientposition.js
declare namespace ಠ_ಠ.clutz.goog.positioning {
  /**
   * Encapsulates a popup position where the popup is positioned relative to the
   * window (client) coordinates. This calculates the correct position to
   * use even if the element is relatively positioned to some other element. This
   * is for trying to position an element at the spot of the mouse cursor in
   * a MOUSEMOVE event. Just use the event.clientX and event.clientY as the
   * parameters.
   */
  class ClientPosition extends ಠ_ಠ.clutz.goog.positioning.AbstractPosition {
    private noStructuralTyping_goog_positioning_ClientPosition : any;
    /**
     * Encapsulates a popup position where the popup is positioned relative to the
     * window (client) coordinates. This calculates the correct position to
     * use even if the element is relatively positioned to some other element. This
     * is for trying to position an element at the spot of the mouse cursor in
     * a MOUSEMOVE event. Just use the event.clientX and event.clientY as the
     * parameters.
     * @param arg1 Left position or coordinate.
     * @param opt_arg2 Top position.
     */
    constructor (arg1 : number | ಠ_ಠ.clutz.goog.math.Coordinate | null , opt_arg2 ? : number ) ;
    /**
     * Coordinate to position popup at.
     */
    coordinate : ಠ_ಠ.clutz.goog.math.Coordinate ;
    /**
     * Repositions the popup according to the current state
     * @param movableElement The DOM element of the popup.
     * @param movableElementCorner The corner of the popup element that that should be positioned adjacent to the anchorElement.  One of the goog.positioning.Corner constants.
     * @param opt_margin A margin specified in pixels.
     * @param opt_preferredSize Preferred size of the element.
     */
    reposition (movableElement : GlobalElement | null , movableElementCorner : ಠ_ಠ.clutz.goog.positioning.Corner | null , opt_margin ? : ಠ_ಠ.clutz.goog.math.Box | null , opt_preferredSize ? : ಠ_ಠ.clutz.goog.math.Size | null ) : void ;
  }
}
declare module 'goog:goog.positioning.ClientPosition' {
  import ClientPosition = ಠ_ಠ.clutz.goog.positioning.ClientPosition;
  export default ClientPosition;
}
