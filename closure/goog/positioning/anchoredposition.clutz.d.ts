//!! generated by clutz.
// Generated from positioning/anchoredposition.js
declare namespace ಠ_ಠ.clutz.goog.positioning {
  /**
   * Encapsulates a popup position where the popup is anchored at a corner of
   * an element.
   *
   * When using AnchoredPosition, it is recommended that the popup element
   * specified in the Popup constructor or Popup.setElement be absolutely
   * positioned.
   */
  class AnchoredPosition extends ಠ_ಠ.clutz.goog.positioning.AbstractPosition {
    private noStructuralTyping_goog_positioning_AnchoredPosition : any;
    /**
     * Encapsulates a popup position where the popup is anchored at a corner of
     * an element.
     *
     * When using AnchoredPosition, it is recommended that the popup element
     * specified in the Popup constructor or Popup.setElement be absolutely
     * positioned.
     * @param anchorElement Element the movable element should be anchored against.
     * @param corner Corner of anchored element the movable element should be positioned at.
     * @param opt_overflow Overflow handling mode. Defaults to IGNORE if not specified. Bitmap, {@see goog.positioning.Overflow}.
     */
    constructor (anchorElement : GlobalElement | null , corner : ಠ_ಠ.clutz.goog.positioning.Corner | null , opt_overflow ? : number ) ;
    /**
     * Corner of anchored element the movable element should be positioned at.
     */
    corner : ಠ_ಠ.clutz.goog.positioning.Corner | null ;
    /**
     * Element the movable element should be anchored against.
     */
    element : GlobalElement | null ;
    /**
     * Repositions the movable element.
     * @param movableElement Element to position.
     * @param movableCorner Corner of the movable element that should be positioned adjacent to the anchored element.
     * @param opt_margin A margin specifin pixels.
     * @param opt_preferredSize PreferredSize of the movableElement (unused in this class).
     */
    reposition (movableElement : GlobalElement | null , movableCorner : ಠ_ಠ.clutz.goog.positioning.Corner | null , opt_margin ? : ಠ_ಠ.clutz.goog.math.Box | null , opt_preferredSize ? : ಠ_ಠ.clutz.goog.math.Size | null ) : void ;
  }
}
declare module 'goog:goog.positioning.AnchoredPosition' {
  import AnchoredPosition = ಠ_ಠ.clutz.goog.positioning.AnchoredPosition;
  export default AnchoredPosition;
}
