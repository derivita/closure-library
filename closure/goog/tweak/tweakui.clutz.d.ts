//!! generated by clutz.
// Generated from tweak/tweakui.js
declare namespace ಠ_ಠ.clutz.goog.tweak {
  /**
   * The body of the tweaks UI and also used for BooleanGroup.
   */
  class EntriesPanel {
    private noStructuralTyping_goog_tweak_EntriesPanel : any;
    /**
     * The body of the tweaks UI and also used for BooleanGroup.
     * @param entries The entries to show in the panel.
     * @param opt_domHelper The DomHelper to render with.
     */
    constructor (entries : ಠ_ಠ.clutz.goog.tweak.BaseEntry [] , opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null ) ;
    /**
     * Map of tweak ID -> EntriesPanel for child panels (BooleanGroups).
     */
    childPanels : { [ /* warning: coerced from ? */ key: string ]: ಠ_ಠ.clutz.goog.tweak.EntriesPanel } ;
    getRootElement ( ) : GlobalElement ;
    /**
     * Inserts the given entry into the panel.
     * @param entry The entry to insert.
     */
    insertEntry (entry : ಠ_ಠ.clutz.goog.tweak.BaseEntry ) : void ;
    /**
     * Creates and returns the expanded element.
     * The markup looks like:
     *
     * <div>
     * <a>Show Descriptions</a>
     * <div>
     * ...
     * {endElement}
     * </div>
     * </div>
     * @param opt_endElement Element to insert after all tweak entries.
     */
    render (opt_endElement ? : GlobalElement | null | DocumentFragment ) : GlobalElement ;
    toggleAllDescriptions ( ) : void ;
  }
}
declare module 'goog:goog.tweak.EntriesPanel' {
  import EntriesPanel = ಠ_ಠ.clutz.goog.tweak.EntriesPanel;
  export default EntriesPanel;
}
// Generated from tweak/tweakui.js
declare namespace ಠ_ಠ.clutz.goog.tweak {
  /**
   * A UI for editing tweak settings / clicking tweak actions.
   */
  class TweakUi {
    private noStructuralTyping_goog_tweak_TweakUi : any;
    /**
     * A UI for editing tweak settings / clicking tweak actions.
     * @param registry The registry to render.
     * @param opt_domHelper The DomHelper to render with.
     */
    constructor (registry : ಠ_ಠ.clutz.goog.tweak.Registry , opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null ) ;
    getRootElement ( ) : GlobalElement ;
    /**
     * Creates the element to display when the UI is visible.
     */
    render ( ) : GlobalElement ;
    /**
     * Creates a TweakUi if tweaks are enabled.
     * @param opt_domHelper The DomHelper to render with.
     */
    static create (opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null ) : GlobalElement | undefined ;
    /**
     * Creates a TweakUi inside of a show/hide link.
     * @param opt_domHelper The DomHelper to render with.
     */
    static createCollapsible (opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null ) : GlobalElement | undefined ;
  }
}
declare module 'goog:goog.tweak.TweakUi' {
  import TweakUi = ಠ_ಠ.clutz.goog.tweak.TweakUi;
  export default TweakUi;
}
