//!! generated by clutz.
// Generated from html/sanitizer/unsafe.js
declare namespace ಠ_ಠ.clutz.goog.html.sanitizer.unsafe {
  /**
   * Installs custom attribute policies for the attributes provided in the list.
   * This can be used either on non-whitelisted attributes, effectively extending
   * the attribute whitelist, or on attributes that are whitelisted and already
   * have a policy, to override their policies.
   *
   * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure
   * that the new tags do not introduce untrusted code execution or unsanctioned
   * network activity.
   * @param justification A constant string explaining why the addition of these attributes to the whitelist is safe. May include a security review ticket number.
   * @param builder The builder whose attribute whitelist should be extended.
   * @param attrs A list of attributes whose policy should be overridden. Attributes can come in of two forms: - string: allow all values and just trim whitespaces for this attribute on all tags. - HtmlSanitizerAttributePolicy: allows specifying a policy for a particular tag. The tagName can be '*', which means all tags. If no policy is passed, the default is allow all values and just trim whitespaces. The tag and attribute names are case-insensitive.
   */
  function alsoAllowAttributes (justification : ಠ_ಠ.clutz.goog.string.Const , builder : ಠ_ಠ.clutz.goog.html.sanitizer.HtmlSanitizer.Builder , attrs : ( string | ಠ_ಠ.clutz.goog.html.sanitizer.HtmlSanitizerAttributePolicy ) [] ) : ಠ_ಠ.clutz.goog.html.sanitizer.HtmlSanitizer.Builder ;
  /**
   * Extends the tag whitelist with the list of tags provided. If the tag is
   * blacklisted, this method also removes it from the blacklist.
   *
   * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure
   * that the new tags do not introduce untrusted code execution or unsanctioned
   * network activity.
   * @param justification A constant string explaining why the addition of these tags to the whitelist is safe. May include a security review ticket number.
   * @param builder The builder whose tag whitelist should be extended.
   * @param tags A list of additional tags to allow through the sanitizer. The tag names are case-insensitive.
   */
  function alsoAllowTags (justification : ಠ_ಠ.clutz.goog.string.Const , builder : ಠ_ಠ.clutz.goog.html.sanitizer.HtmlSanitizer.Builder , tags : string [] ) : ಠ_ಠ.clutz.goog.html.sanitizer.HtmlSanitizer.Builder ;
}
declare module 'goog:goog.html.sanitizer.unsafe' {
  import unsafe = ಠ_ಠ.clutz.goog.html.sanitizer.unsafe;
  export = unsafe;
}
