//!! generated by clutz.
// Generated from html/sanitizer/noclobber.js
declare namespace ಠ_ಠ.clutz.goog.html.sanitizer.noclobber {
  function appendNodeChild (parent : Node , child : Node ) : Node ;
  function assertNodeIsElement (node : Node ) : GlobalElement ;
  function elementMatches (element : GlobalElement , selector : string ) : boolean ;
  function getChildNodes (node : Node ) : NodeList < Node > ;
  function getCssPropertyValue (cssStyle : CSSStyleDeclaration , propName : string ) : string ;
  function getElementAttribute (element : GlobalElement , attrName : string ) : string | null ;
  function getElementAttributes (element : GlobalElement ) : NamedNodeMap ;
  function getElementInnerHTML (element : GlobalElement ) : string ;
  function getElementNamespaceURI (element : GlobalElement ) : string ;
  function getElementStyle (element : GlobalElement ) : CSSStyleDeclaration ;
  function getElementStyleSheet (element : GlobalElement ) : CSSStyleSheet ;
  function getElementsByTagName (element : GlobalElement , name : string ) : GlobalElement [] ;
  function getNodeName (node : Node ) : string ;
  function getNodeType (node : Node ) : number ;
  function getParentNode (node : Node ) : Node | null ;
  function hasElementAttribute (element : GlobalElement , attrName : string ) : boolean ;
  function isNodeElement (node : Node ) : boolean ;
  function removeElementAttribute (element : GlobalElement , attrName : string ) : void ;
  function setCssProperty (cssStyle : CSSStyleDeclaration , propName : string , sanitizedValue : string ) : void ;
  function setElementAttribute (element : GlobalElement , name : string , value : string ) : void ;
}
declare module 'goog:goog.html.sanitizer.noclobber' {
  import noclobber = ಠ_ಠ.clutz.goog.html.sanitizer.noclobber;
  export = noclobber;
}
declare namespace ಠ_ಠ.clutz.module$exports$goog$html$sanitizer$noclobber {
  export import Methods = ಠ_ಠ.clutz.module$contents$goog$html$sanitizer$noclobber_Methods ;
}
