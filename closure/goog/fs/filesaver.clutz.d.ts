//!! generated by clutz.
// Generated from fs/filesaver.js
declare namespace ಠ_ಠ.clutz.goog.fs {
  /**
   * An object for monitoring the saving of files. This emits ProgressEvents of
   * the types listed in {@link goog.fs.FileSaver.EventType}.
   *
   * This should not be instantiated directly. Instead, its subclass
   * {@link goog.fs.FileWriter} should be accessed via
   * {@link goog.fs.FileEntry#createWriter}.
   */
  class FileSaver extends ಠ_ಠ.clutz.goog.events.EventTarget {
    private noStructuralTyping_goog_fs_FileSaver : any;
    /**
     * An object for monitoring the saving of files. This emits ProgressEvents of
     * the types listed in {@link goog.fs.FileSaver.EventType}.
     *
     * This should not be instantiated directly. Instead, its subclass
     * {@link goog.fs.FileWriter} should be accessed via
     * {@link goog.fs.FileEntry#createWriter}.
     * @param fileSaver The underlying FileSaver object.
     */
    constructor (fileSaver : ಠ_ಠ.clutz.FileSaver ) ;
    abort ( ) : void ;
    disposeInternal ( ) : void ;
    getError ( ) : ಠ_ಠ.clutz.goog.fs.Error | null ;
    getReadyState ( ) : ಠ_ಠ.clutz.goog.fs.FileSaver.ReadyState ;
  }
}
declare module 'goog:goog.fs.FileSaver' {
  import FileSaver = ಠ_ಠ.clutz.goog.fs.FileSaver;
  export default FileSaver;
}
// Generated from fs/filesaver.js
declare namespace ಠ_ಠ.clutz.goog.fs.FileSaver {
  /**
   * Events emitted by a FileSaver.
   */
  /**
   * Events emitted by a FileSaver.
   */
  enum EventType {
    ABORT = 'abort' ,
    ERROR = 'error' ,
    PROGRESS = 'progress' ,
    WRITE = 'write' ,
    WRITE_END = 'writeend' ,
    WRITE_START = 'writestart' ,
  }
}
declare module 'goog:goog.fs.FileSaver.EventType' {
  import EventType = ಠ_ಠ.clutz.goog.fs.FileSaver.EventType;
  export default EventType;
}
// Generated from fs/filesaver.js
declare namespace ಠ_ಠ.clutz.goog.fs.FileSaver {
  /**
   * Possible states for a FileSaver.
   */
  /**
   * Possible states for a FileSaver.
   */
  enum ReadyState {
    DONE = 2.0 ,
    INIT = 0.0 ,
    WRITING = 1.0 ,
  }
}
declare module 'goog:goog.fs.FileSaver.ReadyState' {
  import ReadyState = ಠ_ಠ.clutz.goog.fs.FileSaver.ReadyState;
  export default ReadyState;
}
