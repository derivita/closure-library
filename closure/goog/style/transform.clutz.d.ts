//!! generated by clutz.
// Generated from style/transform.js
declare namespace ಠ_ಠ.clutz.goog.style.transform {
  /**
   * Returns the rotation CSS transform applied to the element.
   * @param element The element to get the rotation of.
   */
  function getRotation (element : GlobalElement ) : number ;
  /**
   * Returns the scale of the x, y and z dimensions of CSS transforms applied to
   * the element.
   * @param element The element to get the scale of.
   */
  function getScale (element : GlobalElement ) : ಠ_ಠ.clutz.goog.math.Coordinate3 ;
  /**
   * Returns the x,y translation component of any CSS transforms applied to the
   * element, in pixels.
   * @param element The element to get the translation of.
   */
  function getTranslation (element : GlobalElement ) : ಠ_ಠ.clutz.goog.math.Coordinate ;
  /**
   * Rotates an element using the CSS3 transform property.
   * NOTE: This replaces all other transforms already defined on the element.
   * @param element The element to rotate.
   * @param degrees The number of degrees to rotate by.
   */
  function setRotation (element : GlobalElement , degrees : number ) : boolean ;
  /**
   * Scales an element using the CSS3 transform property.
   * NOTE: This replaces all other transforms already defined on the element.
   * @param element The element to scale.
   * @param x The horizontal scale.
   * @param y The vertical scale.
   * @param z The depth scale.
   */
  function setScale (element : GlobalElement , x : number , y : number , z : number ) : boolean ;
  /**
   * Translates an element's position using the CSS3 transform property.
   * NOTE: This replaces all other transforms already defined on the element.
   * @param element The element to translate.
   * @param x The horizontal translation.
   * @param y The vertical translation.
   */
  function setTranslation (element : GlobalElement | null , x : number , y : number ) : boolean ;
}
declare module 'goog:goog.style.transform' {
  import transform = ಠ_ಠ.clutz.goog.style.transform;
  export = transform;
}
