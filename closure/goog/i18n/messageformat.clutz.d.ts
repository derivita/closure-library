//!! generated by clutz.
// Generated from i18n/messageformat.js
declare namespace ಠ_ಠ.clutz.goog.i18n {
  /**
   * Constructor of MessageFormat.
   */
  class MessageFormat {
    private noStructuralTyping_goog_i18n_MessageFormat : any;
    /**
     * Constructor of MessageFormat.
     * @param pattern The pattern we parse and apply positional parameters to.
     */
    constructor (pattern : string ) ;
    /**
     * Formats a message, treating '#' with special meaning representing
     * the number (plural_variable - offset).
     * @param namedParameters Parameters that either influence the formatting or are used as actual data. I.e. in call to fmt.format({'NUM_PEOPLE': 5, 'NAME': 'Angela'}), object {'NUM_PEOPLE': 5, 'NAME': 'Angela'} holds positional parameters. 1st parameter could mean 5 people, which could influence plural format, and 2nd parameter is just a data to be printed out in proper position.
     */
    format (namedParameters : GlobalObject ) : string ;
    /**
     * Formats a message, treating '#' as literary character.
     * @param namedParameters Parameters that either influence the formatting or are used as actual data. I.e. in call to fmt.format({'NUM_PEOPLE': 5, 'NAME': 'Angela'}), object {'NUM_PEOPLE': 5, 'NAME': 'Angela'} holds positional parameters. 1st parameter could mean 5 people, which could influence plural format, and 2nd parameter is just a data to be printed out in proper position.
     */
    formatIgnoringPound (namedParameters : GlobalObject ) : string ;
  }
}
declare module 'goog:goog.i18n.MessageFormat' {
  import MessageFormat = ಠ_ಠ.clutz.goog.i18n.MessageFormat;
  export default MessageFormat;
}
