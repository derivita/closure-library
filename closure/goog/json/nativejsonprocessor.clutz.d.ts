//!! generated by clutz.
// Generated from json/nativejsonprocessor.js
declare namespace ಠ_ಠ.clutz.goog.json {
  /**
   * A class that parses and stringifies JSON using the browser's built-in JSON
   * library, if it is available.
   *
   * Note that the native JSON api has subtle differences across browsers, so
   * use this implementation with care.  See json_test#assertSerialize
   * for details on the differences from goog.json.
   *
   * This implementation is signficantly faster than goog.json, at least on
   * Chrome.  See json_perf.html for a perf test showing the difference.
   */
  class NativeJsonProcessor implements ಠ_ಠ.clutz.goog.json.Processor {
    private noStructuralTyping_goog_json_NativeJsonProcessor : any;
    /**
     * A class that parses and stringifies JSON using the browser's built-in JSON
     * library, if it is available.
     *
     * Note that the native JSON api has subtle differences across browsers, so
     * use this implementation with care.  See json_test#assertSerialize
     * for details on the differences from goog.json.
     *
     * This implementation is signficantly faster than goog.json, at least on
     * Chrome.  See json_perf.html for a perf test showing the difference.
     * @param opt_replacer An optional replacer to use during serialization.
     * @param opt_reviver An optional reviver to use during parsing.
     */
    constructor (opt_replacer ? : ಠ_ಠ.clutz.goog.json.Replacer | null , opt_reviver ? : ಠ_ಠ.clutz.goog.json.Reviver | null ) ;
    parse (s ? : any ) : any ;
    stringify (object ? : any ) : any ;
  }
}
declare module 'goog:goog.json.NativeJsonProcessor' {
  import NativeJsonProcessor = ಠ_ಠ.clutz.goog.json.NativeJsonProcessor;
  export default NativeJsonProcessor;
}
