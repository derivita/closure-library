//!! generated by clutz.
// Generated from iter/es6.js
declare namespace ಠ_ಠ.clutz.goog.iter.es6 {
  export import ShimEs6Iterator = ಠ_ಠ.clutz.module$contents$goog$iter$es6_ShimEs6Iterator ;
  export import ShimGoogIterator = ಠ_ಠ.clutz.module$contents$goog$iter$es6_ShimGoogIterator ;
  export import ShimIterable = ಠ_ಠ.clutz.module$contents$goog$iter$es6_ShimIterable ;
}
declare module 'goog:goog.iter.es6' {
  import es6 = ಠ_ಠ.clutz.goog.iter.es6;
  export = es6;
}
// Generated from iter/es6.js
declare namespace ಠ_ಠ.clutz {
  /**
   * Common interface extending both `goog.iter.Iterable` and ES6 `Iterable`,
   * and providing `toGoog()` and `toEs6()` methods to get either kind
   * of iterator.  `ShimIterable.of()` is the primary entry point for
   * this library.  If it is given an iterable that is *not* also an
   * iterator, then it will inherit any reusability from its argument
   * (i.e. `ShimIterable.of(mySet)` will be reusable, since mySet makes
   * a fresh Iterator every time, whereas `ShimIterable.of(myIterator)`
   * will be one-shot).
   *
   * `ShimGoogIterator` and `ShimEs6Iterator` extend `ShimIterable` and
   * also implement one or the other iterator API.  Since they extend
   * `ShimIterable`, it is easy to convert back and forth between the two
   * APIs.  Any such conversion will expose a view to the same underlying
   * iterator, so elements pulled via one API will not be available from
   * the other.
   */
  namespace module$contents$goog$iter$es6_ShimIterable {
    function of < VALUE = any > (iter : Iterable < VALUE > | Iterator < VALUE > | ಠ_ಠ.clutz.module$exports$goog$iter$Iterator < VALUE > | ಠ_ಠ.clutz.module$exports$goog$iter$Iterable ) : module$contents$goog$iter$es6_ShimIterable < any > ;
  }
  interface module$contents$goog$iter$es6_ShimIterable < VALUE = any > extends Iterable < VALUE > {
    __iterator__ ( ) : ಠ_ಠ.clutz.module$exports$goog$iter$Iterator < VALUE > ;
    toEs6 ( ) : module$contents$goog$iter$es6_ShimEs6Iterator < VALUE > ;
    toGoog ( ) : module$contents$goog$iter$es6_ShimGoogIterator < VALUE > ;
  }
}
// Generated from iter/es6.js
declare namespace ಠ_ಠ.clutz {
  /**
   * Concrete `goog.iter.Iterator` subclass that also implements `ShimIterable`.
   */
  class module$contents$goog$iter$es6_ShimGoogIterator < VALUE = any > extends ಠ_ಠ.clutz.module$exports$goog$iter$Iterator < VALUE > implements module$contents$goog$iter$es6_ShimIterable < VALUE > {
    private noStructuralTyping_module$contents$goog$iter$es6_ShimGoogIterator : any;
    /**
     * Concrete `goog.iter.Iterator` subclass that also implements `ShimIterable`.
     */
    constructor (iter : Iterator < VALUE > ) ;
    iter_ : Iterator < VALUE > ;
    next ( ) : IteratorResult < VALUE > ;
    toEs6 ( ) : module$contents$goog$iter$es6_ShimEs6Iterator < VALUE > ;
    toGoog ( ) : module$contents$goog$iter$es6_ShimGoogIterator < any > ;
  }
}
// Generated from iter/es6.js
declare namespace ಠ_ಠ.clutz {
  /**
   * Concrete ES6 `Iterator` that also implements `ShimIterable`.
   */
  class module$contents$goog$iter$es6_ShimEs6Iterator < VALUE = any > extends module$contents$goog$iter$es6_ShimIterableImpl < VALUE > implements IterableIterator < VALUE > {
    private noStructuralTyping_module$contents$goog$iter$es6_ShimEs6Iterator : any;
    /**
     * Concrete ES6 `Iterator` that also implements `ShimIterable`.
     */
    constructor (iter : Iterator < VALUE > ) ;
    next ( ) : any ;
  }
}
// Generated from iter/es6.js
declare namespace ಠ_ಠ.clutz {
  /**
   * Concrete (private) implementation of a non-iterator iterable.  This is
   * separate from the iterator versions since it supports iterables that
   * are not "one-shot".
   */
  class module$contents$goog$iter$es6_ShimIterableImpl < VALUE = any > implements module$contents$goog$iter$es6_ShimIterable < VALUE > {
    private noStructuralTyping_module$contents$goog$iter$es6_ShimIterableImpl : any;
    /**
     * Concrete (private) implementation of a non-iterator iterable.  This is
     * separate from the iterator versions since it supports iterables that
     * are not "one-shot".
     */
    constructor (func : PrivateType ) ;
    __iterator__ ( ) : ಠ_ಠ.clutz.module$exports$goog$iter$Iterator < VALUE > ;
    toEs6 ( ) : module$contents$goog$iter$es6_ShimEs6Iterator < VALUE > ;
    toGoog ( ) : module$contents$goog$iter$es6_ShimGoogIterator < VALUE > ;
  }
}
declare namespace ಠ_ಠ.clutz.module$exports$goog$iter$es6 {
  export import ShimIterable = ಠ_ಠ.clutz.module$contents$goog$iter$es6_ShimIterable ;
}
declare namespace ಠ_ಠ.clutz.module$exports$goog$iter$es6 {
  export import ShimEs6Iterator = ಠ_ಠ.clutz.module$contents$goog$iter$es6_ShimEs6Iterator ;
}
declare namespace ಠ_ಠ.clutz.module$exports$goog$iter$es6 {
  export import ShimGoogIterator = ಠ_ಠ.clutz.module$contents$goog$iter$es6_ShimGoogIterator ;
}
