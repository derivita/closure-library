//!! generated by clutz.
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  type Report = any ;
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  class Report2 {
    private noStructuralTyping_Report2 : any;
    body : ReportBody2 | null ;
    type : string ;
    url : string ;
  }
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  type ReportBody = ReportBody2 | null ;
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  class ReportBody2 {
    private noStructuralTyping_ReportBody2 : any;
  }
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  type ReportingObserver = any ;
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  /**
   * https://w3c.github.io/reporting/#interface-reporting-observer
   */
  class ReportingObserver2 {
    private noStructuralTyping_ReportingObserver2 : any;
    /**
     * https://w3c.github.io/reporting/#interface-reporting-observer
     */
    constructor (callback : ಠ_ಠ.clutz.ReportingObserverCallback , opts : any ) ;
    disconnect ( ) : void ;
    observe ( ) : void ;
    takeRecords ( ) : any [] ;
  }
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  type ReportingObserverCallback = (a : any [] , b : any ) => void ;
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  type ReportingObserverOptions = any ;
}
// Generated from testing/cspviolationobserver_externs.js
declare namespace ಠ_ಠ.clutz {
  class ReportingObserverOptions2 {
    private noStructuralTyping_ReportingObserverOptions2 : any;
    buffered : boolean ;
    types ? : string [] ;
  }
}
