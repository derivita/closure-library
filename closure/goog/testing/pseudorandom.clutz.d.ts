//!! generated by clutz.
// Generated from testing/pseudorandom.js
declare namespace ಠ_ಠ.clutz.goog.testing {
  /**
   * Class for unit testing code that uses Math.random. Generates deterministic
   * random numbers.
   */
  class PseudoRandom extends ಠ_ಠ.clutz.goog.Disposable {
    private noStructuralTyping_goog_testing_PseudoRandom : any;
    /**
     * Class for unit testing code that uses Math.random. Generates deterministic
     * random numbers.
     * @param opt_seed The seed to use.
     * @param opt_install Whether to install the PseudoRandom at construction time.
     */
    constructor (opt_seed ? : number , opt_install ? : boolean ) ;
    disposeInternal ( ) : void ;
    install ( ) : void ;
    random ( ) : number ;
    /**
     * Seed the generator.
     * @param opt_seed The seed to use.
     */
    seed (opt_seed ? : number ) : void ;
    uninstall ( ) : void ;
    /**
     * Constant used as part of the algorithm.
     */
    static A : number ;
    /**
     * Constant used as part of the algorithm. 2^31 - 1.
     */
    static M : number ;
    /**
     * Constant used as part of the algorithm to get values from range [0, 1).
     */
    static ONE_OVER_M_MINUS_ONE : number ;
    /**
     * Constant used as part of the algorithm. It is equal to M / A.
     */
    static Q : number ;
    /**
     * Constant used as part of the algorithm. It is equal to M % A.
     */
    static R : number ;
  }
}
declare module 'goog:goog.testing.PseudoRandom' {
  import PseudoRandom = ಠ_ಠ.clutz.goog.testing.PseudoRandom;
  export default PseudoRandom;
}
