//!! generated by clutz.
// Generated from testing/jstdasyncwrapper.js
declare namespace ಠ_ಠ.clutz.goog.testing.JsTdAsyncWrapper {
  /**
   * A fake pool that mimics the JSTD AsyncTestCase's pool object.
   */
  class Pool_ {
    private noStructuralTyping_goog_testing_JsTdAsyncWrapper_Pool_ : any;
    add (a : ( ...a : any [] ) => any , b ? : number | null , c ? : number | null , d ? : string | null ) : ( ) => any ;
    addCallback (fn : ( ...a : any [] ) => any , opt_n ? : number | null , opt_timeout ? : number | null , opt_description ? : string | null ) : ( ) => any ;
    addErrback (msg : string ) : ( ) => any ;
    maybeComplete ( ) : void ;
    noop ( ) : ( ) => any ;
  }
  /**
   * A queue that mirrors the JSTD Async Queue api but exposes a promise that
   * resolves once the queue is complete for compatibility with JsUnit.
   */
  class Queue {
    private noStructuralTyping_goog_testing_JsTdAsyncWrapper_Queue : any;
    /**
     * A queue that mirrors the JSTD Async Queue api but exposes a promise that
     * resolves once the queue is complete for compatibility with JsUnit.
     * @param testObj The test object containing all test methods. This object is passed into queue callbacks as the "this" object.
     */
    constructor (testObj : GlobalObject ) ;
    defer (stepName : string | ( (a ? : ಠ_ಠ.clutz.goog.testing.JsTdAsyncWrapper.Pool_ ) => any ) , opt_fn ? : (a ? : ಠ_ಠ.clutz.goog.testing.JsTdAsyncWrapper.Pool_ ) => any ) : void ;
    /**
     * Starts the execution.
     */
    startExecuting ( ) : ಠ_ಠ.clutz.goog.Promise < undefined > ;
  }
  /**
   * A step to be executed.
   */
  class Step_ {
    private noStructuralTyping_goog_testing_JsTdAsyncWrapper_Step_ : any;
    fn (a ? : ಠ_ಠ.clutz.goog.testing.JsTdAsyncWrapper.Pool_ ) : any ;
    name : string ;
  }
  /**
   * Wraps an object's methods by passing in a Queue that is based on the JSTD
   * async API. The queue exposes a promise that resolves when the queue
   * completes. This promise can be used in JsUnit tests.
   * @param original The original JSTD test object. The object should contain methods such as testXyz or setUp.
   */
  function convertToAsyncTestObj < T = any > (original : T ) : T ;
}
declare module 'goog:goog.testing.JsTdAsyncWrapper' {
  import JsTdAsyncWrapper = ಠ_ಠ.clutz.goog.testing.JsTdAsyncWrapper;
  export = JsTdAsyncWrapper;
}
