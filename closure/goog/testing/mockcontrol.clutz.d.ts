//!! generated by clutz.
// Generated from testing/mockcontrol.js
declare namespace ಠ_ಠ.clutz.goog.testing {
  /**
   * Controls a set of mocks.  Controlled mocks are replayed, verified, and
   * cleaned-up at the same time.
   */
  class MockControl {
    private noStructuralTyping_goog_testing_MockControl : any;
    $replayAll ( ) : void ;
    $resetAll ( ) : void ;
    $tearDown ( ) : void ;
    $verifyAll ( ) : void ;
    /**
     * Returns a Promise that resolves when all of the controlled mocks have
     * finished and verified.
     */
    $waitAndVerifyAll ( ) : ಠ_ಠ.clutz.goog.Promise < undefined [] > ;
    /**
     * Takes control of this mock.
     * @param mock Mock to be controlled.
     */
    addMock (mock : ಠ_ಠ.clutz.goog.testing.MockInterface | null ) : ಠ_ಠ.clutz.goog.testing.MockInterface | null ;
    /**
     * Creates a controlled MethodMock for a constructor.  Passes its arguments
     * through to the MethodMock constructor. See
     * {@link goog.testing.createConstructorMock} for details.
     * @param scope The scope of the constructor to be mocked out.
     * @param constructorName The name of the function we're going to mock.
     * @param opt_strictness One of goog.testing.Mock.LOOSE or goog.testing.Mock.STRICT. The default is STRICT.
     */
    createConstructorMock (scope : GlobalObject | null , constructorName : string , opt_strictness ? : number ) : ಠ_ಠ.clutz.goog.testing.MockInterface ;
    /**
     * Creates a controlled FunctionMock.  Passes its arguments through to the
     * FunctionMock constructor.
     * @param opt_functionName The optional name of the function to mock set to '[anonymous mocked function]' if not passed in.
     * @param opt_strictness One of goog.testing.Mock.LOOSE or goog.testing.Mock.STRICT. The default is STRICT.
     */
    createFunctionMock (opt_functionName ? : string , opt_strictness ? : number ) : ಠ_ಠ.clutz.goog.testing.MockInterface ;
    /**
     * Creates a controlled GlobalFunctionMock.  Passes its arguments through to the
     * GlobalFunctionMock constructor.
     * @param functionName The name of the function we're going to mock.
     * @param opt_strictness One of goog.testing.Mock.LOOSE or goog.testing.Mock.STRICT. The default is STRICT.
     */
    createGlobalFunctionMock (functionName : string , opt_strictness ? : number ) : ಠ_ಠ.clutz.goog.testing.MockInterface ;
    /**
     * Creates a controlled LooseMock.  Passes its arguments through to the
     * LooseMock constructor.
     * @param objectToMock The object that should be mocked, or the constructor of an object to mock.
     * @param opt_ignoreUnexpectedCalls Whether to ignore unexpected calls.
     * @param opt_mockStaticMethods An optional argument denoting that a mock should be constructed from the static functions of a class.
     * @param opt_createProxy An optional argument denoting that a proxy for the target mock should be created.
     */
    createLooseMock (objectToMock : GlobalObject | null , opt_ignoreUnexpectedCalls ? : boolean , opt_mockStaticMethods ? : boolean , opt_createProxy ? : boolean ) : ಠ_ಠ.clutz.goog.testing.LooseMock ;
    /**
     * Creates a controlled MethodMock.  Passes its arguments through to the
     * MethodMock constructor.
     * @param scope The scope of the method to be mocked out.
     * @param functionName The name of the function we're going to mock.
     * @param opt_strictness One of goog.testing.Mock.LOOSE or goog.testing.Mock.STRICT. The default is STRICT.
     */
    createMethodMock (scope : GlobalObject | null , functionName : string , opt_strictness ? : number ) : ಠ_ಠ.clutz.goog.testing.MockInterface ;
    /**
     * Creates a controlled StrictMock.  Passes its arguments through to the
     * StrictMock constructor.
     * @param objectToMock The object that should be mocked, or the constructor of an object to mock.
     * @param opt_mockStaticMethods An optional argument denoting that a mock should be constructed from the static functions of a class.
     * @param opt_createProxy An optional argument denoting that a proxy for the target mock should be created.
     */
    createStrictMock (objectToMock : GlobalObject | null , opt_mockStaticMethods ? : boolean , opt_createProxy ? : boolean ) : ಠ_ಠ.clutz.goog.testing.StrictMock ;
  }
}
declare module 'goog:goog.testing.MockControl' {
  import MockControl = ಠ_ಠ.clutz.goog.testing.MockControl;
  export default MockControl;
}
