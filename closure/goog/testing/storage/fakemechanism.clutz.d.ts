//!! generated by clutz.
// Generated from testing/storage/fakemechanism.js
declare namespace ಠ_ಠ.clutz.goog.testing.storage {
  export import FakeMechanism = ಠ_ಠ.clutz.module$contents$goog$testing$storage$FakeMechanism_FakeMechanism ;
}
declare module 'goog:goog.testing.storage.FakeMechanism' {
  import FakeMechanism = ಠ_ಠ.clutz.goog.testing.storage.FakeMechanism;
  export default FakeMechanism;
}
// Generated from testing/storage/fakemechanism.js
declare namespace ಠ_ಠ.clutz {
  /**
   * Creates a fake iterable mechanism.
   */
  class module$contents$goog$testing$storage$FakeMechanism_FakeMechanism extends ಠ_ಠ.clutz.module$exports$goog$storage$mechanism$IterableMechanism {
    private noStructuralTyping_module$contents$goog$testing$storage$FakeMechanism_FakeMechanism : any;
    /**
     * Creates a fake iterable mechanism.
     */
    constructor ( ) ;
    /**
     * Returns an iterator that iterates over the elements in the storage. Will
     * throw goog.iter.StopIteration after the last element.
     * @param opt_keys True to iterate over the keys. False to iterate over the values.  The default value is false.
     */
    __iterator__ (opt_keys ? : boolean ) : ಠ_ಠ.clutz.module$exports$goog$iter$Iterator ;
    /**
     * Get the value stored under a key.
     * @param key The key to get.
     */
    get (key : string ) : string | null ;
    /**
     * Remove a key and its value.
     * @param key The key to remove.
     */
    remove (key : string ) : void ;
    /**
     * Set a value for a key.
     * @param key The key to set.
     * @param value The string to save.
     */
    set (key : string , value : string ) : void ;
  }
}
declare namespace ಠ_ಠ.clutz {
  export import module$exports$goog$testing$storage$FakeMechanism = ಠ_ಠ.clutz.module$contents$goog$testing$storage$FakeMechanism_FakeMechanism ;
}
