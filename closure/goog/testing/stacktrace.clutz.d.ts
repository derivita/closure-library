//!! generated by clutz.
// Generated from testing/stacktrace.js
declare namespace ಠ_ಠ.clutz.goog.testing.stacktrace {
  /**
   * Brings the stack trace into a common format across browsers.
   * @param stack Browser-specific stack trace.
   */
  function canonicalize (stack : string ) : string ;
  /**
   * Gets the native stack trace if available otherwise follows the call chain.
   */
  function get ( ) : string ;
  /**
   * Sets function to deobfuscate function names.
   * @param fn function to deobfuscate function names.
   */
  function setDeobfuscateFunctionName (fn : (a : string ) => string ) : void ;
}
declare module 'goog:goog.testing.stacktrace' {
  import stacktrace = ಠ_ಠ.clutz.goog.testing.stacktrace;
  export = stacktrace;
}
// Generated from testing/stacktrace.js
declare namespace ಠ_ಠ.clutz.goog.testing.stacktrace {
  /**
   * Class representing one stack frame.
   */
  class Frame {
    private noStructuralTyping_goog_testing_stacktrace_Frame : any;
    constructor (context : string , name : string , alias : string , path : string ) ;
    alias_ : string ;
    context_ : string ;
    name_ : string ;
    path_ : string ;
    getName ( ) : string ;
    isAnonymous ( ) : boolean ;
    /**
     * Brings one frame of the stack trace into a common format across browsers.
     */
    toCanonicalString ( ) : string ;
  }
}
declare module 'goog:goog.testing.stacktrace.Frame' {
  import Frame = ಠ_ಠ.clutz.goog.testing.stacktrace.Frame;
  export default Frame;
}
