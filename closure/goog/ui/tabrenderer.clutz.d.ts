//!! generated by clutz.
// Generated from ui/tabrenderer.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * Default renderer for {@link goog.ui.Tab}s, based on the `TabPane` code.
   */
  class TabRenderer extends ಠ_ಠ.clutz.goog.ui.ControlRenderer {
    private noStructuralTyping_goog_ui_TabRenderer : any;
    /**
     * Default renderer for {@link goog.ui.Tab}s, based on the `TabPane` code.
     */
    constructor ( ) ;
    /**
     * Returns the tab's contents wrapped in a DIV, with the renderer's own CSS
     * class and additional state-specific classes applied to it.  Creates the
     * following DOM structure:
     *
     * <div class="goog-tab" title="Title">Content</div>
     * @param tab Tab to render.
     */
    createDom (tab : ಠ_ಠ.clutz.goog.ui.Control | null ) : GlobalElement | null ;
    /**
     * Decorates the element with the tab.  Initializes the tab's ID, content,
     * tooltip, and state based on the ID of the element, its title, child nodes,
     * and CSS classes, respectively.  Returns the element.
     * @param tab Tab to decorate the element.
     * @param element Element to decorate.
     */
    decorate (tab : ಠ_ಠ.clutz.goog.ui.Control | null , element : GlobalElement | null ) : GlobalElement | null ;
    /**
     * Returns the ARIA role to be applied to the tab element.
     * See http://wiki/Main/ARIA for more info.
     */
    getAriaRole ( ) : ಠ_ಠ.clutz.goog.a11y.aria.Role | null ;
    /**
     * Returns the CSS class name to be applied to the root element of all tabs
     * rendered or decorated using this renderer.
     */
    getCssClass ( ) : string ;
    /**
     * Takes a tab's root element, and returns its tooltip text, or the empty
     * string if the element has no tooltip.
     * @param element The tab's root element.
     */
    getTooltip (element : GlobalElement | null ) : string ;
    /**
     * Takes a tab's root element and a tooltip string, and updates the element
     * with the new tooltip.  If the new tooltip is null or undefined, sets the
     * element's title to the empty string.
     * @param element The tab's root element.
     * @param tooltip New tooltip text (if any).
     */
    setTooltip (element : GlobalElement | null , tooltip : string | null | undefined ) : void ;
    /**
     * Default CSS class to be applied to the root element of components rendered
     * by this renderer.
     */
    static CSS_CLASS : string ;
    static getInstance ( ) : ಠ_ಠ.clutz.goog.ui.TabRenderer ;
    static instance_ : ಠ_ಠ.clutz.goog.ui.TabRenderer ;
  }
}
declare module 'goog:goog.ui.TabRenderer' {
  import TabRenderer = ಠ_ಠ.clutz.goog.ui.TabRenderer;
  export default TabRenderer;
}
