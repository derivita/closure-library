//!! generated by clutz.
// Generated from ui/charcounter.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * CharCounter widget. Counts the number of characters in a input field or a
   * text box and displays the number of additional characters that may be
   * entered before the maximum length is reached.
   */
  class CharCounter extends ಠ_ಠ.clutz.goog.events.EventTarget {
    private noStructuralTyping_goog_ui_CharCounter : any;
    /**
     * CharCounter widget. Counts the number of characters in a input field or a
     * text box and displays the number of additional characters that may be
     * entered before the maximum length is reached.
     * @param elInput Input or text area element to count the number of characters in.
     * @param elCount HTML element to display the remaining number of characters in. You can pass in null for this if you don't want to expose the number of chars remaining.
     * @param maxLength The maximum length.
     * @param opt_displayMode Display mode for this char counter. Defaults to {@link goog.ui.CharCounter.Display.REMAINING}.
     */
    constructor (elInput : HTMLInputElement | null | HTMLTextAreaElement , elCount : GlobalElement | null , maxLength : number , opt_displayMode ? : ಠ_ಠ.clutz.goog.ui.CharCounter.Display ) ;
    checkLength ( ) : void ;
    disposeInternal ( ) : void ;
    /**
     * Returns the display mode.
     */
    getDisplayMode ( ) : ಠ_ಠ.clutz.goog.ui.CharCounter.Display ;
    /**
     * Returns the maximum length.
     */
    getMaxLength ( ) : number ;
    /**
     * Sets the display mode.
     * @param displayMode The display mode.
     */
    setDisplayMode (displayMode : ಠ_ಠ.clutz.goog.ui.CharCounter.Display ) : void ;
    /**
     * Sets the maximum length.
     * @param maxLength The maximum length.
     */
    setMaxLength (maxLength : number ) : void ;
  }
}
declare module 'goog:goog.ui.CharCounter' {
  import CharCounter = ಠ_ಠ.clutz.goog.ui.CharCounter;
  export default CharCounter;
}
// Generated from ui/charcounter.js
declare namespace ಠ_ಠ.clutz.goog.ui.CharCounter {
  /**
   * Display mode for the char counter.
   */
  /**
   * Display mode for the char counter.
   */
  enum Display {
    INCREMENTAL = 1.0 ,
    REMAINING = 0.0 ,
  }
}
declare module 'goog:goog.ui.CharCounter.Display' {
  import Display = ಠ_ಠ.clutz.goog.ui.CharCounter.Display;
  export default Display;
}
