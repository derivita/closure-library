//!! generated by clutz.
// Generated from ui/toolbarseparatorrenderer.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * Renderer for toolbar separators.
   */
  class ToolbarSeparatorRenderer extends ಠ_ಠ.clutz.goog.ui.MenuSeparatorRenderer {
    private noStructuralTyping_goog_ui_ToolbarSeparatorRenderer : any;
    /**
     * Renderer for toolbar separators.
     */
    constructor ( ) ;
    /**
     * Returns a styled toolbar separator implemented by the following DOM:
     *
     * <div class="goog-toolbar-separator goog-inline-block">&nbsp;</div>
     *
     * Overrides {@link goog.ui.MenuSeparatorRenderer#createDom}.
     * @param separator goog.ui.Separator to render.
     */
    createDom (separator : ಠ_ಠ.clutz.goog.ui.Control | null ) : GlobalElement ;
    /**
     * Takes an existing element, and decorates it with the separator.  Overrides
     * {@link goog.ui.MenuSeparatorRenderer#decorate}.
     * @param separator goog.ui.Separator to decorate the element.
     * @param element Element to decorate.
     */
    decorate (separator : ಠ_ಠ.clutz.goog.ui.Control | null , element : GlobalElement | null ) : GlobalElement ;
    /**
     * Returns the CSS class to be applied to the root element of components
     * rendered using this renderer.
     */
    getCssClass ( ) : string ;
    /**
     * Default CSS class to be applied to the root element of components rendered
     * by this renderer.
     */
    static CSS_CLASS : string ;
    static getInstance ( ) : ಠ_ಠ.clutz.goog.ui.ToolbarSeparatorRenderer ;
    static instance_ : ಠ_ಠ.clutz.goog.ui.ToolbarSeparatorRenderer ;
  }
}
declare module 'goog:goog.ui.ToolbarSeparatorRenderer' {
  import ToolbarSeparatorRenderer = ಠ_ಠ.clutz.goog.ui.ToolbarSeparatorRenderer;
  export default ToolbarSeparatorRenderer;
}
