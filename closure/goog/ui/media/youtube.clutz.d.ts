//!! generated by clutz.
// Generated from ui/media/youtube.js
declare namespace ಠ_ಠ.clutz.goog.ui.media {
  /**
   * The `goog.ui.media.Youtube` media data model. It stores a required
   * `videoId` field, sets the youtube URL, and allows a few optional
   * parameters.
   */
  class YoutubeModel extends ಠ_ಠ.clutz.goog.ui.media.MediaModel {
    private noStructuralTyping_goog_ui_media_YoutubeModel : any;
    /**
     * The `goog.ui.media.Youtube` media data model. It stores a required
     * `videoId` field, sets the youtube URL, and allows a few optional
     * parameters.
     * @param videoId The youtube video id.
     * @param opt_caption An optional caption of the youtube video.
     * @param opt_description An optional description of the youtube video.
     */
    constructor (videoId : string , opt_caption ? : string , opt_description ? : string ) ;
    /**
     * Gets the Youtube video id.
     */
    getVideoId ( ) : string ;
    /**
     * The opposite of `goog.ui.media.Youtube.newInstance`: it takes a videoId
     * and returns a youtube URL.
     * @param videoId The youtube video ID.
     */
    static buildUrl (videoId : string ) : string ;
    /**
     * A static auxiliary method that builds URL of the flash movie to be embedded,
     * out of the youtube video id.
     * @param videoId The youtube video ID.
     * @param opt_autoplay Whether the flash movie should start playing as soon as it is shown, or if it should show a 'play' button.
     */
    static getFlashUrl (videoId : string , opt_autoplay ? : boolean ) : ಠ_ಠ.clutz.goog.html.TrustedResourceUrl ;
    /**
     * A static auxiliary method that builds a static image URL with a preview of
     * the youtube video.
     *
     * NOTE(goto): patterned after Gmail's gadgets/youtube,
     *
     * TODO(goto): how do I specify the width/height of the resulting image on the
     * url ? is there an official API for https://ytimg.com ?
     * @param youtubeId The youtube video ID.
     */
    static getThumbnailUrl (youtubeId : string ) : string ;
    /**
     * A auxiliary static method that parses a youtube URL, extracting the ID of the
     * video, and builds a YoutubeModel.
     * @param youtubeUrl A youtube URL.
     * @param opt_caption An optional caption of the youtube video.
     * @param opt_description An optional description of the youtube video.
     */
    static newInstance (youtubeUrl : string , opt_caption ? : string , opt_description ? : string ) : ಠ_ಠ.clutz.goog.ui.media.YoutubeModel ;
  }
}
declare module 'goog:goog.ui.media.YoutubeModel' {
  import YoutubeModel = ಠ_ಠ.clutz.goog.ui.media.YoutubeModel;
  export default YoutubeModel;
}
