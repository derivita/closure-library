//!! generated by clutz.
// Generated from ui/rangemodel.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * Creates a range model
   */
  class RangeModel extends ಠ_ಠ.clutz.goog.events.EventTarget {
    private noStructuralTyping_goog_ui_RangeModel : any;
    /**
     * Creates a range model
     */
    constructor ( ) ;
    getExtent ( ) : number ;
    getMaximum ( ) : number ;
    getMinimum ( ) : number ;
    /**
     * Returns the step value. The step value is used to determine how to round the
     * value.
     */
    getStep ( ) : number | null ;
    getValue ( ) : number ;
    /**
     * Rounds to the closest step.
     * @param value The number to round.
     */
    roundToStep (value : number ) : number ;
    /**
     * Rounds to the closest step using the minimum value as the base.
     * @param value The number to round.
     */
    roundToStepWithMin (value : number ) : number ;
    /**
     * Sets the extent. The extent is the 'size' of the value.
     * @param extent The new extent.
     */
    setExtent (extent : number ) : void ;
    /**
     * Sets the maximum
     * @param maximum The new maximum.
     */
    setMaximum (maximum : number ) : void ;
    /**
     * Sets the minimum
     * @param minimum The new minimum.
     */
    setMinimum (minimum : number ) : void ;
    /**
     * Sets the model to mute / unmute.
     * @param muteValue Whether or not to mute the range, i.e., suppress any CHANGE events.
     */
    setMute (muteValue : boolean ) : void ;
    /**
     * Sets the step. The step value is used to determine how to round the value.
     * @param step The step size.
     */
    setStep (step : number | null ) : void ;
    /**
     * Sets the value.
     * @param value The new value.
     */
    setValue (value : number ) : void ;
  }
}
declare module 'goog:goog.ui.RangeModel' {
  import RangeModel = ಠ_ಠ.clutz.goog.ui.RangeModel;
  export default RangeModel;
}
