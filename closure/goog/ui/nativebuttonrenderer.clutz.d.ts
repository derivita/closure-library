//!! generated by clutz.
// Generated from ui/nativebuttonrenderer.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * Renderer for {@link goog.ui.Button}s.  Renders and decorates native HTML
   * button elements.  Since native HTML buttons have built-in support for many
   * features, overrides many expensive (and redundant) superclass methods to
   * be no-ops.
   */
  class NativeButtonRenderer extends ಠ_ಠ.clutz.goog.ui.ButtonRenderer {
    private noStructuralTyping_goog_ui_NativeButtonRenderer : any;
    /**
     * Renderer for {@link goog.ui.Button}s.  Renders and decorates native HTML
     * button elements.  Since native HTML buttons have built-in support for many
     * features, overrides many expensive (and redundant) superclass methods to
     * be no-ops.
     */
    constructor ( ) ;
    /**
     * Overrides {@link goog.ui.ButtonRenderer#canDecorate} by returning true only
     * if the element is an HTML button.
     * @param element Element to decorate.
     */
    canDecorate (element : GlobalElement | null ) : boolean ;
    /**
     * Returns the button's contents wrapped in a native HTML button element.  Sets
     * the button's disabled attribute as needed.
     * @param button Button to render.
     */
    createDom (button : ಠ_ಠ.clutz.goog.ui.Control | null ) : GlobalElement ;
    decorate (button ? : any , element ? : any ) : any ;
    getAriaRole ( ) : any ;
    getValue (element ? : any ) : any ;
    /**
     * Native buttons natively support BiDi and keyboard focus.
     */
    initializeDom (button ? : any ) : void ;
    isFocusable (button ? : any ) : any ;
    setAllowTextSelection ( ) : void ;
    setFocusable ( ) : void ;
    setRightToLeft ( ) : void ;
    setState (button ? : any , state ? : any , enable ? : any ) : void ;
    setValue (element ? : any , value ? : any ) : void ;
    updateAriaState ( ) : void ;
    static getInstance ( ) : ಠ_ಠ.clutz.goog.ui.NativeButtonRenderer ;
    static instance_ : ಠ_ಠ.clutz.goog.ui.NativeButtonRenderer ;
  }
}
declare module 'goog:goog.ui.NativeButtonRenderer' {
  import NativeButtonRenderer = ಠ_ಠ.clutz.goog.ui.NativeButtonRenderer;
  export default NativeButtonRenderer;
}
