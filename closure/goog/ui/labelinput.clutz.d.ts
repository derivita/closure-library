//!! generated by clutz.
// Generated from ui/labelinput.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * This creates the label input object.
   */
  class LabelInput extends ಠ_ಠ.clutz.goog.ui.Component {
    private noStructuralTyping_goog_ui_LabelInput : any;
    /**
     * This creates the label input object.
     * @param opt_label The text to show as the label.
     * @param opt_domHelper Optional DOM helper.
     */
    constructor (opt_label ? : string , opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null ) ;
    clear ( ) : void ;
    /**
     * Creates the DOM nodes needed for the label input.
     */
    createDom ( ) : void ;
    /**
     * Decorates an existing HTML input element as a label input. If the element
     * has a "label" attribute then that will be used as the label property for the
     * label input object.
     * @param element The HTML input element to decorate.
     */
    decorateInternal (element : GlobalElement | null ) : void ;
    disposeInternal ( ) : void ;
    enterDocument ( ) : void ;
    exitDocument ( ) : void ;
    focusAndSelect ( ) : void ;
    getLabel ( ) : string ;
    /**
     * Returns the current value of the text box, returning an empty string if the
     * search box is the default value
     */
    getValue ( ) : string ;
    hasChanged ( ) : boolean ;
    hasFocus ( ) : boolean ;
    isEnabled ( ) : boolean ;
    /**
     * The CSS class name to add to the input when the user has not entered a
     * value.
     */
    labelCssClassName : string ;
    /**
     * The label restore delay after leaving the input.
     */
    protected labelRestoreDelayMs : number ;
    reset ( ) : void ;
    /**
     * Enables/Disables the label input.
     * @param enabled Whether to enable (true) or disable (false) the label input.
     */
    setEnabled (enabled : boolean ) : void ;
    /**
     * Sets the label text as aria-label, and placeholder when supported.
     * @param label The text to show as the label.
     */
    setLabel (label : string ) : void ;
    /**
     * Use this to set the value through script to ensure that the label state is
     * up to date
     * @param s The new value for the input.
     */
    setValue (s : string ) : void ;
  }
}
declare module 'goog:goog.ui.LabelInput' {
  import LabelInput = ಠ_ಠ.clutz.goog.ui.LabelInput;
  export default LabelInput;
}
