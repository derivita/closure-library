//!! generated by clutz.
// Generated from ui/bubble.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * The Bubble provides a general purpose bubble implementation that can be
   * anchored to a particular element and displayed for a period of time.
   */
  class Bubble extends ಠ_ಠ.clutz.goog.ui.Component {
    private noStructuralTyping_goog_ui_Bubble : any;
    /**
     * The Bubble provides a general purpose bubble implementation that can be
     * anchored to a particular element and displayed for a period of time.
     * @param message Message or an element to display inside the bubble. Strings are treated as plain-text and will be HTML escaped.
     * @param opt_config The configuration for the bubble. If not specified, the default configuration will be used. {@see goog.ui.Bubble.defaultConfig}.
     * @param opt_domHelper Optional DOM helper.
     */
    constructor (message : string | ಠ_ಠ.clutz.goog.html.SafeHtml | GlobalElement | null , opt_config ? : GlobalObject | null , opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null ) ;
    /**
     * Attaches the bubble to an anchor element. Computes the positioning and
     * orientation of the bubble.
     * @param anchorElement The element to which we are attaching.
     */
    attach (anchorElement : GlobalElement | null ) : void ;
    createDom ( ) : void ;
    disposeInternal ( ) : void ;
    /**
     * Returns an AnchoredPosition that will position the bubble optimally
     * given the position of the anchor element and the size of the viewport.
     * @param anchorElement The element to which the bubble is attached.
     */
    getComputedAnchoredPosition (anchorElement : GlobalElement | null ) : ಠ_ಠ.clutz.goog.positioning.AnchoredPosition ;
    isVisible ( ) : boolean ;
    /**
     * Sets whether the bubble should be automatically hidden whenever user clicks
     * outside the bubble element.
     * @param autoHide Whether to hide if user clicks outside the bubble.
     */
    setAutoHide (autoHide : boolean ) : void ;
    /**
     * Sets the corner of the bubble to used in the positioning algorithm.
     * @param corner The bubble corner used for positioning constants.
     */
    setPinnedCorner (corner : ಠ_ಠ.clutz.goog.positioning.Corner | null ) : void ;
    /**
     * Sets the position of the bubble. Pass null for corner in AnchoredPosition
     * for corner to be computed automatically.
     * @param position The position of the bubble.
     */
    setPosition (position : ಠ_ಠ.clutz.goog.positioning.AbstractPosition | null ) : void ;
    /**
     * Sets the timeout after which bubble hides itself.
     * @param timeout Timeout of the bubble.
     */
    setTimeout (timeout : number ) : void ;
    /**
     * Sets whether the bubble should be visible.
     * @param visible Desired visibility state.
     */
    setVisible (visible : boolean ) : void ;
    /**
     * A default configuration for the bubble.
     */
    static defaultConfig : GlobalObject | null ;
  }
}
declare module 'goog:goog.ui.Bubble' {
  import Bubble = ಠ_ಠ.clutz.goog.ui.Bubble;
  export default Bubble;
}
