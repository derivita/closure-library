//!! generated by clutz.
// Generated from ui/ac/richremotearraymatcher.js
declare namespace ಠ_ಠ.clutz.goog.ui.ac {
  /**
   * An array matcher that requests rich matches via ajax and converts them into
   * rich rows.
   */
  class RichRemoteArrayMatcher extends ಠ_ಠ.clutz.goog.ui.ac.RemoteArrayMatcher {
    private noStructuralTyping_goog_ui_ac_RichRemoteArrayMatcher : any;
    /**
     * An array matcher that requests rich matches via ajax and converts them into
     * rich rows.
     * @param url The Uri which generates the auto complete matches.  The search term is passed to the server as the 'token' query param.
     * @param opt_noSimilar If true, request that the server does not do similarity matches for the input token against the dictionary. The value is sent to the server as the 'use_similar' query param which is either "1" (opt_noSimilar==false) or "0" (opt_noSimilar==true).
     */
    constructor (url : string , opt_noSimilar ? : boolean ) ;
    /**
     * Retrieve a set of matching rows from the server via ajax and convert them
     * into rich rows.
     * @param token The text that should be matched; passed to the server as the 'token' query param.
     * @param maxMatches The maximum number of matches requested from the server; passed as the 'max_matches' query param. The server is responsible for limiting the number of matches that are returned.
     * @param matchHandler Callback to execute on the result after matching.
     */
    requestMatchingRows (token : string , maxMatches : number , matchHandler : Function | null ) : void ;
    /**
     * Sets the function building the rows.
     * @param rowBuilder A function(type, response) converting the type and the server response to an object with two methods: render(node, token) and select(target).
     */
    setRowBuilder (rowBuilder : ಠ_ಠ.clutz.goog.ui.ac.RichRemoteArrayMatcher.RowBuilder ) : void ;
    /**
     * Set the filter that is called before the array matches are returned.
     * @param rowFilter A function(rows) that returns an array of rows as a subset of the rows input array.
     */
    setRowFilter (rowFilter : Function | null ) : void ;
  }
}
// Generated from ui/ac/richremotearraymatcher.js
declare namespace ಠ_ಠ.clutz.goog.ui.ac.RichRemoteArrayMatcher {
  type RowBuilder = (a : string , b : any ) => { render ? : (a : GlobalElement , b : string ) => any , select ? : (a : GlobalElement ) => any } ;
}
declare module 'goog:goog.ui.ac.RichRemoteArrayMatcher' {
  import RichRemoteArrayMatcher = ಠ_ಠ.clutz.goog.ui.ac.RichRemoteArrayMatcher;
  export default RichRemoteArrayMatcher;
}
