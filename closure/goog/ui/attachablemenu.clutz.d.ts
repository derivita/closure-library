//!! generated by clutz.
// Generated from ui/attachablemenu.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * An implementation of a menu that can attach itself to DOM element that
   * are annotated appropriately.
   *
   * The following attributes are used by the AttachableMenu
   *
   * menu-item - Should be set on DOM elements that function as items in the
   * menu that can be selected.
   * classNameSelected - A class that will be added to the element's class names
   * when the item is selected via keyboard or mouse.
   */
  class AttachableMenu extends ಠ_ಠ.clutz.goog.ui.MenuBase {
    private noStructuralTyping_goog_ui_AttachableMenu : any;
    /**
     * An implementation of a menu that can attach itself to DOM element that
     * are annotated appropriately.
     *
     * The following attributes are used by the AttachableMenu
     *
     * menu-item - Should be set on DOM elements that function as items in the
     * menu that can be selected.
     * classNameSelected - A class that will be added to the element's class names
     * when the item is selected via keyboard or mouse.
     * @param opt_element A DOM element for the popup.
     */
    constructor (opt_element ? : GlobalElement | null ) ;
    disposeInternal ( ) : void ;
    /**
     * Sets the class name to use for menu items
     */
    getItemClassName ( ) : string ;
    /**
     * Returns the next or previous item. Used for up/down arrows.
     * @param prev True to go to the previous element instead of next.
     */
    protected getNextPrevItem (prev : boolean ) : GlobalElement | null ;
    /**
     * Returns the selected item
     */
    getSelectedItem ( ) : GlobalElement | null ;
    /**
     * Sets the class name to use for selected menu items
     * todo(jonp) - reevaluate if we can simulate pseudo classes in IE
     */
    getSelectedItemClassName ( ) : string ;
    /**
     * Key down handler for the menu.
     * @param e The event object.
     */
    protected onKeyDown (e : ಠ_ಠ.clutz.goog.events.KeyEvent | null ) : void ;
    /**
     * Mouse down handler for the menu. Prevents default to avoid text selection.
     * @param e The event object.
     */
    protected onMouseDown (a : ಠ_ಠ.clutz.goog.events.Event ) : any ;
    /**
     * Mouse out handler for the menu.
     * @param e The event object.
     */
    protected onMouseOut (e : ಠ_ಠ.clutz.goog.events.Event | null ) : void ;
    /**
     * Mouse over handler for the menu.
     * @param e The event object.
     */
    protected onMouseOver (e : ಠ_ಠ.clutz.goog.events.Event | null ) : void ;
    /**
     * Mouse up handler for the menu.
     * @param e The event object.
     */
    protected onMouseUp (e : ಠ_ಠ.clutz.goog.events.Event | null ) : void ;
    /**
     * Called after the menu is shown.
     */
    protected onShow ( ) : void ;
    /**
     * Sets the class name to use for menu items
     * @param name The class name to use for items.
     */
    setItemClassName (name : string ) : void ;
    setSelectedItem (obj ? : any ) : void ;
    /**
     * Sets the class name to use for selected menu items
     * todo(jonp) - reevaluate if we can simulate pseudo classes in IE
     * @param name The class name to use for selected items.
     */
    setSelectedItemClassName (name : string ) : void ;
    showPopupElement ( ) : void ;
  }
}
declare module 'goog:goog.ui.AttachableMenu' {
  import AttachableMenu = ಠ_ಠ.clutz.goog.ui.AttachableMenu;
  export default AttachableMenu;
}
