//!! generated by clutz.
// Generated from ui/dimensionpickerrenderer.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * Default renderer for {@link goog.ui.DimensionPicker}s.  Renders the
   * palette as two divs, one with the un-highlighted background, and one with the
   * highlighted background.
   */
  class DimensionPickerRenderer extends ಠ_ಠ.clutz.goog.ui.ControlRenderer {
    private noStructuralTyping_goog_ui_DimensionPickerRenderer : any;
    /**
     * Default renderer for {@link goog.ui.DimensionPicker}s.  Renders the
     * palette as two divs, one with the un-highlighted background, and one with the
     * highlighted background.
     */
    constructor ( ) ;
    /**
     * Overrides {@link goog.ui.ControlRenderer#canDecorate} to allow decorating
     * empty DIVs only.
     * @param element The element to check.
     */
    canDecorate (element : GlobalElement | null ) : boolean ;
    /**
     * Creates a div and adds the appropriate contents to it.
     * @param control Picker to render.
     */
    createDom (control : ಠ_ಠ.clutz.goog.ui.Control | null ) : GlobalElement ;
    /**
     * Overrides {@link goog.ui.ControlRenderer#decorate} to decorate empty DIVs.
     * @param control goog.ui.DimensionPicker to decorate.
     * @param element The element to decorate.
     */
    decorate (control : ಠ_ಠ.clutz.goog.ui.Control | null , element : GlobalElement | null ) : GlobalElement | null ;
    /**
     * Returns the CSS class to be applied to the root element of components
     * rendered using this renderer.
     */
    getCssClass ( ) : string ;
    /**
     * Returns the x offset in to the grid for the given mouse x position.
     * @param palette The table size palette.
     * @param x The mouse event x position.
     */
    getGridOffsetX (palette : ಠ_ಠ.clutz.goog.ui.DimensionPicker | null , x : number ) : number ;
    /**
     * Returns the y offset in to the grid for the given mouse y position.
     * @param palette The table size palette.
     * @param y The mouse event y position.
     */
    getGridOffsetY (palette : ಠ_ಠ.clutz.goog.ui.DimensionPicker | null , y : number ) : number ;
    /**
     * Get the element to listen for mouse move events on.
     * @param palette The palette to listen on.
     */
    getMouseMoveElement (palette : ಠ_ಠ.clutz.goog.ui.DimensionPicker | null ) : GlobalElement | null ;
    /**
     * Initializes the control's DOM when the control enters the document.  Called
     * from {@link goog.ui.Control#enterDocument}.
     * @param control Palette whose DOM is to be initialized as it enters the document.
     */
    initializeDom (control : ಠ_ಠ.clutz.goog.ui.Control | null ) : void ;
    /**
     * Position the mouse catcher such that it receives mouse events past the
     * selectedsize up to the maximum size.  Takes care to not introduce scrollbars.
     * Should be called on enter document and when the window changes size.
     * @param palette The table size palette.
     */
    positionMouseCatcher (palette : ಠ_ಠ.clutz.goog.ui.DimensionPicker | null ) : void ;
    /**
     * Sets the highlighted size. Does nothing if the palette hasn't been rendered.
     * @param palette The table size palette.
     * @param columns The number of columns to highlight.
     * @param rows The number of rows to highlight.
     */
    setHighlightedSize (palette : ಠ_ಠ.clutz.goog.ui.DimensionPicker | null , columns : number , rows : number ) : void ;
    /**
     * Scales various elements in order to update the palette's size.
     * @param palette The palette object.
     * @param element The element to set the style of.
     */
    updateSize (palette : ಠ_ಠ.clutz.goog.ui.DimensionPicker | null , element : GlobalElement | null ) : void ;
    /**
     * Default CSS class to be applied to the root element of components rendered
     * by this renderer.
     */
    static CSS_CLASS : string ;
    static getInstance ( ) : ಠ_ಠ.clutz.goog.ui.DimensionPickerRenderer ;
    static instance_ : ಠ_ಠ.clutz.goog.ui.DimensionPickerRenderer ;
  }
}
declare module 'goog:goog.ui.DimensionPickerRenderer' {
  import DimensionPickerRenderer = ಠ_ಠ.clutz.goog.ui.DimensionPickerRenderer;
  export default DimensionPickerRenderer;
}
