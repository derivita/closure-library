//!! generated by clutz.
// Generated from ui/slider.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * This creates a slider object.
   */
  class Slider extends ಠ_ಠ.clutz.goog.ui.SliderBase {
    private noStructuralTyping_goog_ui_Slider : any;
    /**
     * This creates a slider object.
     * @param opt_domHelper Optional DOM helper.
     * @param opt_labelFn An optional function mapping slider values to a description of the value.
     */
    constructor (opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null , opt_labelFn ? : (a : number ) => string | null ) ;
    createThumbs ( ) : void ;
    /**
     * Returns CSS class applied to the slider element.
     * @param orient Orientation of the slider.
     */
    protected getCssClass (orient : ಠ_ಠ.clutz.goog.ui.SliderBase.Orientation | null ) : string ;
    /**
     * Returns CSS class applied to the slider's thumb element.
     */
    protected getThumbCssClass ( ) : string ;
    /**
     * The prefix we use for the CSS class names for the slider and its elements.
     */
    static CSS_CLASS_PREFIX : string ;
    /**
     * CSS class name for the single thumb element.
     */
    static THUMB_CSS_CLASS : string ;
  }
}
declare module 'goog:goog.ui.Slider' {
  import Slider = ಠ_ಠ.clutz.goog.ui.Slider;
  export default Slider;
}
// Generated from ui/slider.js
declare namespace ಠ_ಠ.clutz.goog.ui.Slider {
  /**
   * Expose Enum of superclass (representing the orientation of the slider) within
   * Slider namespace.
   */
  //!! goog.ui.Slider.Orientation aliases enum goog.ui.SliderBase.Orientation
  export import Orientation = goog.ui.SliderBase.Orientation ;
}
declare module 'goog:goog.ui.Slider.Orientation' {
  import Orientation = ಠ_ಠ.clutz.goog.ui.Slider.Orientation;
  export default Orientation;
}
