//!! generated by clutz.
// Generated from ui/advancedtooltip.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * Advanced tooltip widget with cursor tracking abilities. Works like a regular
   * tooltip but can track the cursor position and direction to determine if the
   * tooltip should be dismissed or remain open.
   */
  class AdvancedTooltip extends ಠ_ಠ.clutz.goog.ui.Tooltip {
    private noStructuralTyping_goog_ui_AdvancedTooltip : any;
    /**
     * Advanced tooltip widget with cursor tracking abilities. Works like a regular
     * tooltip but can track the cursor position and direction to determine if the
     * tooltip should be dismissed or remain open.
     * @param opt_el Element to display tooltip for, either element reference or string id.
     * @param opt_str Text message to display in tooltip.
     * @param opt_domHelper Optional DOM helper.
     */
    constructor (opt_el ? : GlobalElement | null | string , opt_str ? : string | null , opt_domHelper ? : ಠ_ಠ.clutz.goog.dom.DomHelper | null ) ;
    getCursorTracking ( ) : boolean ;
    getCursorTrackingHideDelayMs ( ) : number ;
    /**
     * Override hide delay with cursor tracking hide delay while tracking.
     */
    getHideDelayMs ( ) : number ;
    getHotSpotPadding ( ) : ಠ_ಠ.clutz.goog.math.Box | null ;
    /**
     * Handler for mouse move events.
     * @param event Event object.
     */
    protected handleMouseMove (event : ಠ_ಠ.clutz.goog.events.BrowserEvent | null ) : void ;
    /**
     * Handler for mouse over events for the tooltip element.
     * @param event Event object.
     */
    protected handleTooltipMouseOver (event : ಠ_ಠ.clutz.goog.events.BrowserEvent | null ) : void ;
    /**
     * Checks whether the supplied coordinate is inside the tooltip, including
     * padding if any.
     * @param coord Coordinate being tested.
     */
    isCoordinateInTooltip (coord : ಠ_ಠ.clutz.goog.math.Coordinate | null ) : boolean ;
    /**
     * Returns true if the mouse is in the tooltip.
     */
    isMouseInTooltip ( ) : boolean ;
    /**
     * Called by timer from mouse out handler. Hides tooltip if cursor is still
     * outside element and tooltip.
     * @param el Anchor when hide timer was started.
     */
    maybeHide (el : GlobalElement | null | undefined ) : void ;
    /**
     * Called after the popup is hidden.
     */
    protected onHide ( ) : void ;
    /**
     * Called after the popup is shown.
     */
    protected onShow ( ) : void ;
    /**
     * Forces the recalculation of the hotspot on the next mouse over event.
     */
    resetHotSpot ( ) : void ;
    /**
     * Sets whether to track the cursor and thereby close the tooltip if it moves
     * away from the tooltip and keep it open if it moves towards it.
     * @param b Whether to track the cursor.
     */
    setCursorTracking (b : boolean ) : void ;
    /**
     * Sets delay in milliseconds before tooltips are hidden if cursor tracking is
     * enabled and the cursor is moving away from the tooltip.
     * @param delay The delay in milliseconds.
     */
    setCursorTrackingHideDelayMs (delay : number ) : void ;
    /**
     * Sets margin around the tooltip where the cursor is allowed without dismissing
     * the tooltip.
     * @param opt_box The margin around the tooltip.
     */
    setHotSpotPadding (opt_box ? : ಠ_ಠ.clutz.goog.math.Box | null ) : void ;
  }
}
declare module 'goog:goog.ui.AdvancedTooltip' {
  import AdvancedTooltip = ಠ_ಠ.clutz.goog.ui.AdvancedTooltip;
  export default AdvancedTooltip;
}
