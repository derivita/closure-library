//!! generated by clutz.
// Generated from ui/synthetickeyboardevent.js
declare namespace ಠ_ಠ.clutz.goog.ui {
  /**
   * Synthetic keyboard event that can be handled by `KeyboardShortcutHandler`.
   *
   * Prefer using the available `createKeyUp`, `createKeyDown`, `createKeyPress`
   * helpers over using this constructor.
   */
  class SyntheticKeyboardEvent extends ಠ_ಠ.clutz.goog.events.Event {
    private noStructuralTyping_goog_ui_SyntheticKeyboardEvent : any;
    /**
     * Synthetic keyboard event that can be handled by `KeyboardShortcutHandler`.
     *
     * Prefer using the available `createKeyUp`, `createKeyDown`, `createKeyPress`
     * helpers over using this constructor.
     */
    constructor (type : ಠ_ಠ.clutz.goog.ui.SyntheticKeyboardEvent.Type , keyCode : number , shiftKey : boolean , altKey : boolean , ctrlKey : boolean , metaKey : boolean , target : Node , preventDefaultFn : ( ) => void , stopPropagationFn : ( ) => void ) ;
    /**
     * Creates a synthetic keydown event.
     */
    static createKeyDown (keyCode : number , shiftKey : boolean , altKey : boolean , ctrlKey : boolean , metaKey : boolean , target : Node , preventDefaultFn : ( ) => void , stopPropagationFn : ( ) => void ) : ಠ_ಠ.clutz.goog.ui.SyntheticKeyboardEvent ;
    /**
     * Creates a synthetic keypress event.
     */
    static createKeyPress (keyCode : number , shiftKey : boolean , altKey : boolean , ctrlKey : boolean , metaKey : boolean , target : Node , preventDefaultFn : ( ) => void , stopPropagationFn : ( ) => void ) : ಠ_ಠ.clutz.goog.ui.SyntheticKeyboardEvent ;
    /**
     * Creates a synthetic keyup event.
     */
    static createKeyUp (keyCode : number , shiftKey : boolean , altKey : boolean , ctrlKey : boolean , metaKey : boolean , target : Node , preventDefaultFn : ( ) => void , stopPropagationFn : ( ) => void ) : ಠ_ಠ.clutz.goog.ui.SyntheticKeyboardEvent ;
  }
}
// Generated from ui/synthetickeyboardevent.js
declare namespace ಠ_ಠ.clutz.goog.ui.SyntheticKeyboardEvent {
  /**
   * Synthetic event types.
   */
  enum Type {
    KEYDOWN = 'synthetic-keydown' ,
    KEYPRESS = 'synthetic-keypress' ,
    KEYUP = 'synthetic-keyup' ,
  }
}
declare module 'goog:goog.ui.SyntheticKeyboardEvent' {
  import SyntheticKeyboardEvent = ಠ_ಠ.clutz.goog.ui.SyntheticKeyboardEvent;
  export default SyntheticKeyboardEvent;
}
