//!! generated by clutz.
// Generated from crypt/sha2_64bit.js
declare namespace ಠ_ಠ.clutz.goog.crypt {
  /**
   * Constructs a SHA-2 64-bit cryptographic hash.
   * This class should not be used. Rather, one should use one of its
   * subclasses.
   */
  class Sha2_64bit extends ಠ_ಠ.clutz.goog.crypt.Hash {
    private noStructuralTyping_goog_crypt_Sha2_64bit : any;
    /**
     * Constructs a SHA-2 64-bit cryptographic hash.
     * This class should not be used. Rather, one should use one of its
     * subclasses.
     * @param numHashBlocks The size of the output in 16-byte blocks
     * @param initHashBlocks The hash-specific initialization vector, as a sequence of sixteen 32-bit numbers.
     */
    constructor (numHashBlocks : number , initHashBlocks : number [] ) ;
    /**
     * The number of bytes that are digested in each pass of this hasher.
     */
    blockSize : number ;
    digest ( ) : any ;
    /**
     * Resets this hash function.
     */
    reset ( ) : void ;
    update (message ? : any , opt_length ? : any ) : void ;
  }
}
declare module 'goog:goog.crypt.Sha2_64bit' {
  import Sha2_64bit = ಠ_ಠ.clutz.goog.crypt.Sha2_64bit;
  export default Sha2_64bit;
}
