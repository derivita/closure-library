//!! generated by clutz.
// Generated from history/event.js
declare namespace ಠ_ಠ.clutz.goog.history {
  /**
   * Event object dispatched after the history state has changed.
   */
  class Event extends ಠ_ಠ.clutz.goog.events.Event {
    private noStructuralTyping_goog_history_Event : any;
    /**
     * Event object dispatched after the history state has changed.
     * @param token The string identifying the new history state.
     * @param isNavigation True if the event was triggered by a browser action, such as forward or back, clicking on a link, editing the URL, or calling {@code window.history.(go|back|forward)}. False if the token has been changed by a `setToken` or `replaceToken` call.
     */
    constructor (token : string , isNavigation : boolean ) ;
    /**
     * Whether the event was triggered by browser navigation.
     */
    isNavigation : boolean ;
    /**
     * The current history state.
     */
    token : string ;
  }
}
declare module 'goog:goog.history.Event' {
  import Event = ಠ_ಠ.clutz.goog.history.Event;
  export default Event;
}
